= V4 Outline MultiLine NoSorting TabWidth=30

H="Project Outline"
/* 
********************HEADING******************** 

Project Name: Timing of HHA

Date Started: 6/18/19

Primary Investigator: CKA
Funding Source:

Primary Analyst: OKR
Secondary Analyst: EBL

Datasets Used: 

Simple Outline: This is the basic processing of the claims for NHATS, to pull them from the raw extracted annual files to multi-year files by claim type

Note--when a new year's data arrives, files should be extracted to the "extracted folder" below, which is pooled across years

*/
 
/* Stata */

global int "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data"
global final "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\final_data"
global output "D:\NHATS\Projects\home health policy\cka_timing_HHA\output\In progress"
global logs "D:\NHATS\Projects\home health policy\cka_timing_HHA\output\logs"



/*SAS */


libname medi 'D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Merged\SAS'; 
libname merged 'D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Merged\SAS';
libname proj_int 'D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data'; 
libname sas 'D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Extracted';






H="Get visit dates from rev center"

proc contents data=sas.hha_revenue_center_j_13; run;


data rev_cntr;
set sas.hha_revenue_center_j_09-sas.hha_revenue_center_j_14 sas.hha_revenue_center_15-sas.hha_revenue_center_16 sas.hha_revenue_center_k_17;
run;

proc contents data=rev_cntr; run;

data rev_cntr; keep bene_id clm_id clm_thru_dt rev_cntr_dt;
set rev_cntr;
run;

proc export data= rev_cntr outfile="D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data\rev_cntr.dta" dbms=stata replace; run; 


H="Get interview dates"
data hh;
set sas.hh_09_17;
run;

data hh (keep = bene_id admit_date index_date index_month index_year);
set hh;
index_date = admit_date;
index_month = month(admit_date);
index_year = year(admit_date);
run;

proc import out=xwalk
datafile = "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Crosswalks\xwalk_2016.dta" replace; 
run;

proc sql;
create table index as select a.*, b.spid
from hh a inner join
xwalk b 
on a.bene_id=b.bene_id;
quit;

proc sort data=index out=proj_int.index;
by bene_id index_date;
run;

H="check FFS"
libname medi 'D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Merged\SAS'; 
libname proj_int 'D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data'; 

/*sort claims denominator file*/

proc sort data=medi.mbsf_06_17 out=mbsf  nodupkey;
by bene_id year;
run;

proc sort data=proj_int.index out=index1;
by bene_id index_year;
run;

/*get mbsf just for interview year*/

proc sql; 
create table mbsf_index_year as select
a.*,b.buyin12,b.year,b.hmoind12
from index1 a inner join
mbsf b
on trim(left(a.bene_id))=trim(left(b.bene_id)) 
and a.index_year=b.year;
quit;


proc sql;
select count(distinct bene_id) from mbsf_index_year;
quit;



data mbsf_index_year2;
set mbsf_index_year;
if length(trim(left(buyin12)))=12 and index_month>0 then do;
buyin_iy=substr(trim(left(buyin12)),1,index_month);
hmo_iy=substr(trim(left(HMOIND12)),1,index_month);
end;
else do;
buyin_iy=trim(left(buyin12));
hmo_iy=trim(left(HMOIND12));
end;
format index_date date9.;
run;
proc means n;
var index_month;
run;

proc sql;
create table mbsf_index_year_bef as select
a.bene_id,a.year as index_year,
b.year as index_year_bef,
b.year, b.buyin12,b.HMOIND12
from mbsf_index_year a inner join
mbsf b
on trim(left(a.bene_id))=trim(left(b.bene_id))
and 0<a.year-b.year<=1 order by bene_id,year;
quit;


/* and the year before... 1922 have the -2 year dn file*/
proc sql;
create table mbsf_index_year_2bef as select
a.bene_id,a.bene_id,a.index_year,a.index_year_bef,
b.year as index_year_2bef,
b.year,b.buyin12,b.HMOIND12
from mbsf_index_year_bef a inner join
mbsf b
on trim(left(a.bene_id))=trim(left(b.bene_id))
and 0<a.index_year_bef-b.year<=1 order by bene_id,year;
quit;

/*merge the insurance data for death year, -1 and -2 years into single dataset*/
proc sql;
create table all_insurance as select a.*,b.buyin12 as buyin_bef,b.HMOIND12 as hmo_bef from
mbsf_index_year2 a
left join
mbsf_index_year_bef b
on trim(left(a.bene_id))=trim(left(b.bene_id)) and a.index_year=b.index_year;
quit;

proc sql;
create table all_insurance2 as select a.*,b.buyin12 as buyin_2bef,b.HMOIND12 as hmo_2bef from
all_insurance a
left join
mbsf_index_year_2bef b
on trim(left(a.bene_id))=trim(left(b.bene_id)) and a.index_year=b.index_year; 
quit;


/*merge death year and year before death buy-in and hmo variables
Trim so the final variable _6m is 6 months pre-death
Note: indicator variables for parts a and b and hmo are null if don't
have information for full 6 months pre-death*/
data all_insurance3;
set all_insurance2;
buyin_2y=trimn(left(buyin_2bef))||trimn(left(buyin_bef))||trimn(left(buyin_iy));
hmo_2y=trimn(left(hmo_2bef))||trimn(left(hmo_bef))||trimn(left(hmo_iy));

buyin_2y_r=reverse(trim(buyin_2y));
hmo_2y_r=reverse(trim(hmo_2y));


/*create length of continous a&b and non-hmo coverage vars*/
if indexc(buyin_2y_r,"0","1","2","A","B")=0 then part_ab_n_mos=length(buyin_2y_r)-1;
if indexc(buyin_2y_r,"0","1","2","A","B") then part_ab_n_mos=indexc(buyin_2y_r,"0","1","2","A","B")-1;
if indexc(hmo_2y_r,"1","2","4","A","B","C")=0 then non_hmo_d_n_mos=length(hmo_2y_r)-1;
if indexc(hmo_2y_r,"1","2","4","A","B","C") then non_hmo_d_n_mos=indexc(hmo_2y_r,"1","2","4","A","B","C")-1;
if part_ab_n_mos<=non_hmo_d_n_mos then cont_ffs_n_mos=part_ab_n_mos;
if non_hmo_d_n_mos<part_ab_n_mos then cont_ffs_n_mos=non_hmo_d_n_mos;
run;


data proj_int.ffs_before;
set all_insurance3;
run;

proc sort data=all_insurance3 nodupkey out=test;by bene_id admit_date cont_ffs_n_mos; run;

proc export data=test(keep = bene_id spid admit_date index_month index_year index_date cont_ffs_n_mos) outfile="D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data\nhats_ffs.dta" dbms=stata replace; run;

H="Dataset construction"
cap log close
log using $logs\claims_files.txt, text replace

/* Get dates from rev center */
use "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\rev_cntr.dta", clear
drop clm_thru_dt
duplicates drop 
bysort bene_id clm_id: gen obs = _n
bysort bene_id clm_id: egen num_visits = max(obs)
label var num_visits "Number of visits during episode"
reshape wide rev_cntr_dt, i(bene_id clm_id) j(obs)
tempfile dates
save `dates'

/* Pull discharge dates from IP */
use "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Merged\STATA\ip_06_17.dta" , clear

keep bene_id admit_date disch_date 
duplicates drop 
gen year = year(disch_date)
gsort bene_id year disch_date
by bene_id year: gen obs = _n
rename disch_date disch_date_ip
rename admit_date admit_date_ip
reshape wide admit_date_ip disch_date_ip, i(bene_id year) j(obs)
tempfile ip
save `ip'

/* Pull discharge dates from SNF */

use "D:\NHATS\Shared\base_data\CMS_claims\Stata\snf_09_17.dta", clear
keep bene_id admit_date disch_date
duplicates drop
gen year = year(disch_date)
gsort bene_id year disch_date
by bene_id year: gen obs = _n
rename disch_date disch_date_snf
rename admit_date admit_date_snf
reshape wide admit_date_snf disch_date_snf, i(bene_id year) j(obs)
tempfile snf
save `snf'

/* Pull dates from hospice */

use "D:\NHATS\Shared\base_data\CMS_claims\Stata\hs_09_17.dta", clear 
keep bene_id admit_date disch_date
duplicates drop
gen year = year(disch_date)
gsort bene_id year disch_date 
by bene_id year: gen obs = _n
rename disch_date disch_date_hs
rename admit_date admit_date_hs
reshape wide admit_date_hs disch_date_hs, i(bene_id year) j(obs)
tempfile hs
save `hs'

/*** Merge HH dataset with SNF, IP and rev_cntr dates ****/

use "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Merged\STATA\hh_09_17.dta" , clear
merge 1:1 bene_id clm_id using "`dates'", keep(master match) nogen 
gen year = year(admit_date)
merge m:1 bene_id year using "`ip'", keep(master match) nogen
merge m:1 bene_id year using "`snf'", keep(master match) nogen
merge m:1 bene_id year using "`hs'", keep(master match) nogen

/***** sample derivation ****/
preserve
keep bene_id
gen all = 1
duplicates drop
save $int\samplederivation.dta, replace
restore
/****************************/

gsort bene_id admit_date
by bene_id: gen next_admit = admit_date[_n+1]

gen subsq_epi = 0
replace subsq_epi = 1 if next_admit - disch_date <=60
label var subsq_epi "Subsequent HH episode <=60 post discharge of prior episode"

by bene_id: gen obs = _n
replace subsq_epi = 1 if obs==1 // ensuring first obs always counts as HH sequence

preserve
keep bene_id subsq_epi obs
reshape wide subsq_epi, i(bene_id) j(obs)
egen hh_seq = concat(subsq_epi1-subsq_epi56)
label var hh_seq "string of all HH episodes starting with first observed"
tempfile hhstring
save `hhstring'

restore
cap drop _m
merge m:1 bene_id using "`hhstring'", keepus(hh_seq) nogen   

replace hh_seq = subinstr(hh_seq,".","",. )

gen sub_hh_seq = substr(hh_seq,obs,.)       
replace sub_hh_seq = strltrim(sub_hh_seq)
label var sub_hh_seq "string of all HH episodes, starting with current"

gsort bene_id admit_date
gen new_sq = 0
by bene_id: replace new_sq = 1 if (subsq_epi[_n-1]==0 | subsq_epi[_n-1]==.) & (subsq_epi==1 | subsq_epi==0) 
label var new_sq "Start of a new HH sequence"

gen len_sq = strpos(sub_hh_seq,"0") if new_sq==1
label var len_sq "Number of HH episodes in sequence"

replace len_sq = 1 if len_sq==0

by bene_id: gen diff = admit_date - admit_date[_n-1] if new_sq==1
assert diff>60 // minimum value must be 61
drop diff 

/* Generate HH sequence ID to group HH episodes together */

set seed 45
gen sq_id = runiform()*10000000000 if new_sq==1
label var sq_id "Unique ID for HH sequences"

by bene_id: carryforward sq_id, replace

gen hosp_mid_sq = 0
label var hosp_mid_sq "# of hospitalization mid-sequence"

gen post_int = 0
label var post_int "Post-institution initiated"

gen snf_in_60 = 0
label var snf_in_60 "SNF admit within 60 days of sequence start date"

gen snf_in_12m = 0
label var snf_in_12m "SNF admit within 12m of sequence start date"

gen ip_in_60 = 0
gen ip_in_12m = 0
gen hs_in_60 = 0
gen hs_in_12m = 0
label var ip_in_60 "IP admit within 60 days of sequence start date"
label var ip_in_12m "IP admit within 12m of sequence start date"
label var hs_in_60 "Hospice admit within 60 days of sequence start date"
label var hs_in_12m "Hospice admit within 12m of sequence start date"

forvalues i = 1/14 {

replace post_int = 1 if (admit_date - disch_date_ip`i')<=14 & (admit_date - disch_date_ip`i')>=0 & new_sq==1
replace hosp_mid_sq = hosp_mid_sq + 1 if (disch_date < admit_date_ip`i') &  (admit_date_ip`i'< next_admit) & subsq_epi==1

replace ip_in_60 = 1 if (admit_date_ip`i' - admit_date)<=60 & (admit_date_ip`i' - admit_date)>=0 & new_sq==1

replace ip_in_12m = 1 if (admit_date_ip`i' - admit_date)<=365 & (admit_date_ip`i' - admit_date)>=0 & new_sq==1

}

forvalues i = 1/17 {

replace post_int = 1 if (admit_date - disch_date_snf`i')<=14 & (admit_date - disch_date_snf`i')>=0 & new_sq==1

replace snf_in_60 = 1 if (admit_date_snf`i'- admit_date)<=60 &  (admit_date_snf`i'- admit_date)>=0 & new_sq==1

replace snf_in_12m = 1 if (admit_date_snf`i'- admit_date)<=365 &  (admit_date_snf`i'- admit_date)>=0 & new_sq==1
}

forvalues i = 1/50 {

replace hs_in_60 = 1 if (admit_date_hs`i'- admit_date)<=60 &  (admit_date_hs`i'- admit_date)>=0 & new_sq==1

replace hs_in_12m = 1 if (admit_date_hs`i'- admit_date)<=365 &  (admit_date_hs`i'- admit_date)>=0 & new_sq==1
}


forvalues u = 10(10)60 {
local v = `u' - 10

gen numvis_`u' = 0
label var numvis_`u' "Number of visits in the first `v' - `u' days of episode"

forvalues i=1/61 {

replace numvis_`u' = numvis_`u' + 1 if (rev_cntr_dt`i' - admit_date)<`u' & (rev_cntr_dt`i' - admit_date)>=`v'
}
}

keep bene_id admit_date disch_date num_visits year next_admit subsq_epi obs hh_seq sub_hh_seq new_sq len_sq hosp_mid_sq post_int sq_id numvis_10 numvis_20 numvis_30 numvis_40 numvis_50 numvis_60 snf_in_12m snf_in_60 ip_in_12m ip_in_60 hs_in_12m hs_in_60

*rename year ivw_year 
gen ivw_year = year - 1 // creating ivw_year to be year prior to claims
gen admit_month = month(admit_date)

/**** sample derivation ****/
preserve
merge m:1 bene_id using "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Crosswalks\xwalk_2016.dta"
keep if _m==1
keep bene_id
duplicates drop
gen no_nhats_spid = 1
label var no_nhats_spid "Dropped because no NHATS spid in xwalk"
merge 1:1 bene_id using $int\samplederivation.dta, nogen
save $int\samplederivation.dta, replace
restore
/****************************/

merge m:1 bene_id using "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Crosswalks\xwalk_2016.dta", keepus(spid) keep(match) nogen

codebook bene_id // 3846 with NHATS spid

preserve
tempfile base
save `base'
restore

keep if new_sq==1

/********** Sample Derivation ******/
preserve
merge 1:1 bene_id admit_date using "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\nhats_ffs.dta", keepus(cont_ffs_n_mos)
keep if _m==1
duplicates drop bene_id, force
gen no_mbsf = 1 // not unique people, need to fix
label var no_mbsf "Dropped because not in MBSF"
keep bene_id no_mbsf
merge 1:1 bene_id using $int\samplederivation.dta, nogen
save $int\samplederivation.dta, replace
restore
/**************************************/

merge 1:1 bene_id admit_date using "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\nhats_ffs.dta", keepus(cont_ffs_n_mos) keep(match)

keep bene_id ivw_year admit_month sq_id spid year cont_ffs_n_mos

preserve
use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta", clear
gen year = ivw_year
tempfile nhats
save `nhats'
restore

merge m:1 spid ivw_year using "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta", keep(master match) // matching on year prior to HH sequence
gen insamp = 0
replace insamp = 1 if _m==3
preserve
keep if _m==1
drop _m
merge m:1 spid year using "`nhats'", update replace
keep if _m==5
keep if ivw_month<admit_month //nhats interviews that happen same year as hh episode, but months before it
drop _m
tempfile nhsameyr
replace insamp = 1
save `nhsameyr'
*restore
restore, preserve

/******* Sample Derivation ********/
keep if _m==1 | _m==3
append using "`nhsameyr'"
replace insamp = 0 if insamp==.
bysort bene_id: egen no_nhats_wave = max(insamp)
recode no_nhats_wave (1=0) (0=1)
keep if no_nhats_wave==1
label var no_nhats_wave "No NHATS interview same/previous year of HH sequence"
keep bene_id no_nhats_wave
duplicates drop bene_id, force
merge 1:1 bene_id using $int\samplederivation.dta, nogen
save $int\samplederivation.dta, replace
restore
/***********************************/

drop if _m==1
append using "`nhsameyr'"

drop _m
merge 1:m sq_id using "`base'", keep(match) nogen // all HH sequences that had a NHATS ivw ~1 year prior

gen days_last_ivw = admit_date - ivw_date if new_sq==1
label var days_last_ivw "# of days between start of sequence and last NHATS wave"

codebook bene_id // 2,263 NHATS with FFS 12m prior and NHATS ivw same year/prior

*merge m:1 spid ivw_year using "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\nhats_ffs.dta", keep(match) nogen

save "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\timing_HHA.dta", replace

use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta" , clear

bysort spid: egen no_dem = max(prob_dem)

gen never_dementia = 0 if no_dem!=.
replace never_dementia = 1 if no_dem==0
label var never_dementia "Never Dementia, Waves 1-7"

gsort spid wave 
by spid: gen dem_cohort = 1 if prob_dem[_n-1]==1 | prob_dem==1 | prob_dem[_n+1]==1 
replace dem_cohort = 0 if dem_cohort!=1 & never_dementia!=.
label var dem_cohort "Prob dementia = 1 +/- or at current interview"
la def demlbl 0"No Dementia"1"Prob Dementia"
la values dem_cohort demlbl

by spid: egen never_cohort = max(dem_cohort)
recode never_cohort (1=0) (0=1) (. = 1)

tab prob_dem if never_dementia!=1 & never_cohort==1 // indeterminate dementia status

keep spid wave never_dementia dem_cohort never_cohort
tempfile dem 
save `dem'

use "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\timing_HHA.dta", clear
merge m:1 spid wave using "`dem'", keepus(never_dementia dem_cohort never_cohort) keep(match) nogen

/****** Sample Derivation *******/
preserve
keep if never_cohort==1
keep bene_id never_cohort
duplicates drop
label var never_cohort "Dropped because of indeterminate dementia probablity"
merge 1:1 bene_id using $int\samplederivation.dta, nogen
save $int\samplederivation.dta, replace
restore
/*********************************/

keep if never_dementia==1 | dem_cohort==1

gen no_ffs = 0
replace no_ffs = 1 if cont_ffs_n_mos<12
label var no_ffs "Dropped because <12m FFS prior to start of sequence"

/****** Sample Derivation *******/
preserve
keep if no_ffs==1
keep bene_id no_ffs dem_cohort
duplicates drop
merge 1:1 bene_id using $int\samplederivation.dta, nogen
save $int\samplederivation.dta, replace
restore
/*********************************/

drop if no_ffs==1
preserve
duplicates drop spid, force
tab dem_cohort, m // 1193 No dementia, 674 dementia +/- 1 year
restore

gen homebound = 0 if homebound_cat!=.
replace homebound = 1 if homebound_cat==1

gen adl_dep_2 = 0 if adl_index !=.
replace adl_dep_2 = 1 if adl_index>0 & adl_index<=2
label var adl_dep_2 "1-2 ADL Dependent"

gen adl_dep_3 = 0 if adl_index!=.
replace adl_dep_3 = 1 if adl_index>=3 & adl_index<=6
label var adl_dep_3 "3+ ADL Dependent"

gen len_sq_1 = 0 if len_sq!=.
replace len_sq_1 = 1 if len_sq==1
label var len_sq_1 "1 HH Episode in sequence"

gen len_sq_2 = 0 if len_sq!=.
replace len_sq_2 = 1 if len_sq==2
label var len_sq_2 "2 HH Episodes in sequence"

gen len_sq_3 = 0 if len_sq!=.
replace len_sq_3 = 1 if len_sq>=3 & len_sq<=6
label var len_sq_3 "3-6 HH Episodes in a sequence"

gen len_sq_4 = 0 if len_sq!=.
replace len_sq_4 = 1 if len_sq>6 & len_sq!=.
label var len_sq_4 "7+ HH Episodes in a sequence"

bysort sq_id: egen ind_hosp_sq = max(hosp_mid_sq)
replace ind_hosp_sq = 1 if ind_hosp_sq>0
label var ind_hosp_sq "Hospitalized mid-sequence"

gen chronic_con_0 = 0 if sr_numconditions1!=.
replace chronic_con_0 = 1 if sr_numconditions1==0
label var chronic_con_0 "0 Self-Report Chronic Conditions"

gen chronic_con_1 = 0 if sr_numconditions1!=.
replace chronic_con_1 = 1 if sr_numconditions1>0 & sr_numconditions1<=3
label var chronic_con_1 "1-3 Self-Report Chronic Conditions"

gen chronic_con_2 = 0 if sr_numconditions1!=.
replace chronic_con_2 = 1 if sr_numconditions1>3 & sr_numconditions1!=.
label var chronic_con_2 "4+ Self-Report Chronic Conditions "

gen died_in_12m = 0
replace died_in_12m = 1 if death_date - admit_date<=365 & new_sq==1
label var died_in_12m "Died within 12m of sequence start date"

gen died_in_60 = 0
replace died_in_60 = 1 if death_date - admit_date<=60 & new_sq==1
label var died_in_60 "Died within 60 days of sequence start date"

gen visits_30 = numvis_10 + numvis_20 + numvis_30
gen visits_60 = numvis_40 + numvis_50 + numvis_60

gen any_vis_60 = 0
replace any_vis_60 = 1 if visits_60>0 & visits_60!=.
label var any_vis_60 "HH visits in days 31-60 of episode"

saveold $final\timing_HHA.dta, version(12) replace
log close

H="Sample Derivation"
cap log close
log using $logs\claims_files.txt, text replace

/* Get dates from rev center */
use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data\rev_cntr.dta", clear
drop clm_thru_dt
duplicates drop 
bysort bene_id clm_id: gen obs = _n
bysort bene_id clm_id: egen num_visits = max(obs)
label var num_visits "Number of visits during episode"
reshape wide rev_cntr_dt, i(bene_id clm_id) j(obs)
tempfile dates
save `dates'

/* Pull discharge dates from IP */
use "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Merged\STATA\ip_06_17.dta" , clear

keep bene_id admit_date disch_date 
duplicates drop 
gen year = year(disch_date)
gsort bene_id year disch_date
by bene_id year: gen obs = _n
rename disch_date disch_date_ip
rename admit_date admit_date_ip
reshape wide admit_date_ip disch_date_ip, i(bene_id year) j(obs)
tempfile ip
save `ip'

/* Pull discharge dates from SNF */

use "D:\NHATS\Shared\base_data\CMS_claims\Stata\snf_09_17.dta", clear
keep bene_id admit_date disch_date
duplicates drop
gen year = year(disch_date)
gsort bene_id year disch_date
by bene_id year: gen obs = _n
rename disch_date disch_date_snf
rename admit_date admit_date_snf
reshape wide admit_date_snf disch_date_snf, i(bene_id year) j(obs)
tempfile snf
save `snf'

/* Pull dates from hospice */

use "D:\NHATS\Shared\base_data\CMS_claims\Stata\hs_09_17.dta", clear 
keep bene_id admit_date disch_date
duplicates drop
gen year = year(disch_date)
gsort bene_id year disch_date 
by bene_id year: gen obs = _n
rename disch_date disch_date_hs
rename admit_date admit_date_hs
reshape wide admit_date_hs disch_date_hs, i(bene_id year) j(obs)
tempfile hs
save `hs'

/*** Merge HH dataset with SNF, IP and rev_cntr dates ****/

use "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Merged\STATA\hh_09_17.dta" , clear
merge 1:1 bene_id clm_id using "`dates'", keep(master match) nogen 
gen year = year(admit_date)
merge m:1 bene_id year using "`ip'", keep(master match) nogen
merge m:1 bene_id year using "`snf'", keep(master match) nogen
merge m:1 bene_id year using "`hs'", keep(master match) nogen

/* **** sample derivation ****
preserve
keep bene_id
gen all = 1
duplicates drop
save $int\samplederivation.dta, replace
restore
************************** */

gsort bene_id admit_date
by bene_id: gen next_admit = admit_date[_n+1]

gen subsq_epi = 0
replace subsq_epi = 1 if next_admit - disch_date <=60
label var subsq_epi "Subsequent HH episode <=60 post discharge of prior episode"

by bene_id: gen obs = _n
replace subsq_epi = 1 if obs==1 // ensuring first obs always counts as HH sequence

preserve
keep bene_id subsq_epi obs
reshape wide subsq_epi, i(bene_id) j(obs)
egen hh_seq = concat(subsq_epi1-subsq_epi56)
label var hh_seq "string of all HH episodes starting with first observed"
tempfile hhstring
save `hhstring'

restore
cap drop _m
merge m:1 bene_id using "`hhstring'", keepus(hh_seq) nogen   

replace hh_seq = subinstr(hh_seq,".","",. )

gen sub_hh_seq = substr(hh_seq,obs,.)       
replace sub_hh_seq = strltrim(sub_hh_seq)
label var sub_hh_seq "string of all HH episodes, starting with current"

gsort bene_id admit_date
gen new_sq = 0
by bene_id: replace new_sq = 1 if (subsq_epi[_n-1]==0 | subsq_epi[_n-1]==.) & (subsq_epi==1 | subsq_epi==0) 
label var new_sq "Start of a new HH sequence"

gen len_sq = strpos(sub_hh_seq,"0") if new_sq==1
label var len_sq "Number of HH episodes in sequence"

replace len_sq = 1 if len_sq==0

by bene_id: gen diff = admit_date - admit_date[_n-1] if new_sq==1
assert diff>60 // minimum value must be 61
drop diff 

/* Generate HH sequence ID to group HH episodes together */

set seed 45
gen sq_id = runiform()*10000000000 if new_sq==1
label var sq_id "Unique ID for HH sequences"

by bene_id: carryforward sq_id, replace

gen hosp_mid_sq = 0
label var hosp_mid_sq "# of hospitalization mid-sequence"

gen post_int = 0
label var post_int "Post-institution initiated"

gen snf_in_60 = 0
label var snf_in_60 "SNF admit within 60 days of sequence start date"

gen snf_in_12m = 0
label var snf_in_12m "SNF admit within 12m of sequence start date"

gen ip_in_60 = 0
gen ip_in_12m = 0
gen hs_in_60 = 0
gen hs_in_12m = 0
label var ip_in_60 "IP admit within 60 days of sequence start date"
label var ip_in_12m "IP admit within 12m of sequence start date"
label var hs_in_60 "Hospice admit within 60 days of sequence start date"
label var hs_in_12m "Hospice admit within 12m of sequence start date"

forvalues i = 1/14 {

replace post_int = 1 if (admit_date - disch_date_ip`i')<=14 & (admit_date - disch_date_ip`i')>=0 & new_sq==1
replace hosp_mid_sq = hosp_mid_sq + 1 if (disch_date < admit_date_ip`i') &  (admit_date_ip`i'< next_admit) & subsq_epi==1

replace ip_in_60 = 1 if (admit_date_ip`i' - admit_date)<=60 & (admit_date_ip`i' - admit_date)>=0 & new_sq==1

replace ip_in_12m = 1 if (admit_date_ip`i' - admit_date)<=365 & (admit_date_ip`i' - admit_date)>=0 & new_sq==1

}

forvalues i = 1/17 {

replace post_int = 1 if (admit_date - disch_date_snf`i')<=14 & (admit_date - disch_date_snf`i')>=0 & new_sq==1

replace snf_in_60 = 1 if (admit_date_snf`i'- admit_date)<=60 &  (admit_date_snf`i'- admit_date)>=0 & new_sq==1

replace snf_in_12m = 1 if (admit_date_snf`i'- admit_date)<=365 &  (admit_date_snf`i'- admit_date)>=0 & new_sq==1
}

forvalues i = 1/50 {

replace hs_in_60 = 1 if (admit_date_hs`i'- admit_date)<=60 &  (admit_date_hs`i'- admit_date)>=0 & new_sq==1

replace hs_in_12m = 1 if (admit_date_hs`i'- admit_date)<=365 &  (admit_date_hs`i'- admit_date)>=0 & new_sq==1
}


forvalues u = 10(10)60 {
local v = `u' - 10

gen numvis_`u' = 0
label var numvis_`u' "Number of visits in the first `v' - `u' days of episode"

forvalues i=1/61 {

replace numvis_`u' = numvis_`u' + 1 if (rev_cntr_dt`i' - admit_date)<`u' & (rev_cntr_dt`i' - admit_date)>=`v'
}
}

keep bene_id admit_date disch_date num_visits year next_admit subsq_epi obs hh_seq sub_hh_seq new_sq len_sq hosp_mid_sq post_int sq_id numvis_10 numvis_20 numvis_30 numvis_40 numvis_50 numvis_60 snf_in_12m snf_in_60 ip_in_12m ip_in_60 hs_in_12m hs_in_60

*rename year ivw_year 
gen ivw_year = year - 1 // creating ivw_year to be year prior to claims
gen admit_month = month(admit_date)

/* *** sample derivation ***
preserve
merge m:1 bene_id using "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Crosswalks\xwalk_2016.dta"
keep if _m==1
keep bene_id
duplicates drop
gen no_nhats_spid = 1
label var no_nhats_spid "Dropped because no NHATS spid in xwalk"
merge 1:1 bene_id using $int\samplederivation.dta, nogen
save $int\samplederivation.dta, replace
restore
************************** */

merge m:1 bene_id using "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Crosswalks\xwalk_2016.dta", keepus(spid) keep(master match)

gen test = 1 if _m==1
replace test = 0 if test==.
bysort bene_id: egen no_nhats_spid = max(test)
label var no_nhats_spid "Dropped because no NHATS spid in xwalk"
drop _m test

preserve
tempfile base
save `base'
restore

keep if new_sq==1

merge 1:1 bene_id admit_date using "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data\nhats_ffs.dta", keepus(cont_ffs_n_mos) keep(master match)

gen test = 1 if _m==1
replace test = 0 if test==.
bysort bene_id: egen no_mbsf = max(test) 
label var no_mbsf "Dropped because not in MBSF"


keep bene_id ivw_year admit_month sq_id spid year cont_ffs_n_mos no_mbsf no_nhats_spid

preserve
use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta", clear
gen year = ivw_year
tempfile nhats
save `nhats'
restore

merge m:1 spid ivw_year using "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta", keep(master match) // matching on year prior to HH sequence
gen insamp = 0
replace insamp = 1 if _m==3
preserve
keep if _m==1
drop _m
merge m:1 spid year using "`nhats'", update replace
keep if _m==5
keep if ivw_month<admit_month //nhats interviews that happen same year as hh episode, but months before it
drop _m
tempfile nhsameyr
replace insamp = 1
save `nhsameyr'
*restore
restore

/******* Sample Derivation *******
keep if _m==1
append using "`nhsameyr'"
replace insamp = 0 if insamp==.
drop _m
duplicates drop sq_id, force
merge 1:m sq_id using "`base'"
replace insamp = 0 if _m==2
bysort bene_id: egen no_nhats_wave = max(insamp)
recode no_nhats_wave (1=0) (0=1)
keep if no_nhats_wave==1
label var no_nhats_wave "No NHATS interview same/previous year of HH sequence"
keep bene_id no_nhats_wave
duplicates drop bene_id, force
merge 1:1 bene_id using $int\samplederivation.dta, nogen
save $int\samplederivation.dta, replace
restore
**********************************/

drop if _m==1
append using "`nhsameyr'"

drop _m
merge 1:m sq_id using "`base'"
replace insamp = 0 if insamp==.

bysort bene_id: egen no_nhats_wave = max(insamp)
recode no_nhats_wave (1=0) (0=1)
label var no_nhats_wave "No NHATS interview same/previous year of HH sequence"

gen days_last_ivw = admit_date - ivw_date if new_sq==1
label var days_last_ivw "# of days between start of sequence and last NHATS wave"

codebook bene_id // 2,263 NHATS with FFS 12m prior and NHATS ivw same year/prior

*merge m:1 spid ivw_year using "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data\nhats_ffs.dta", keep(match) nogen

save "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data\timing_HHA.dta", replace

use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta" , clear

bysort spid: egen no_dem = max(prob_dem)

gen never_dementia = 0 if no_dem!=.
replace never_dementia = 1 if no_dem==0
label var never_dementia "Never Dementia, Waves 1-7"

gsort spid wave 
by spid: gen dem_cohort = 1 if prob_dem[_n-1]==1 | prob_dem==1 | prob_dem[_n+1]==1 
replace dem_cohort = 0 if dem_cohort!=1 & never_dementia!=.
label var dem_cohort "Prob dementia = 1 +/- or at current interview"
la def demlbl 0"No Dementia"1"Prob Dementia"
la values dem_cohort demlbl

by spid: egen never_cohort = max(dem_cohort)
recode never_cohort (1=0) (0=1) (. = 1)

tab prob_dem if never_dementia!=1 & never_cohort==1 // indeterminate dementia status

keep spid wave never_dementia dem_cohort never_cohort
tempfile dem 
save `dem'

use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\int_data\timing_HHA.dta", clear
merge m:1 spid wave using "`dem'", keepus(never_dementia dem_cohort never_cohort) keep(master match) nogen

/****** Sample Derivation ******
preserve
keep if never_cohort==1
keep bene_id never_cohort
duplicates drop
label var never_cohort "Dropped because of indeterminate dementia probablity"
merge 1:1 bene_id using $int\samplederivation.dta, nogen
save $int\samplederivation.dta, replace
restore
*******************************/

label var never_cohort "Dropped because of indeterminate dementia probablity"

*keep if never_dementia==1 | dem_cohort==1

gen test = 0
replace test = 1 if cont_ffs_n_mos<12
label var no_ffs "Dropped because <12m FFS prior to start of sequence"

bysort spid:


save $final\sample_derivation.dta, version(12) replace
log close

H="EDA"
use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta" , clear

bysort spid: egen no_dem = max(prob_dem)

gen never_dementia = 0 if no_dem!=.
replace never_dementia = 1 if no_dem==0
label var never_dementia "Never Dementia, Waves 1-7"

gsort spid wave 
by spid: gen dem_cohort = 1 if prob_dem[_n-1]==1 | prob_dem==1 | prob_dem[_n+1]==1 
replace dem_cohort = 0 if dem_cohort!=1 & never_dementia!=.
label var dem_cohort "Prob dementia = 1 +/- or at current interview"
la def demlbl 0"No Dementia"1"Prob Dementia"
la values dem_cohort demlbl

keep spid wave never_dementia dem_cohort
tempfile dem 
save `dem'

use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear
merge m:1 spid wave using "`dem'", keepus(never_dementia dem_cohort) keep(match) nogen

keep if never_dementia==1 | dem_cohort==1




tab new_sq // number of unique HH sequences (2+ HH episodes within 60 days of each)
ttest len_sq, by(prob_dem) // Ave # of HH episodes in a sequence
gen hosp_ind = 0 if new_sq==1
replace hosp_ind = 1 if hosp_mid_sq>=1 & hosp_mid_sq!=.
label var hosp_ind "Indicator hospital admission mid HH sequence"
tab hosp_ind prob_dem, col
ttest numvis_10, by(prob_dem) // average # of visits in first 10 days of episode
ttest numvis_10 if subsq_epi==1, by(prob_dem) // average # of visits in first 10 days of episode, in sequence
tab post_int prob_dem if new_sq==1, col chi2 // sequences that start post institutional 

graph bar (mean) numvis_10 numvis_20 numvis_30 numvis_40 numvis_50 numvis_60, over(dem_cohort)

H="Graphs"

/*************** Line Graph *************/
use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear

gen comm_int = 0
replace comm_int = 1 if post_int==0

logit comm_int year##dem_cohort
margins year##dem_cohort
marginsplot, ytitle("Community Initiated (%)") title("All HH episodes") legend(size(medsmall) order(1 "Non-Dementia" 2 "Dementia"3 "All")) 

graph export "$output\hh_episodes_`c(current_date)'.png", replace 


/*************** Line Graph # 2 *************/
use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear

gen comm_int = 0
replace comm_int = 1 if post_int==0

svyset sq_id [pw=anfinwgt], strata(varstrat)

svy: logit comm_int year##dem_cohort
margins year##dem_cohort
marginsplot, ytitle("Community Initiated (%)") title("All HH episodes (Weighted)") legend(size(medsmall) order(1 "Non-Dementia" 2 "Dementia"3 "All")) 

graph export "$output\hh_episodes_weighted_`c(current_date)'.png", replace 


/*************** Line Graph # 3 *************/
use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear

gen comm_int = 0
replace comm_int = 1 if post_int==0

keep if new_sq==1

logit comm_int year##dem_cohort
margins year##dem_cohort
marginsplot, ytitle("Community Initiated (%)") title("All HH Sequences") legend(size(medsmall) order(1 "Non-Dementia" 2 "Dementia"3 "All")) 

graph export "$output\hh_sequences_`c(current_date)'.png", replace 

/*************** Line Graph # 4 *************/
use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear

gen comm_int = 0
replace comm_int = 1 if post_int==0

keep if new_sq==1
svyset sq_id [pw=anfinwgt], strata(varstrat)

svy: logit comm_int year##dem_cohort
margins year##dem_cohort
marginsplot, ytitle("Community Initiated (%)") title("All HH Sequences (Weighted)") legend(size(medsmall) order(1 "Non-Dementia" 2 "Dementia"3 "All")) 

graph export "$output\hh_sequences_weighted_`c(current_date)'.png", replace 



/****** Bar Graph **********/
use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear

keep if new_sq==1
svyset sq_id [pw=anfinwgt], strata(varstrat)

hist visits_30, percent bin(15) by(dem_cohort) xtitle("# of visits in first 30 days") title("First Episode in a HH Sequence")
graph export "D:\NHATS\Projects\exploratory\cka_timing_HHA\output\hist_30_`c(current_date)'.png", replace

hist visits_60, percent bin(15) by(dem_cohort) xtitle("# of visits days 31 - 60") title("First Episode in a HH Sequence")
graph export "$output\hist_60_`c(current_date)'.png", replace


expand 2, gen(vis_30)
replace visits_30 = . if vis_30==1

gen tot_vis = visits_30
replace tot_vis = visits_60 if tot_vis==.


collapse (mean) mean_vis = tot_vis (sd) vis_sd= tot_vis (count) n=tot_vis, by(dem_cohort vis_30)


gen hiwrite_30 = mean_vis + invttail(n-1,0.025)*(vis_sd/sqrt(n))
gen lowrite_30 = mean_vis - invttail(n-1,0.025)*(vis_sd/sqrt(n))


graph twoway (bar mean_vis vis_30) (rcap hiwrite_30 lowrite_30 vis_30), by(dem_cohort)

gen dem_vis = .
replace dem_vis = 0 if dem_cohort==0 & vis_30==0
replace dem_vis = 1 if dem_cohort==0 & vis_30==1
replace dem_vis = 2 if dem_cohort==1 & vis_30==0
replace dem_vis = 3 if dem_cohort==1 & vis_30==1


twoway (bar mean_vis dem_vis if dem_cohort==0) (bar mean_vis dem_vis if dem_cohort==1) (rcap hiwrite_30 lowrite_30 dem_vis, color(black)), legend(order(1 "Non-Dementia" 2 "Dementia")) xlabel(0 "Days 1-30" 1 "Days 31-60" 2 "Days 1-30" 3 "Days 31-60", noticks) ytitle("Average # of visits in an episode") xtitle(" ") title("First Episode in a HH Sequence") yscale(range(0/10))

graph export "$output\vistis_bar_`c(current_date)'.png", replace 

/****** Pie Chart ********/

use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear
keep if new_sq==1

gen comm_int = 0
replace comm_int = 1 if post_int==0
label var comm_int "Community Initiated"

graph pie post_int comm_int, plabel(_all percent) title("Initiation of HH Sequences (Unweighted)")
*graph export "$output\pie_`c(current_date)'.png", replace 

graph pie post_int comm_int [pw=anfinwgt], plabel(_all percent) title("Initiation of HH Sequences (Weighted)")
*graph export "$output\pie_weighted_`c(current_date)'.png", replace 

gen dem_type = .
replace dem_type = 1 if dem_cohort==0 & post_int==0
replace dem_type = 2 if dem_cohort==0 & post_int==1
replace dem_type = 3 if dem_cohort==1 & post_int==0
replace dem_type = 4 if dem_cohort==1 & post_int==1

gen com_nodem = 0
replace com_nodem = 1 if dem_type==1
label var com_nodem "Community - No Dementia"

gen post_nodem = 0
replace post_nodem = 1 if dem_type==2
label var post_nodem "Post Institutional - No Dementia"

gen com_dem = 0
replace com_dem = 1 if dem_type==3
label var com_dem "Community - Prob Dementia"

gen post_dem = 0
replace post_dem = 1 if dem_type==4
label var post_dem "Post Institutional - Prob Dementia"


graph pie com_nodem post_nodem com_dem post_dem, plabel(_all percent) title("Initiation of HH Sequences (Unweighted)")
graph export "$output\pie_`c(current_date)'.png", replace 

graph pie com_nodem post_nodem com_dem post_dem [pw=anfinwgt], plabel(_all percent) title("Initiation of HH Sequences (Weighted)")
graph export "$output\pie_weighted_`c(current_date)'.png", replace 


/****** Horizontal Bar Chart ********/

use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear
keep if new_sq==1

gen comm_int = 0
replace comm_int = 1 if post_int==0
label var comm_int "Community Initiated"

preserve

gen vis_0_2 = 0
replace vis_0_2 = 100 if inrange(visits_30,0,2) //| inrange(visits_60,0,2)
label var vis_0_2 "0 - 2 Visits"

gen vis_3_6 = 0
replace vis_3_6 = 100 if inrange(visits_30,3,6) //| inrange(visits_60,3,6)
label var vis_3_6 "3 - 6 visits"

gen vis_7 = 0
replace vis_7 = 100 if (visits_30>6 & visits_30!=.) //| (visits_60>6 & visits_60!=.)
label var vis_7 "7+ Visits"



graph hbar vis_0_2 vis_3_6 vis_7, over(dem_cohort) blabel(bar) title("# of visits days 0-30 (Initial Episode in sequence)") legend(order(1 "0-2 Visits" 2 "3-6 Visits" 3 "7+ Visits")) //asy
graph export "$output\hbar_030_`c(current_date)'.png", replace 

graph hbar vis_0_2 vis_3_6 vis_7 [pw=anfinwgt], over(dem_cohort) blabel(bar) title("# of visits days 0-30 (Initial Episode - Weighted)") legend(order(1 "0-2 Visits" 2 "3-6 Visits" 3 "7+ Visits")) //asy
graph export "$output\hbar_030_weighted_`c(current_date)'.png", replace 


restore

gen vis_0_2 = 0
replace vis_0_2 = 100 if inrange(visits_60,0,2)
label var vis_0_2 "0 - 2 Visits"

gen vis_3_6 = 0
replace vis_3_6 = 100 if inrange(visits_60,3,6)
label var vis_3_6 "3 - 6 visits"

gen vis_7 = 0
replace vis_7 = 100 if (visits_60>6 & visits_60!=.)
label var vis_7 "7+ Visits"

graph hbar vis_0_2 vis_3_6 vis_7, over(dem_cohort) blabel(bar) title("# of visits days 31-60 (Initial Episode in sequence)") legend(order(1 "0-2 Visits" 2 "3-6 Visits" 3 "7+ Visits")) 
graph export "$output\hbar_3160_`c(current_date)'.png", replace 

graph hbar vis_0_2 vis_3_6 vis_7 [pw=anfinwgt], over(dem_cohort) blabel(bar) title("# of visits days 31-60 (Initial Episode - Weighted)") legend(order(1 "0-2 Visits" 2 "3-6 Visits" 3 "7+ Visits")) 
graph export "$output\hbar_3160_weighted_`c(current_date)'.png", replace

H="Table 1 + Logits (weighted)"
use "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\final_data\timing_HHA.dta", clear

gen all = 1

recode post_int (0=1)(1=0), gen(comm_init)


gen unpaid_cg = 0
replace unpaid_cg = 1 if ind_family_helper==1 | otherfamily_help_ind==1 | otherinformal_help_ind==1
label var unpaid_cg "Has an unpaid caregiver"

recode income_quart (1=1)(2/4=0), gen(low_inc)
label var low_inc "Lowest income quartile"

svyset sq_id [pw=anfinwgt], strata(varstrat)
preserve

keep if new_sq==1
cap drop obs
bysort bene_id: gen obs = _n
by bene_id: egen num_seq = max(obs)
label var num_seq "Av. # of sequences per person"

gen num_seq_1 = 0
replace num_seq_1 = 1 if num_seq==1
label var num_seq_1 "Percentage of people with 1 sequence"

gen num_seq_2 = 0
replace num_seq_2 = 1 if num_seq>=2 & num_seq<=3
label var num_seq_2 "Percentage of people with 2-3 sequences"

gen num_seq_3 = 0
replace num_seq_3 = 1 if num_seq>3
label var num_seq_3 "Percentage of people with 4+ Sequences"


cap drop obs
sort bene_id admit_date
by bene_id: keep if _n==1

local ivars1 white hisp black female educ_hs_ind medicaid married metro_ind adl_independent adl_dep_2 adl_dep_3 homebound srh_fp ind_hosp_sq northeast midwest south west chronic_con_0 chronic_con_1 chronic_con_2 livealone died_in_12m unpaid_cg low_inc
local cvars1 age hhm aveincome days_last_ivw sr_numconditions1 
local ivars2 comm_init any_vis_60 len_sq_1 len_sq_2 len_sq_3 len_sq_4 num_seq_1 num_seq_2 num_seq_3
local cvars2 len_sq num_seq
local full 1 `ivars1' 1 `cvars1' 1 `ivars2' `cvars2' 1 1
local rd: word count `full'

mat tab1=J(`rd',5,.)
mat stars=J(`rd',5,0)

local r = 2
local c = 1

foreach x of local ivars1 {

svy: mean `x'
mat tab1[`r',`c'] = (r(table)[1,1]*100)

local ++c

svy: mean `x' if dem_cohort==0
mat tab1[`r',`c'] = (r(table)[1,1]*100)

local ++c
svy: mean `x' if dem_cohort==1
mat tab1[`r',`c'] = (r(table)[1,1]*100)


svy: tab `x' dem_cohort
mat stars[`r',`c'] = (e(p_Pear)<.01) + (e(p_Pear)<.05)

local ++c

svy: logit comm_init `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

svy: logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}

local ++r
foreach x of local cvars1 {

svy: mean `x'
mat tab1[`r',`c'] = r(table)[1,1]

local ++c

svy: mean `x' if dem_cohort==0
mat tab1[`r',`c'] = r(table)[1,1]

local ++c
svy: mean `x' if dem_cohort==1
mat tab1[`r',`c'] = r(table)[1,1]

svy: mean `x', over(dem_cohort)
test c.`x'@0.dem_cohort= c.`x'@1.dem_cohort
mat stars[`r',`c'] = (r(p)<.01) + (r(p)<.05)

local ++c

svy: logit comm_init `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

svy: logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}

local ++r
foreach x of local ivars2 {


svy: mean `x'
mat tab1[`r',`c'] = (r(table)[1,1]*100)

local ++c

svy: mean `x' if dem_cohort==0
mat tab1[`r',`c'] = (r(table)[1,1]*100)

local ++c
svy: mean `x' if dem_cohort==1
mat tab1[`r',`c'] = (r(table)[1,1]*100)


svy: tab `x' dem_cohort
mat stars[`r',`c'] = (e(p_Pear)<.01) + (e(p_Pear)<.05)

local ++c

cap svy: logit comm_init `x'
cap mat tab1[`r',`c']=exp(el(e(b),1,1))
cap mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

cap svy: logit any_vis_60 `x'
cap mat tab1[`r',`c']=exp(el(e(b),1,1))
cap mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}

foreach x of local cvars2 {


svy: mean `x'
mat tab1[`r',`c'] = r(table)[1,1]

local ++c

svy: mean `x' if dem_cohort==0
mat tab1[`r',`c'] = r(table)[1,1]

local ++c
svy: mean `x' if dem_cohort==1
mat tab1[`r',`c'] = r(table)[1,1]

svy: mean `x', over(dem_cohort)
test c.`x'@0.dem_cohort= c.`x'@1.dem_cohort
mat stars[`r',`c'] = (r(p)<.01) + (r(p)<.05)

local ++c

svy: logit comm_init `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

svy: logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}


svy: logit comm_init dem_cohort
mat tab1[`r',4]=exp(el(e(b),1,1))
mat stars[`r',4]=(e(p)<.01) + (e(p)<.05)

svy: logit any_vis_60 dem_cohort
mat tab1[`r',5]=exp(el(e(b),1,1))
mat stars[`r',5]=(e(p)<.01) + (e(p)<.05)

local ++r

svy: total all
mat tab1[`r',1] = (e(N_pop))

svy: total all if dem_cohort==0
mat tab1[`r',2] = (e(N_pop))

svy: total all if dem_cohort==1
mat tab1[`r',3] = (e(N_pop))

mat rownames tab1= "Categorical Predictors (%)" `ivars1' "Continuous Predictors (Average)" `cvars1' "HH Specific Predictors" `ivars2' `cvars2' dem_cohort "Sample Size"

frmttable using "D:\NHATS\Projects\home health policy\cka_timing_HHA\output\In progress\table1_weighted_`c(current_date)'.rtf", replace statmat(tab1) ///
varlabels title("Table 1: Unique Persons (1st Sequence, Weighted): 12m FFS prior to admit date of first episode in sequence") ///
ctitles("" "All" "Non-Dementia" "Probable Dementia" "Unadjusted Logit OR: Comm. Initiated = 1" "Unadjusted Logit OR: Any Visit Day 31-60 = 1") sdec(2) annotate(stars) asymbol(*,**) ///
note("NHATS Interview required in same year (before start of sequence) or prior calendar year. *p<0.05, **p<0.01")

restore

local full comm_init dem_cohort age female black hisp educ_hs_ind low_inc medicaid livealone married northeast midwest south west metro_ind adl_dep_2 adl_dep_3 chronic_con_1 chronic_con_2 srh_fp died_in_12m other_race

foreach x of local full {

gen miss_`x' = missing(`x')
qui sum miss_`x'
di "`x'"
di r(sum)

}



outreg, clear
svy: logistic comm_init dem_cohort age female black hisp educ_hs_ind low_inc medicaid livealone married midwest south west metro_ind adl_dep_2 adl_dep_3 chronic_con_1 chronic_con_2 srh_fp died_in_12m other_race, cformat(%4.2f)

outreg using "D:\NHATS\Projects\home health policy\cka_timing_HHA\output\In progress\logit_weighted_`c(current_date)'", ///
varlabels stats(e_b e_ci p) nosubstat ///
title("Adjusted Logistic Regression (Weighted): Outcome=Sequence initatiated in Community") ///
ctitles("" "Std. Coefficient" "95% CI" "P-value") ///
starlevels(10 5 1) summstat(N) landscape replace

/*



***********
***********
***********

*claire's new table 1
*first make an indicator for first observation of the person
sort bene_id year
by bene_id, sort: gen n1=_n
gen keep=1 if n1==1
svy, subpop (keep): tab dem_cohort

gen adl0= 1 if adl_index==0
replace adl0=0 if adl_index!=0 & adl_index!=.

foreach var of varlist female hisp black educ_hs_ind medicaid married livealone region metro_ind adl0 adl_dep_2 adl_dep_3 homebound chronic_con_0 chronic_con_1 chronic_con_2 srh_fp died_in_12m {
svy, subpop (keep): tab `var' dem_cohort, column
}

svy, subpop (keep): mean age
svy, subpop (keep): mean age, over (dem_cohort)
svy, subpop (keep): tab white dem_cohort, column
svy, subpop (keep): tab ind_hosp_sq dem_cohort, column
svy, subpop (keep): tab ind_family_helper dem_cohort, column

*what is the avg number of sequences/person for people with dementia/nondementia
svy, subpop (keep): mean num_seq, over(dem_cohort) 
svy, subpop (keep): reg num_seq dem_cohort

svy, subpop (keep): mean num_seq

*what is the average number of episodes/sequence for the sequences attributed to dementia vs nondementia
svy: mean len_sq, over(dem_cohort)
svy: reg len_sq dem_cohort

svy: mean len_sq

*wh
svy, subpop (keep): mean num_seq, over(dem_cohort) 
svy, subpop (keep): mean num_seq


svy, subpop (keep): tab dem_cohort, count cellwidth(15) format (%15.2g)

***********
***********
***********
*claire's new table 2

*make a variable for categories of visits in the last 60 days
recode visits_60 (0/2=1 "0-2") (3/6=2 "3-6")(7/30=3 "7+"), gen(visits60_3cat)
recode visits_60 (0/1=1 "0-1") (2/6=2 "2-6")(7/30=3 "7+"), gen(visits60_3catnew)
recode visits_60 (0/1=1 "0-1") (2/10=2 "2-10")(11/30=3 "11+"), gen(visits60_3cat2new)


recode visits_30 (0/2=1 "0-2") (3/6=2 "3-6")(7/30=3 "7+"), gen(visits30_3cat)
recode visits_30 (0/1=1 "0-1") (2/6=2 "2-6")(7/30=3 "7+"), gen(visits30_3catnew)

*start of claire's added stuff
*gen a variable called keepfe to include only the episodes where someone doesn't die, go into hospice, or hospitalized 60 days after start of encounter
gen keepfe=1
replace keepfe=0 if died_in_60==1
replace keepfe=0 if ind_hosp_sq==1
replace keepfe=0 if hs_in_60==1
svy: logistic  any_vis_60 dem_cohort age female black hisp educ_hs_ind low_inc medicaid livealone married i.region metro_ind adl_dep_2 adl_dep_3    chronic_con_1 chronic_con_2 srh_fp died_in_12m comm_init , cformat(%4.2f)
svy, subpop(keep): logistic  any_vis_60 dem_cohort age female black hisp educ_hs_ind low_inc medicaid livealone married i.region metro_ind adl_dep_2 adl_dep_3    chronic_con_1 chronic_con_2 srh_fp died_in_12m comm_init , cformat(%4.2f)
svy, subpop(keepfe): mlogit visits60_3cat i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): mlogit visits30_3cat i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): mlogit visits60_3catnew i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): mlogit visits30_3catnew i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): reg visits_60 i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): mlogit visits60_3cat2new i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

*new logit model
recode comm_init (0=1)(1=0), gen(comm_init)
recode income_quart (1=1)(2/4=0), gen(low_inc)
gen aveincome_k=aveincome/10000

outreg, clear
svy: logistic comm_init dem_cohort age female black hisp educ_hs_ind low_inc medicaid livealone married i.region metro_ind adl_dep_2 adl_dep_3    chronic_con_1 chronic_con_2 srh_fp died_in_12m , cformat(%4.2f)
*end of claire's added stuff

H="claire attempt at new table 1"
use "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\final_data\timing_HHA.dta", clear

gen all = 1

recode post_int (0=1)(1=0), gen(comm_init)

*keep if new_sq==1
cap drop obs
bysort bene_id: gen obs = _n
by bene_id: egen num_seq = max(obs)
label var num_seq "Av. # of sequences per person"

gen num_seq_1 = 0
replace num_seq_1 = 1 if num_seq==1
label var num_seq_1 "Percentage of people with 1 sequence"

gen num_seq_2 = 0
replace num_seq_2 = 1 if num_seq>=2 & num_seq<=3
label var num_seq_2 "Percentage of people with 2-3 sequences"

gen num_seq_3 = 0
replace num_seq_3 = 1 if num_seq>3
label var num_seq_3 "Percentage of people with 4+ Sequences"

gen unpaid_cg = 0
replace unpaid_cg = 1 if ind_family_helper==1 | otherfamily_help_ind==1 | otherinformal_help_ind==1
label var unpaid_cg "Has an unpaid caregiver"

recode income_quart (1=1)(2/4=0), gen(low_inc)
label var low_inc "Lowest income quartile"

svyset sq_id [pw=anfinwgt], strata(varstrat)

cap drop obs
sort bene_id admit_date
by bene_id: keep if _n==1

local ivars1 white hisp black female educ_hs_ind medicaid married metro_ind adl_independent adl_dep_2 adl_dep_3 homebound srh_fp ind_hosp_sq northeast midwest south west chronic_con_0 chronic_con_1 chronic_con_2 livealone died_in_12m died_in_60 snf_in_12m snf_in_60 ip_in_12m ip_in_60 hs_in_12m hs_in_60 unpaid_cg low_inc
local cvars1 age hhm aveincome days_last_ivw sr_numconditions1 
local ivars2 comm_init any_vis_60 len_sq_1 len_sq_2 len_sq_3 len_sq_4 num_seq_1 num_seq_2 num_seq_3
local cvars2 len_sq num_seq
local full 1 `ivars1' 1 `cvars1' 1 `ivars2' `cvars2' 1 1
local rd: word count `full'

mat tab1=J(`rd',5,.)
mat stars=J(`rd',5,0)

local r = 2
local c = 1

foreach x of local ivars1 {

svy: mean `x'
mat tab1[`r',`c'] = (r(table)[1,1]*100)

local ++c

svy: mean `x' if dem_cohort==0
mat tab1[`r',`c'] = (r(table)[1,1]*100)

local ++c
svy: mean `x' if dem_cohort==1
mat tab1[`r',`c'] = (r(table)[1,1]*100)


svy: tab `x' dem_cohort
mat stars[`r',`c'] = (e(p_Pear)<.01) + (e(p_Pear)<.05)

local ++c

svy: logit comm_init `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

svy: logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}

local ++r
foreach x of local cvars1 {

svy: mean `x'
mat tab1[`r',`c'] = r(table)[1,1]

local ++c

svy: mean `x' if dem_cohort==0
mat tab1[`r',`c'] = r(table)[1,1]

local ++c
svy: mean `x' if dem_cohort==1
mat tab1[`r',`c'] = r(table)[1,1]

svy: mean `x', over(dem_cohort)
test c.`x'@0.dem_cohort= c.`x'@1.dem_cohort
mat stars[`r',`c'] = (r(p)<.01) + (r(p)<.05)

local ++c

svy: logit comm_init `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

svy: logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}

local ++r
foreach x of local ivars2 {


svy: mean `x'
mat tab1[`r',`c'] = (r(table)[1,1]*100)

local ++c

svy: mean `x' if dem_cohort==0
mat tab1[`r',`c'] = (r(table)[1,1]*100)

local ++c
svy: mean `x' if dem_cohort==1
mat tab1[`r',`c'] = (r(table)[1,1]*100)


svy: tab `x' dem_cohort
mat stars[`r',`c'] = (e(p_Pear)<.01) + (e(p_Pear)<.05)

local ++c

cap svy: logit comm_init `x'
cap mat tab1[`r',`c']=exp(el(e(b),1,1))
cap mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

cap svy: logit any_vis_60 `x'
cap mat tab1[`r',`c']=exp(el(e(b),1,1))
cap mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}

foreach x of local cvars2 {


svy: mean `x'
mat tab1[`r',`c'] = r(table)[1,1]

local ++c

svy: mean `x' if dem_cohort==0
mat tab1[`r',`c'] = r(table)[1,1]

local ++c
svy: mean `x' if dem_cohort==1
mat tab1[`r',`c'] = r(table)[1,1]

svy: mean `x', over(dem_cohort)
test c.`x'@0.dem_cohort= c.`x'@1.dem_cohort
mat stars[`r',`c'] = (r(p)<.01) + (r(p)<.05)

local ++c

svy: logit comm_init `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

svy: logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}


svy: logit comm_init dem_cohort
mat tab1[`r',4]=exp(el(e(b),1,1))
mat stars[`r',4]=(e(p)<.01) + (e(p)<.05)

svy: logit any_vis_60 dem_cohort
mat tab1[`r',5]=exp(el(e(b),1,1))
mat stars[`r',5]=(e(p)<.01) + (e(p)<.05)

local ++r

svy: total all
mat tab1[`r',1] = (e(N_pop))

svy: total all if dem_cohort==0
mat tab1[`r',2] = (e(N_pop))

svy: total all if dem_cohort==1
mat tab1[`r',3] = (e(N_pop))

mat rownames tab1= "Categorical Predictors (%)" `ivars1' "Continuous Predictors (Average)" `cvars1' "HH Specific Predictors" `ivars2' `cvars2' dem_cohort "Sample Size"

frmttable using "D:\NHATS\Projects\home health policy\cka_timing_HHA\output\In progress\table1_weighted_`c(current_date)'.rtf", replace statmat(tab1) ///
varlabels title("Table 1: Unique HH Sequences (Weighted): 12m FFS prior to admit date of first episode in sequence") ///
ctitles("" "All" "Non-Dementia" "Probable Dementia" "Unadjusted Logit OR: Comm. Initiated = 1" "Unadjusted Logit OR: Any Visit Day 31-60 = 1") sdec(2) annotate(stars) asymbol(*,**) ///
note("NHATS Interview required in same year (before start of sequence) or prior calendar year. *p<0.05, **p<0.01")

/*
outreg, clear
svy: logistic comm_init age hisp black female educ_hs_ind medicaid married metro_ind adl_dep_2 adl_dep_3 midwest south west livealone aveincome chronic_con_1 chronic_con_2 srh_fp dem_cohort died_in_12m, cformat(%4.2f)
*/

outreg using "D:\NHATS\Projects\home health policy\cka_timing_HHA\output\In progress\logit_weighted_`c(current_date)'", ///
varlabels stats(e_b e_ci p) nosubstat ///
title("Adjusted Logistic Regression (Weighted): Outcome=Sequence initatiated in Community") ///
ctitles("" "Std. Coefficient" "95% CI" "P-value") ///
starlevels(10 5 1) summstat(N) landscape replace

/*
outreg, clear
svy: logit any_vis_60 age hisp black female educ_hs_ind medicaid married metro_ind adl_dep_2 adl_dep_3 midwest south west livealone aveincome chronic_con_1 chronic_con_2 srh_fp dem_cohort comm_init died_in_12m
*/



outreg using "D:\NHATS\Projects\home health policy\cka_timing_HHA\output\In progress\logit_weighted_days3160_`c(current_date)'", ///
varlabels stats(e_b e_ci p) nosubstat ///
title("Adjusted Logistic Regression (Weighted): Outcome=Any visit in days 31-60") ///
ctitles("" "Std. Coefficient" "95% CI" "P-value") ///
starlevels(10 5 1) summstat(N) landscape replace



***********
***********
***********

*claire's new table 1
*first make an indicator for first observation of the person
sort bene_id year
by bene_id, sort: gen n1=_n
gen keep=1 if n1==1
svy, subpop (keep): tab dem_cohort

gen adl0= 1 if adl_index==0
replace adl0=0 if adl_index!=0 & adl_index!=.

foreach var of varlist female hisp black educ_hs_ind medicaid married livealone region metro_ind adl0 adl_dep_2 adl_dep_3 homebound chronic_con_0 chronic_con_1 chronic_con_2 srh_fp died_in_12m {
svy, subpop (keep): tab `var' dem_cohort, column
}

svy, subpop (keep): mean age
svy, subpop (keep): mean age, over (dem_cohort)
svy, subpop (keep): tab white dem_cohort, column
svy, subpop (keep): tab ind_hosp_sq dem_cohort, column
svy, subpop (keep): tab ind_family_helper dem_cohort, column

*what is the avg number of sequences/person for people with dementia/nondementia
svy, subpop (keep): mean num_seq, over(dem_cohort) 
svy, subpop (keep): reg num_seq dem_cohort

svy, subpop (keep): mean num_seq

*what is the average number of episodes/sequence for the sequences attributed to dementia vs nondementia
svy: mean len_sq, over(dem_cohort)
svy: reg len_sq dem_cohort

svy: mean len_sq

*wh
svy, subpop (keep): mean num_seq, over(dem_cohort) 
svy, subpop (keep): mean num_seq


svy, subpop (keep): tab dem_cohort, count cellwidth(15) format (%15.2g)

***********
***********
***********
*claire's new table 2

*make a variable for categories of visits in the last 60 days
recode visits_60 (0/2=1 "0-2") (3/6=2 "3-6")(7/30=3 "7+"), gen(visits60_3cat)
recode visits_60 (0/1=1 "0-1") (2/6=2 "2-6")(7/30=3 "7+"), gen(visits60_3catnew)
recode visits_60 (0/1=1 "0-1") (2/10=2 "2-10")(11/30=3 "11+"), gen(visits60_3cat2new)


recode visits_30 (0/2=1 "0-2") (3/6=2 "3-6")(7/30=3 "7+"), gen(visits30_3cat)
recode visits_30 (0/1=1 "0-1") (2/6=2 "2-6")(7/30=3 "7+"), gen(visits30_3catnew)

*start of claire's added stuff
*gen a variable called keepfe to include only the episodes where someone doesn't die, go into hospice, or hospitalized 60 days after start of encounter
gen keepfe=1
replace keepfe=0 if died_in_60==1
replace keepfe=0 if ind_hosp_sq==1
replace keepfe=0 if hs_in_60==1
svy: logistic  any_vis_60 dem_cohort age female black hisp educ_hs_ind low_inc medicaid livealone married i.region metro_ind adl_dep_2 adl_dep_3    chronic_con_1 chronic_con_2 srh_fp died_in_12m comm_init , cformat(%4.2f)
svy, subpop(keep): logistic  any_vis_60 dem_cohort age female black hisp educ_hs_ind low_inc medicaid livealone married i.region metro_ind adl_dep_2 adl_dep_3    chronic_con_1 chronic_con_2 srh_fp died_in_12m comm_init , cformat(%4.2f)
svy, subpop(keepfe): mlogit visits60_3cat i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): mlogit visits30_3cat i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): mlogit visits60_3catnew i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): mlogit visits30_3catnew i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): reg visits_60 i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

svy, subpop(keepfe): mlogit visits60_3cat2new i.dem_cohort##i.comm_init
margins dem_cohort#comm_init

*new logit model
recode comm_init (0=1)(1=0), gen(comm_init)
recode income_quart (1=1)(2/4=0), gen(low_inc)
gen aveincome_k=aveincome/10000

outreg, clear
svy: logistic comm_init dem_cohort age female black hisp educ_hs_ind low_inc medicaid livealone married i.region metro_ind adl_dep_2 adl_dep_3    chronic_con_1 chronic_con_2 srh_fp died_in_12m , cformat(%4.2f)
*end of claire's added stuff

H="Rates of HH utilization and observation time"
/* SAS */

libname medi 'D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Merged\SAS'; 

proc sql;
CREATE TABLE last_claim AS SELECT tab1.BENE_ID, tab1.last_claim, tab2.any_hh_claim
FROM (SELECT tables.BENE_ID, MAX(tables.disch_date) as last_claim
FROM (SELECT BENE_ID, disch_date FROM medi.dm_09_17
UNION SELECT BENE_ID, disch_date FROM medi.hh_09_17
UNION SELECT BENE_ID, disch_date FROM medi.hs_09_17
UNION SELECT BENE_ID, disch_date FROM medi.ip_06_17
UNION SELECT BENE_ID, disch_date FROM medi.op_09_17
UNION SELECT BENE_ID, disch_date FROM medi.pb_09_17
UNION SELECT BENE_ID, disch_date FROM medi.snf_09_17)
tables
GROUP BY tables.BENE_ID) tab1
LEFT JOIN (SELECT DISTINCT BENE_ID, 1 as any_hh_claim
FROM medi.hh_09_17) tab2
ON tab1.BENE_ID = tab2.BENE_ID;
quit;

data last_claim;
set last_claim;
format last_claim date9.;
run;

proc export data=last_claim outfile="D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\last_claim.dta" dbms=stata replace; run;

/* Stata */

use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta" , clear
bysort spid: egen no_dem = max(prob_dem)

gen never_dementia = 0 if no_dem!=.
replace never_dementia = 1 if no_dem==0
label var never_dementia "Never Dementia, Waves 1-7"
keep spid never_dementia
duplicates drop
tempfile dem 
save `dem'

use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_7.dta", clear 
replace ivw_day = 1 if ivw_day<1
gen date_cat = mdy(ivw_month, ivw_day, ivw_year) if lml_ivw_yes==0 // create ivw date for people missing ivw date...
preserve
keep if wave==1
gen old_cohort = 1 // capture original cohort
tempfile old
gen st_date = ivw_date
format date_cat %td
replace st_date = date_cat if st_date==.
save `old'

restore
merge m:1 spid using "`old'", keepus(old_cohort st_date) nogen
replace old_cohort = 0 if old_cohort==.
replace ivw_date = . if lml_ivw_yes==1 // replace lml ivw with missing date
replace st_date = ivw_date if st_date==. & wave==5
replace st_date = date_cat if st_date==. & wave==5
gen end_date = death_date


collapse (max) old_cohort st_date end_date ivw_date, by(spid)
label var old_cohort "Original Cohort in Wave 1"
label var st_date "Start of observation period"
label var end_date "Last Observed Date: Death, Last Claim, Last Ivw Alive"
label var ivw_date "Last NHATS Interview"

merge 1:1 spid using "D:\NHATS\Shared\base_data\CMS_claims\Stata\xwalk_2016.dta", keepus(bene_id) nogen
merge 1:1 bene_id using "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\last_claim.dta", keep(master match) keepus(last_claim any_hh_claim) nogen
merge 1:1 spid using "`dem'", nogen 

replace end_date = last_claim if end_date==.
replace end_date = ivw_date if end_date==.

format end_date %td
gen num_days_observed = end_date - st_date

replace any_hh_claim = 0 if any_hh_claim==.

* HH utilization among dementia
tab any_hh_claim if never_dementia==0 // 50.17%
* HH utilization among non-dementia
tab any_hh_claim if never_dementia==1 // 25.26%

save "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\last_obs.dta", replace

use "$final\timing_HHA.dta", clear

merge m:1 spid using "D:\NHATS\Projects\home health policy\cka_timing_HHA\data\int_data\last_obs.dta", keepus(num_days_observed) keep(match)

* do for unique people rather than sequences
bysort spid: keep if _n==1

* Average number of days dementia beneficiaries are observed
sum num_days_observed if never_dementia==0, d // mean = 1504.9, median = 1528
* Average number of days non-dementia beneficiaries are observed
sum num_days_observed if never_dementia==1, d // mean = 1659.1, median = 1959

H="***old stuff below this***"


H="Table 1 + Logits"
use "D:\NHATS\Projects\exploratory\cka_timing_HHA\data\final_data\timing_HHA.dta", clear

gen all = 1

keep if new_sq==1
cap drop obs
bysort bene_id: gen obs = _n
by bene_id: egen num_seq = max(obs)
label var num_seq "Av. # of sequences per person"

gen num_seq_1 = 0
replace num_seq_1 = 1 if num_seq==1
label var num_seq_1 "Percentage of people with 1 sequence"

gen num_seq_2 = 0
replace num_seq_2 = 1 if num_seq>=2 & num_seq<=3
label var num_seq_2 "Percentage of people with 2-3 sequences"

gen num_seq_3 = 0
replace num_seq_3 = 1 if num_seq>3
label var num_seq_3 "Percentage of people with 4+ Sequences"

local ivars1 white hisp black female educ_hs_ind medicaid married metro_ind adl_independent adl_dep_2 adl_dep_3 homebound srh_fp ind_hosp_sq otherinformal_help_ind northeast midwest south west chronic_con_0 chronic_con_1 chronic_con_2 livealone died_in_12m died_in_60 snf_in_12m snf_in_60 ip_in_12m ip_in_60 hs_in_12m hs_in_60 
local cvars1 age hhm aveincome days_last_ivw sr_numconditions1 
local ivars2 post_int any_vis_60 len_sq_1 len_sq_2 len_sq_3 len_sq_4 num_seq_1 num_seq_2 num_seq_3
local cvars2 len_sq num_seq
local full 1 `ivars1' 1 `cvars1' 1 `ivars2' `cvars2' 1 1
local rd: word count `full'

mat tab1=J(`rd',5,.)
mat stars=J(`rd',5,0)

local r = 2
local c = 1

foreach x of local ivars1 {

sum `x'
mat tab1[`r',`c'] = r(mean)*100

local ++c

sum `x' if dem_cohort==0
mat tab1[`r',`c'] = r(mean)*100

local ++c 

sum `x' if dem_cohort==1
mat tab1[`r',`c'] = r(mean)*100

tab `x' dem_cohort, chi2
mat stars[`r',`c'] = (r(p)<.01) + (r(p)<.05)

local ++c

logit post_int `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c = 1
local ++r
}
local ++r
foreach x of local cvars1 {

sum `x'
mat tab1[`r',`c'] = r(mean)

local ++c
sum `x' if dem_cohort==0
mat tab1[`r',`c'] = r(mean)

local ++c
sum `x' if dem_cohort==1
mat tab1[`r',`c'] = r(mean)

ttest `x', by(dem_cohort)
mat stars[`r',`c'] = (r(p)<.01) + (r(p)<.05)

local ++c

logit post_int `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}

local ++r
foreach x of local ivars2 {

sum `x'
mat tab1[`r',`c'] = r(mean)*100

local ++c

sum `x' if dem_cohort==0
mat tab1[`r',`c'] = r(mean)*100

local ++c 

sum `x' if dem_cohort==1
mat tab1[`r',`c'] = r(mean)*100

tab `x' dem_cohort, chi2
mat stars[`r',`c'] = (r(p)<.01) + (r(p)<.05)

local ++c

cap logit post_int `x'
cap mat tab1[`r',`c']=exp(el(e(b),1,1))
cap mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

cap logit any_vis_60 `x'
cap mat tab1[`r',`c']=exp(el(e(b),1,1))
cap mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c = 1
local ++r
}

foreach x of local cvars2 {

sum `x'
mat tab1[`r',`c'] = r(mean)

local ++c
sum `x' if dem_cohort==0
mat tab1[`r',`c'] = r(mean)

local ++c
sum `x' if dem_cohort==1
mat tab1[`r',`c'] = r(mean)

ttest `x', by(dem_cohort)
mat stars[`r',`c'] = (r(p)<.01) + (r(p)<.05)

local ++c

logit post_int `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local ++c

logit any_vis_60 `x'
mat tab1[`r',`c']=exp(el(e(b),1,1))
mat stars[`r',`c']=(e(p)<.01) + (e(p)<.05)

local c =1
local ++r
}



logit post_int dem_cohort
mat tab1[`r',4]=exp(el(e(b),1,1))
mat stars[`r',4]=(e(p)<.01) + (e(p)<.05)

logit any_vis_60 dem_cohort
mat tab1[`r',5]=exp(el(e(b),1,1))
mat stars[`r',5]=(e(p)<.01) + (e(p)<.05)

local ++r

sum all
mat tab1[`r',1] = r(sum)

sum all if dem_cohort==0
mat tab1[`r',2] = r(sum)

sum all if dem_cohort==1
mat tab1[`r',3] = r(sum)

mat rownames tab1= "Categorical Predictors (%)" `ivars1' "Continuous Predictors (Average)" `cvars1' "HH Specific Predictors" `ivars2' `cvars2' dem_cohort "Sample Size"

frmttable using "D:\NHATS\Projects\exploratory\cka_timing_HHA\output\table1_`c(current_date)'.rtf", replace statmat(tab1) ///
varlabels title("Table 1: Unique HH Sequences: 12m FFS prior to admit date of first episode in sequence") ///
ctitles("" "All" "Non-Dementia" "Probable Dementia" "Unadjusted Logit OR: Post-Instiutional = 1" "Unadjusted Logit OR: Any Visit Day 31-60 = 1") sdec(2) annotate(stars) asymbol(*,**) ///
note("NHATS Interview required in same year (before start of sequence) or prior calendar year. *p<0.05, **p<0.01")

outreg, clear
logit post_int age hisp black female educ_hs_ind medicaid married metro_ind adl_dep_2 adl_dep_3 midwest south west livealone aveincome chronic_con_1 chronic_con_2 srh_fp dem_cohort died_in_12m

outreg using "D:\NHATS\Projects\exploratory\cka_timing_HHA\output\logit_`c(current_date)'", ///
varlabels stats(e_b e_ci p) nosubstat ///
title("Adjusted Logistic Regression: Outcome=Sequence initatiated post institution") ///
ctitles("" "Std. Coefficient" "95% CI" "P-value") ///
note("Standardized Coefficients, <1 indicates less likely to be initatied post institution") ///
starlevels(10 5 1) summstat(N) landscape replace

outreg, clear
logit any_vis_60 age hisp black female educ_hs_ind medicaid married metro_ind adl_dep_2 adl_dep_3 midwest south west livealone aveincome chronic_con_1 chronic_con_2 srh_fp dem_cohort post_int died_in_12m

outreg using "D:\NHATS\Projects\exploratory\cka_timing_HHA\output\logit_days3160_`c(current_date)'", ///
varlabels stats(e_b e_ci p) nosubstat ///
title("Adjusted Logistic Regression: Outcome=Any visit in days 31-60") ///
ctitles("" "Std. Coefficient" "95% CI" "P-value") ///
note("Standardized Coefficients, <1 indicates less likely to be initatied post institution") ///
starlevels(10 5 1) summstat(N) landscape replace



H="Changelog"
9/20/19 - Worked on adapting Claire's code to reproduce tables for the manuscript. OKR.

9/10/19 - Calculated rates of HH utilization and observation time. OKR

8/3- tweaked the logit models: categorized income, made outcome community-initiated referral, restricted the visit in day 31-60 model to those who weren't dead/in hospice/admitted to inpatient in first 60 days of episode. CKA

7/23/2019 - Fixed missing continuous variables from tables. OKR

7/18/19 - Added weighted tables and graphs, including pie chart and horizontal bar chart. OKR

7/17/19 - Added SNF to definiton of post-int, changed order of predictors on table, and added another logit model for prediction of any visits in days 31-60. OKR.

7/15/19 - 7/16/19 - Changed Sequence definition to include 1 episode as a sequence. Created tables and Graphs. OKR

7/11/2019 -- Changed definition of HH seq to include single episodes as a sequence. OKR

6/19/19 -- Cleaning up file paths and code to be polished and streamlined. OKR