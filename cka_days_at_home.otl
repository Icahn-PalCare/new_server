= V4 Outline MultiLine NoSorting TabWidth=30

H="First Heading"
/* 
********************HEADING******************** 

Project Name: Days at home

Date Started: 02/27/2020

Primary Investigator: 
Funding Source:

Created by: Mohammed

Primary Analyst: Mohammed 
Secondary Analyst:

Datasets Used:

Simple Outline: Getting Days at home in the last year of life. 


*/
 
libname clean 'D:\HRS\Shared\base_data\hrs_cleaned'; 
libname medi 'D:\HRS\Shared\raw\CMS\CMS_DUA_51675_2014\Merged\SAS';

libname proj_int 'D:\HRS\Projects\dementia_decedents\ask_r01_financial_burden_dementia_7_yrs\data\int_data';

H="Generic template"
/*

Created by: 
Date Created:

Updated by:
Date Updated:

Description: What is going on in this section of the code? 
i.e. defining variables, labeling variables. Creating new quartiles for income based off of something....



**************************************************
*/
/* Days at home code

/* Starting with death date as index and look 1 year back. */

data index;
set clean.death_date_2015;
index_date=death_all;
run; 

proc sort data=index out=index1 nodupkey;
by bid_hrs_22 id index_date;
run;

data index_548 (keep= id bid_hrs_22 date index_date index_548 death_year) ;
set index1;
index_548=index_date-548;
do i=index_548 to index_date;
date=i;
output;
end;
format date date9.;
format index_date date9.;
format index_548 date9.;
run;
run;

/**************************************************************************/
/**************** Claims Before Death  ******************************/
/**************************************************************************/
/*macro to get claims 548 days before death
saves datasets for each claim type */
%macro claimspre(days_start=,days_bef_index=,source=,suf=);

/*claims fully within x time of death date*/
proc sql;
create table &source._meet_1 as select a.*,b.index_date,b.id 
from medi.&source._1998_2015 a inner join
index1 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and &days_start<=b.index_date-a.admit_date<=&days_bef_index ;
quit;

/*claims that start earlier than x time but span into x time before death*/
proc sql;
create table &source._meet_2 as select a.*,b.index_date,b.id 
from medi.&source._1998_2015 a inner join
index1 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and b.index_date-a.admit_date>&days_bef_index and b.index_date-a.disch_date<=&days_bef_index;
quit;

data &source._meet_&suf.(compress=yes);
set &source._meet_1 &source._meet_2;
run;

%mend;

/*18m before death*/
%claimspre(days_start=0,days_bef_index=548,source=hh,suf=18m); /*home health*/
%claimspre(days_start=0,days_bef_index=548,source=ip,suf=18m); /*inpatient*/
%claimspre(days_start=0,days_bef_index=548,source=dm,suf=18m); /*dme*/
%claimspre(days_start=0,days_bef_index=548,source=op,suf=18m); /*outpatient*/
%claimspre(days_start=0,days_bef_index=548,source=pb,suf=18m); /*carrier*/
%claimspre(days_start=0,days_bef_index=548,source=sn,suf=18m); /*snf*/

/* Hospice file a little different format than the rest, but does the same as above */

data hs_1998_2015 (keep= hspcstrt hs_start admit_date disch_date bid_hrs_22 provider) ;
set medi.hs_1998_2015;
hs_start=input(put(hspcstrt, 8.), yymmdd8.);
format hs_start date9.;
format admit_date date9.;
run;

/*claims fully within x time of death date*/
proc sql;
create table hs_meet_1 as select a.*,b.index_date,b.id 
from hs_1998_2015 a inner join
index1 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and 0<=b.index_date-a.hs_start<=548;
quit;

/*claims that start earlier than x time but span into x time before death*/
proc sql;
create table hs_meet_2 as select a.*,b.index_date,b.id 
from hs_1998_2015 a inner join
index1 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and b.index_date-a.hs_start>548 and b.index_date-a.disch_date<=548;
quit;

data hs_meet_18m(compress=yes);
set hs_meet_1 hs_meet_2;
run;

/*emergency and observation stays identified from the inpatient and outpatient file. */

%macro er_obs(source=);

data &source._meet_18m_er_obs;
set &source._meet_18m;
er_flag = 0;
obs_flag = 0;
array rvcntr rvcntr01-rvcntr45;
array hcpcs hcpscd01-hcpscd45;
array rvunt rvunt01-rvunt45;
do over rvcntr;
do over hcpcs;
do over rvunt;
if strip(rvcntr) in:("0450", "0451", "0452", "0456", "0459", "0981") then er_flag = 1;
if strip(rvcntr) in:("0762") then obs_flag =1;
/*if strip(rvcntr) in:("0760") and strip(hcpcs) in: ("G0378") and rvunt>=8 then obs_flag =1;*/
end;
end;
end;
run;

data &source._er_meet_18m;
set &source._meet_18m_er_obs;
if er_flag=1;
run;

data &source._obs_meet_18m;
set &source._meet_18m_er_obs;
if obs_flag=1;
run;

%mend;

/*4m before death*/
%er_obs(source=ip); /*inpatient file*/
%er_obs(source=op); /*outpatient file*/


/* Putting stays into 1 observation per day format. Flagging if they go to a different facility, but are still IP.*/

%macro dates(source=,suf=, npi=);

data &source._meet_&suf._d;
set &source._meet_&suf.;
format index_date date9.;
format admit_date date9.;
format disch_date date9.;
day_a=index_date-admit_date;
day_d=index_date-disch_date;
run;

data &source._meet_&suf._dates;
set &source._meet_&suf._d;
do i=admit_date to disch_date;
date=i;
output;
end;
format date date9.;
run;

data &source._&suf.; 
set &source._meet_&suf._dates;
where 0<=index_date-date<=548;
&source.=1;
&source._npi=&npi.;
run;

proc sort data=&source._&suf. out=&source._&suf. ;
by bid_hrs_22 date ;
run;

data &source._dup (keep= bid_hrs_22 bid_n hhidpn index_date flag date admit_date disch_date days_a days_d &source. fac_type provider &source._npi at_upin) ;
set &source._&suf.;
if date=lag(date) and bid_hrs_22=lag(bid_hrs_22) and (provider~=lag(provider) or &npi.~=lag(&npi.)) then flag=1;
run;

proc sort data=&source._dup nodupkey;
by bid_hrs_22 date &source. &source._npi;
run;

%mend;

%dates(source=ip,suf=18m,npi=ORGNPINM);
%dates(source=op_er,suf=18m,npi=ORGNPINM);
%dates(source=op_obs,suf=18m,npi=ORGNPINM);
%dates(source=ip_er,suf=18m,npi=ORGNPINM);
%dates(source=ip_obs,suf=18m,npi=ORGNPINM);
%dates(source=sn,suf=18m,npi=ORGNPINM);
%dates(source=hh,suf=18m,npi=ORGNPINM);
%dates(source=hs,suf=18m,npi=ORGNPINM);


/* Bringing in MDS section*/

proc import out=proj_int.mds datafile="D:\HRS\Projects\dementia_decedents\ask_r01_financial_burden_dementia_7_yrs\data\int_data\mds.dta" replace; 
run;


/*MDS claims fully within x time of death date*/
proc sql;
create table mds_meet_1 as select a.*,b.index_date,b.id 
from proj_int.mds a inner join
index1 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and 0<=b.index_date-a.admit<=548 ;
quit;

/*MDS claims that start earlier than x time but span into x time before death*/
proc sql;
create table mds_meet_2 as select a.*,b.index_date,b.id 
from proj_int.mds a inner join
index1 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and b.index_date-a.admit>548 and b.index_date-a.discharge<=0;
quit;

data mds_meet_18m (compress=yes);
set mds_meet_1 mds_meet_2;
run;


data mds_meet_18m_d;
set mds_meet_18m;
format index_date date9.;
day_a=index_date-admit;
day_d=index_date-discharge;
rename date=date_1;
run;


data mds_meet_18m_dates;
set mds_meet_18m_d;
do i=admit to discharge;
date=i;
output;
end;
format date date9.;
run;


data mds_18m; 
set mds_meet_18m_dates;
where 0<=index_date-date<=548;
mds=1;
run;

proc sort data=mds_18m out=mds_18m ;
by bid_hrs_22 date ;
run;


data mds_dup (keep= bid_hrs_22 target date admission discharge index_date day_a day_d date_1 mds) ;
set mds_18m;
run;


proc sort data=index_548;
by bid_hrs_22 date;
run;

/* merging all files together*/

data all_claims;
merge index_548 ip_dup ip_er_dup ip_obs_dup op_er_dup op_obs_dup sn_dup hh_dup hs_dup mds_dup;
by bid_hrs_22 date;
run;

/* keeping only 365 days before index(death) date). */
data all_claims;
set all_claims;
if index_date-date<=365 and index_date-date>=0 then days_365=1;
run;

data all_claims_365;
set all_claims;
where days_365=1;
run;

/* section to see hospice at home */


data pb_meet_18m_d;
set pb_meet_18m;
format index_date date9.;
format admit_date date9.;
format disch_date date9.;
day_a=index_date-admit_date;
day_d=index_date-disch_date;
run;

data pb_meet_18m_dates;
set pb_meet_18m_d;
do i=admit_date to disch_date;
date=i;
output;
end;
format date date9.;
run;

data pb_18m; 
set pb_meet_18m_dates;
where 0<=index_date-date<=548;
run;

proc sort data=pb_18m out=pb_18m ;
by bid_hrs_22 date ;
run;

proc sql;
create table pb_hs_meet_548 as select a.*, b.*
from pb_18m a inner join
index_365 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22)) and a.date=b.date
inner join hs_18m c 
on trim(left(b.bid_hrs_22))=trim(left(c.bid_hrs_22))
and b.date=c.date;
quit;

data pb_hs_meet_365;
set pb_hs_meet_548;
where index_date-date<=365 and index_date-date>=0;
run;

data home_hospice;
set pb_hs_meet_365;
home_hs=0;
run;

data home_hospice1;
set home_hospice;
array place PLCRVC01-PLCRVC13;
do over place;
if place=12 then home_hs=1;
end;
run;

proc freq data=home_hospice1;
table home;
run;

/* end hopsice at home */

proc sql;
create table all_claims_365_1 as select a.*, b.bid_hrs_22, b.home_hs, b.date
from all_claims_365 a left join
home_hospice1 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22)) and a.date=b.date;
quit;

proc sort data=all_claims_365_1;
by bid_hrs_22 date;
run;

data all_claims_365_2;
set all_claims_365_1;
not_home=0;
if ip=1 then not_home=1;
if ip_er=1 then not_home=1;
if ip_obs=1 then not_home=1;
if op_er=1 then not_home=1;
if op_obs=1 then not_home=1;
if sn=1 then not_home=1;
if mds=1 then not_home=1;
if hs=1 and home_hs=0 then not_home=1;
home=0;
if not_home=0 then home=1;
if bid_hrs_22~="" ; 
run;

proc sort data=all_claims_365_2 nodupkey;
by bid_hrs_22 date;
run;

proc sql;
create table total_home_days 
as select bid_hrs_22 ,
sum(home) as home
from all_claims_365_2
group by bid_hrs_22;
quit;

proc freq data=total_home_days;
table home;
run;

proc export data=total_home_days outfile="D:\HRS\Projects\exploratory\cka_days_at_home\data\final\total_home_days.dta" replace; 
run;

H="Change log"


********************Change Log******************** 



Updates:



02/28/2020 MH
------------
Days at home code created


*/