= V4 Outline MultiLine NoSorting TabWidth=30

H="code for dataset"
//Part 1

clear all
set more off
capture log close


cd "D:\NHATS\Projects\homebound\ko_homebound_income\output\logs"
use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_8.dta" if lml==0, clear


//cpi inflation
gen income_adj=0
replace income_adj= (251.107/224.939)*aveincome if wave==1
replace income_adj= (251.107/229.594)*aveincome if wave==2
replace income_adj= (251.107/232.957)*aveincome if wave==3
replace income_adj= (251.107/236.736)*aveincome if wave==4
replace income_adj= (251.107/237.017)*aveincome if wave==5
replace income_adj= (251.107/240.007)*aveincome if wave==6
replace income_adj= (251.107/245.120)*aveincome if wave==7
replace income_adj=aveincome if wave==8

//replacing analytic weights to use only weights for origianl cohort. 
//only using original cohort (decision made based off of prior analysis with replenishment cohort. 
gen orig_weight=anfinw
replace anfinw=an2011wgt if (year==2011 & wave==5) | (year==2011 & wave==6) | (year==2011 & wave==7) | (year==2011 & wave==8)
drop if yearsample==2015
/*
//For Creating National Estimates
replace anfinw=anfinw*5491440/4649902 if inrange(age,65,69) & female==0
replace anfinw=anfinw*4087340/4097017 if inrange(age,70,74) & female==0
replace anfinw=anfinw*3027820/3001146 if inrange(age,75,79) & female==0
replace anfinw=anfinw*2169060/2173979 if inrange(age,80,84) & female==0
replace anfinw=anfinw*1194880/1224397 if inrange(age,85,89) & female==0
replace anfinw=anfinw*524540/463619 if inrange(age,90,150) & female==0

replace anfinw=anfinw*6124980/5250466 if inrange(age,65,69) & female==1
replace anfinw=anfinw*4781940/4843444 if inrange(age,70,74) & female==1
replace anfinw=anfinw*3886940/3878674 if inrange(age,75,79) & female==1
replace anfinw=anfinw*3249940/3215654 if inrange(age,80,84) & female==1
replace anfinw=anfinw*2230480/2257969 if inrange(age,85,89) & female==1
replace anfinw=anfinw*1382160/1329677 if inrange(age,90,150) & female==1
*/

//VARIABLE CREATION/CLEANUP
gen ind_noone=n_social==0
label var ind_noone "SR nobody in social network"

sort spid wave
by spid: egen firstdem=min(cond(prob_dem==1,wave,.))

xtset spid wave
replace homebound_cat=. if nhres==1
gen homebound=homebound==1 if !missing(homebound) & !nhres
gen status=1 if sp_ivw==1 & !missing(homebound)
replace status=2 if homebound==1
replace status=3 if nhres==1
label define status 1 "Community, not HB" 2 "Homebound" 3 "NH resident" 4 ///
"Community, previously HB or NH resident"
label values status status
label var status "Status this wave"


//checking to make sure everyone has a status at wave 1
sort spid wave
by spid: gen start=1 if wave==1 & status!=.
by spid: carryforward start, replace

//checking individuals who have a missing status. 
by spid: gen mstat=1 if status==.
by spid: carryforward mstat, replace

//checking individuals who have missing wave and flagging them.
capture drop misw
by spid: gen misw=1 if wave[_n-1]!=wave-1 & wave!=1
capture drop misw1
gen misw1=misw
by spid: carryforward misw1, replace

//Dropping individuals with a missing status or a missing wave.
drop if mstat==1 // 884 obs. dropped; 294 unique individuals.
drop if misw1==1 //didn't find any. 


sort spid wave
gen hbw=wave if homebound==1 //homebound at what wave
gen nhw=wave if nhres==1 // NH at what wave
by spid, sort: egen firsthb=min(hbw) //first homebound wave for an individual
by spid, sort: egen firstnh=min(nhw) //first NH wave for an individual
gen everhb=!missing(firsthb) //if an individual was ever homebound
gen evernh=!missing(firstnh) //if an individual was ever NH
label var everhb "Ever HB"
label var evernh "Ever NH"
*drop if firsthb==1 | missing(homebou)
sort spid wave
by spid: gen hbnextwave=homebound[_n+1] //flag next wave being homebound
by spid: gen nhnextwave=nhres[_n+1] //flag next wave being NH
gen inchbnextwave=firsthb==wave+1 & homebound==0 //flag incident homebound next wave
gen incnhnextwave=firstnh==wave+1 & nhres==0 //flag incident NH next wave
replace adl_diff_ind=1 if adl_impair==1
label var adl_diff_ind "ADL difficulty or impairment"

//Which group an individual ends up in
gen wherelandgroup=1 if missing(firsthb) & missing(firstnh)
replace wherelandgroup=2 if !missing(firsthb) 
replace wherelandgroup=3 if !missing(firstnh) 
replace wherelandgroup=4 if !missing(firstnh) & firsthb<firstnh
label define wherelandgroup 1 "Never homebound or NH resident" 2 "Future HB" ///
3 "Future NH resident" 4 "Homebound, then NH"
label values wherelandgroup wherelandgroup

//Dropping waves after first homebound/NH
sort spid wave
by spid: drop if firstnh<wave
by spid: drop if firsthb<wave

//ever* var needs to be changed because later waves are dropped. 
replace everhb=0 if firsthb>firstnh
replace evernh=0 if firsthb<firstnh 


//finding next wave status 
gen nwstatus=.
forvalues i=1/7 {
replace nwstatus=r`=`i'+1'status if wave==`i'
}
tab nwstat
tab r2status
replace nwstatus=1 if inlist(nwstatus,60,63) & !missing(hbne)
replace nwstatus=4 if inlist(nwstatus,61)
replace nwstatus=6 if inlist(nwstatus,62,86)
replace nwstatus=7 if nwstatus>7
replace nwstatus=6 if died_12==1 & nwstatus==7
label define nwstatus 1 "Community, not homebound" 2 "Homebound, not incident" ///
3 "Incident homebound" 4 "NH Resident, not incident" ///
5 "Incident NH" 6 "Died" 7 "LFU"
label values nwstatus nwstatus
replace nwstatus=2 if hbne==1
replace nwstatus=3 if inchb==1
replace nwstat=4 if nhne==1
replace nwstat=5 if incnhne==1
label var nwstat "Status next wave"
replace died_12=0 if nwstatus<=5
label var died_12 "Died prior to next wave"

//generating everdied, but since we don't follow people after wave 6 we don't 
// know if they died based off NHATS data.
sort spid wave
capture drop everdied
gen everdied=1 if nwstatus==6  
gsort spid -wave
by spid: carryforward everdied, replace 
replace everdied=0 if missing(everdied)

//same as above explanation
capture drop everlfu
gen everlfu=1 if nwstatus==7 & wave!=8
by spid: carryforward everlfu, replace 

sort spid wave
/*gen northeast=region==1
gen midwest=region==2
gen south=region==3
gen west=region==4
label var northe "Northeast"
label var midw "Midwest"
label var south "South"
label var west "West"*/
gen sr_cond_cat=1 if sr_numcond<2
replace sr_cond_cat=2 if inrange(sr_numcond,2,4)
replace sr_cond_cat=3 if inrange(sr_numcond,5,15)
label define sr_cond_cat 1 "0-1 SR condition" 2 "2-4 SR conditions" 3 "5+ SR conditions"
label values sr_cond_cat sr_cond_cat
tab sr_cond_cat, gen(sr_cond_cat)
forvalues i=1/3 {
local lab: label sr_cond_cat `i'
label var sr_cond_cat`i' "`lab'"
}


tab wave nwstat if wave<=4, row
tab nwsta status if wave==1 

//income quartile definiton
sum income_adj
forvalues i=1/4 {
gen inccat`i'=income_quart==`i'
local lab : label income_quart `=`i''
label var inccat`i' "Income Quartile: `lab'"
}
/*label define income_quart 1 "1st Income Quartile (Low)" 2 "2nd Income Quartile" ///
3 "3rd Income Quartile" 4 "4th Income Quartile (Highest)"
label values income_quart income_quart*/



gen prob_dementia=dem_3==1 if !missing(dem_3)
label var prob_dementia "Probable dementia"

by spid, sort: gen persontime=_N
replace persontime=firsthb if firsthb<persontime
replace persontime=firstnh if firstnh<persontime
label var persontime "Waves contributing information"
gen anydebt=creditdebt==1 | medpayno==1 if !missing(creditdebt) | !missing(medpayn)
label var anydebt "Credit card or medical debt"

//important to define the last wave in community 
sort spid wave
by spid: egen lw=max(wave)
replace lw=lw-1
label var lw "Last Time in the Community"


save "D:\NHATS\Projects\homebound\ko_homebound_income\data\final\ko_hb_income_final.dta", replace



H="code for sample chars"
use "D:\NHATS\Projects\homebound\ko_homebound_income\data\final\ko_hb_income_final.dta", clear

local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female whiteoth black hisp married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
gen lfunextwave=nwstatus==7
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh metro_ind northeast midwest south west /*///
fin_strain mealskip nopayhous nopayutil nopaymed anydebt creditdebt medpaynotcash finhlpfam meals_wheels govtasst*/

label var meals_wheels "Meals on Wheels"


//TABLE CREATION

gen n=1

preserve

mat tab=J(8,5,.)
local r=2

sum n if status==1 & wave==1 
mat tab[1,1]=r(N)
forvalues w=1/7{
sum n if nwstatus==1 & status==1 & wave==`w'
mat tab[`r',1]=r(N)
local r=`r'+1
}

local c=2
foreach i in 3 5 6 7{ 
local r=2
forvalues w=1/7{
sum n if nwstatus==`i' & status==1 & wave==`w' 
mat tab[`r',`c']=r(N)
local r=`r'+1
}
local c=`c'+1
}


mat rownames tab= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6" "Wave 7" "Wave 8"
mat colnames tab="Community" "Incident Homebound" "Incident Nursing Home" "Died" "Lost to Follow-up"

mat list tab

frmttable using sample_derivation_new.rtf, replace statmat(tab) title("Status by Wave for Original Cohort") ///
sdec(0) varlabels note("2,031 people remain in the community after the last wave" ///
"When status is missing that wave and subsequent waves are removed" )

//creating community dwelling in wave 1 category. 
gen com=1 if status==1
replace com=0 if status!=1

mat tab4=J(8,5,.)
local r=2

svy, subpop(if wave==1 & com==1): tab nwstatus
mat tab4[1,1]=e(N_subpop)

forvalues i=1/7{
svy, subpop(if wave==`i' & com==1): tab nwstatus 
//sum com [aw=anfinw] if nwstatus==1 & wave==`i'
mat tab4[`r',1]=el(e(b),1,1)*e(N_subpop)
local r=`r'+1
}

local c=2
foreach i in 3 5 6 7{ 
local r=2
forvalues w=1/7{
svy, subpop(if wave==`w' & com==1): tab nwstatus 
mat tab4[`r',`c']=el(e(b),1,`i')*e(N_subpop)
local r=`r'+1
}
local c=`c'+1
}
mat list tab4
mat rownames tab4= "Wave 1" "Wave 2" "Wave 3" "Wave 4" "Wave 5" "Wave 6" "Wave 7" "Wave 8"
mat colnames tab4="Community" "Incident Homebound" "Incident Nursing Home" "Died" "Lost to Follow-up"
mat list tab4
frmttable using sample_derivation_new.rtf, addtable statmat(tab4) title("Weighted Percentages by Wave for Original Cohort") ///
sdec(2) varlabels note("2,031 people remain in the community after the last wave" ///
"When status is missing that wave and subsequent waves are removed" )

/*
//Table for wave 1 characteristics and following them throughout the rounds. 
capture drop group*
gen group1=0
replace group1=1 if everhb==0 & evernh==0
gen group2=0
replace group2=1 if everhb==1 & evernh==0
gen group3=0
replace group3=1 if everhb==0 & evernh==1
gen group4=0
replace group4=1 if everdied==1 & everhb==0 & evernh==0 
gen group5=0
replace group5=1 if everlfu==1 & everhb==0 & evernh==0

keep if status==1 & wave==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 2 3 4 5{
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","2") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i' group1
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","2") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}
mat list tab1
mat list stars

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_new.rtf, addtable statmat(tab1) ///
 title("Sample Characteristics by final status") ///
 ctitles("" "Community" "HB Ever, Only" "NH Ever, Only" "Died Ever" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample" "When status is missing that wave and subsequent waves are removed" ///
 "Highest Income: Income Quartile 4" "Individuals exit sample upon incident homebound/nursing home status, LFU, or after wave 7")
 
 restore
 
 preserve
 
 forvalues i=1/7 {
gen group`i'=nwstatus==`i'
}
 
 keep if status==1
//drop if wave==1 & status!=1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',5,.)
mat stars=J(`rn',5,0)
local r=1
local c=1
foreach i in 1 3 5 6 7 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05) 
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'","3","5","6","7") {
				svy: reg `x' group`i' if group`i'==1 | group1==1
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'","3","5","6","7") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group1==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1  [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"

frmttable using sample_derivation_new.rtf, addtable replace statmat(tab1) ///
 title("Sample Characteristics by next wave status") ///
 ctitles("" "Community"  "Incident HB"  "Incident NH" ///
 "Died" "LFU") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Waves 1 NHATS community-dwelling sample, by next-wave status")
 
restore
*/
//preserve

 capture drop group*


local cvars1 age
local cvars2 n_social_network persontime income_adj n_helpers n_paid_helpers tot_hrsmonth_help_i ///
tot_hrsmonth_paid_i 
local ivars1 female white black hisp other_race married livealone educ_hs_ind proxy ind_noone
local ivars2 ind_any_helpers ind_paid_helper top_quartile_help_helped ///
medicaid medigap srh_fp nhres ///
sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent iadl_diff_ind iadl_independent 
local ivars3 adl1 adl2 adl3 iadl1 iadl2 iadl3 adl_eat_help adl_bath_help adl_toil_help ///
adl_dres_help adl_ins_help adl_bed_help iadl_laun_help ///
iadl_shop_help iadl_meal_help iadl_bank_help iadl_meds_help ///
 reg_doc_seen sr_hosp_ind
label var lfune "Lost to follow up prior to next wave"
local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 inccat4 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_cond_cat3 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind adl_independent inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh everdied metro_ind northeast midwest south west


  keep if status==1 & wave==1
//keep if status==1
local rn : word count 1 `cvars1' `cvars2' `ivars1' `ivars2' `coutcomes' `coutcomes' `ioutcomes' 1 1
di `rn'
mat tab1=J(`rn',4,.)
mat stars=J(`rn',4,0)
local r=1
local c=1

capture drop group*
forvalues i=1/4 {
gen group`i'=inccat`i'
local lab`i' : var label inccat`i'
}

forvalues i=1/4 {
	foreach round in 1 2 {
		foreach x of local cvars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)
			if inlist("`i'", "1" ,"2","3") {
				svy, subpop(if group`i'==1 | group4==1): reg `x' group`i'
				test group`i'
				mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
			local r=`r'+1
}
		foreach x of local ivars`round' {
			qui sum `x' if group`i'==1 & wave==1  [aw=anfin]
			mat tab1[`r',`c']=r(mean)*100
			if inlist( "`i'", "1" ,"2","3") {
				svy, subpop(if status==1 & wave==1  & group`i'==1 | group4==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
}
	local r=`r'+1

	
	foreach x of local coutcomes {
		qui sum `x' if group`i'==1,d
		mat tab1[`r',`c']=r(mean)
		if inlist("`i'", "1" ,"2","3") {
			svy, subpop(if group`i'==1 | group4==1): reg `x' group`i' 
				test group`i'
			mat stars[`r',`c']=(r(p)<.01) + (r(p)<.05)
}
		local r=`r'+1
*		if "`x'"=="tot_paid_by_mc_12m_wi_n0" {
			qui sum `x' if group`i'==1,d
			mat tab1[`r',`c']=r(p50)
			local r=`r'+1
*}
}
	foreach x of local ioutcomes {
		qui sum `x' if group`i'==1
		mat tab1[`r',`c']=r(mean)*100
			if inlist("`i'", "1" ,"2","3") {
				svy, subpop(if status==1 & wave==1  &  group`i'==1 | group4==1): tab `x' group`i' 
				mat stars[`r',`c']=(e(p_Pear)<.01) + (e(p_Pear)<.05)
}
			local r=`r'+1
}
	qui sum n if group`i'==1 & wave==1 [aw=anfin]
	
	mat tab1[`r',`c']=r(N)
	mat tab1[`r'+1,`c']=r(sum)
	local r=1
	local c=`c'+1
}

foreach x in `coutcomes' {
local rnames `rnames' "`x'" "Median"
}

mat rownames tab1=`cvars1' `ivars1' `cvars2' `ivars2' "_" N "Estimate"


frmttable using sample_derivation_new.rtf, addtable replace statmat(tab1) ///
 title("Sample Characteristics by Income Quartile") ///
 ctitles("" "Income Quartile 1"  "Income Quartile 2"  "Income Quartile 3" ///
 "Income Quartile 4") ///
 sdec(2) annotate(stars) asymbol(*,**) ///
 varlabels note("Wave 1 NHATS community-dwelling sample, by Income Quartile" "Using Round 1 Weights")


H="code for competing risk"
use "D:\NHATS\Projects\homebound\ko_homebound_income\data\final\ko_hb_income_final.dta", clear


replace lw=lw+1 if everdied==1 & died_12==1 & status==1
sort spid wave
replace lw=. if died_12==0 & everdied==1 & everhb!=1 & evernh!=1

gsort spid -wave
by spid: carryforward lw, replace

//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
 
keep if wave==1 & status==1



local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind /*inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh*/ metro_ind northeast midwest south
 //work on competing risk
 


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}
label var income_quart1 "Income Quartile: Lowest"
label var income_quart2 "Income Quartile: Second Lowest"
label var income_quart3 "Income Quartile: Second Highest"
label var income_quart4 "Income Quartile: Highest"

label var agecat2 "Age 70-74"
label var agecat3 "Age 75-79"
label var agecat4 "Age 80-84"
label var agecat5 "Age 85-89"
label var agecat6 "Age 90+"

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}
local vars `age' ib4.income_quart /*fin_strain anydebt govtasst finhlpfam meals_wheels */ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp sr_cond_cat2 sr_cond_cat3 ///
ind_paid_helper metro_ind northeast midwest south

 stset lw [pw=anfinw], failure(fail==1) id(spid)

 stcrreg `age' ib4.income_quart female black hisp married, compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying" \ "Wave 1 Weights used") ///
 ctitles("" "HB Subhazard Ratio (1)"  )
 
  stcrreg `vars', compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying" \ "Wave 1 Weights used") ///
 ctitles("" "HB Subhazard Ratio (2)"  ) merge
 
 
  stcurve, cif at1(income_quart=1) at2(income_quart=2) at3(income_quart=3) ///
  at4(income_quart=4) connect(direct) legend(label(1 "Income Quartile 1 (Lowest)") label(2 "Income Quartile 2") ///
  label(3 "Income Quartile 3") label(4 "Income Quartile 4 (Highest)")) note("Competing Risks are Nursing Home and Dying") ///
  xtitle("Analysis Time") xlabel(0(1)7)
  
 graph save nh_die, replace
 graph export nh_die.pdf, replace
 
 
 //stcompet...
 
  capture drop cuminc*
  capture drop ci*
  capture drop complement*
  capture drop KM*
  
  stset lw, failure(fail==1)
  sts gen KM=s
  gen complement=1-KM
  stcompet cuminc=ci, compet1(2) compet2(3)
  
  gen ci=cuminc if fail==1
  replace ci=0 if lw==0 & ci==.
  twoway line complement ci lw, sort xlabel(0(1)7)
  
  stset lw, failure(fail==2)
  sts gen KM1=s
  gen complement1=1-KM1
  stcompet cuminc1=ci, compet1(1) compet2(3)
  gen ci1=cuminc1 if fail==2
    replace ci1=0 if lw==0 & ci1==.
  twoway line complement ci ci1 lw, sort xlabel(0(1)7)
  
  
  stset lw, failure(fail==3)
  sts gen KM2=s
  gen complement2=1-KM2
  stcompet cuminc2=ci, compet1(1) compet2(2)
  gen ci2=cuminc2 if fail==3
  replace ci2=0 if lw==0 & ci2==.
  
  
  stset lw, failure(fail==1 2 3)
  sts gen KM3=s
  gen complement3=1-KM3
  //stcompet cuminc3=ci
 //gen ci3=cuminc3 if fail>0
  
  egen ci3=rowtotal(cuminc cuminc1 cuminc2), missing 
    replace ci3=0 if lw==0 & ci3==.
  bys lw: egen ci4=mean(ci3)
  twoway line ci ci1 ci2 ci4 lw, sort xlabel(0(1)7) ytitle("Probability") ///
  xtitle("Time") legend(label(1 "CIF HB") label(2 "CIF NH") ///
  label(3 "CIF Died") label(4 "CIF All")) title("Cumulative Incidence by Failure type")
   graph save km_cif, replace
 graph export km_cif.pdf, replace
 
  


H="code for cum inc. "
use "D:\NHATS\Projects\homebound\ko_homebound_income\data\final\ko_hb_income_final.dta", clear

replace lw=lw+1 if everdied==1 & died_12==1 & status==1
sort spid wave
replace lw=. if died_12==0 & everdied==1 & everhb!=1 & evernh!=1

gsort spid -wave
by spid: carryforward lw, replace


tab status if wave==1
local p=r(N)
tab status if wave==2

//cumulative incidence

gen n=1 

gen inhb=0
replace inhb=1 if nwstatus==3

gen innh=0 
replace innh=1 if nwstatus==5

gen indied=0
replace indied=1 if nwstatus==6 

mat tab=J(7,6,.)
local r=1
local c=1

forvalues i=1/7{
sum n if status==1 & wave==`i'
local a=r(N)
sum n if nwstatus==7 & status==1 & wave==`i'
local d=r(N)
sum n if status==2 & wave==`i'+1
local b=r(N)
mat tab[`r',`c']=(`b'/(`a'-`d'))*100
local r=`r'+1
}
mat list tab

local r=1
forvalues i=1/7{
svy, subpop(if wave==`i' & nwstatus!=7 ): mean inhb
mat tab[`r',`c'+1]=r(table)[1,1]*100
mat tab[`r',`c'+2]=r(table)[5,1]*100
mat tab[`r',`c'+3]=r(table)[6,1]*100
sum n [aw=anfinw] if status==1 & wave==`i'
local a=r(sum_w)
sum n [aw=anfinw] if nwstatus==3 & wave==`i'
local b=r(sum_w)
mat tab[`r',`c'+4]=(`a')
mat tab[`r',`c'+5]=(`b')
local r=`r'+1
}

mat list tab
mat rownames tab="1-2" "2-3" "3-4" "4-5" "5-6" "6-7" "7-8"
  mat colnames tab="Unweighted Cumulative Incidence" "Weighted Cumulative Incidence" "Weighted 95% CI Lower Limit" "Weighted 95% CI Upper Limit" "Weighted Community Dwelling" "Weighted Homebound"
  mat list tab 
  
  frmttable using incidence.doc, replace statmat(tab) title("Cumulative Incidence for Homebound") note ("Weighted Cumulative Incidence is calculated by taking the weighted population of homebound at the next wave and dividing that by the weighted population of the at risk (current wave)" \ "Weighted Homebound calculated from next wave" \ "Weighted Community Dwelling calculated from current wave")


  //////////////
 
mat tab=J(7,6,.)
local r=1
local c=1

forvalues i=1/7{
sum n if status==1 & wave==`i'
local a=r(N)
sum n if nwstatus==7 & status==1 & wave==`i'
local d=r(N)
sum n if status==3 & wave==`i'+1
local b=r(N)
mat tab[`r',`c']=(`b'/(`a'-`d'))*100
local r=`r'+1
}
mat list tab

local r=1
forvalues i=1/7{
svy, subpop(if wave==`i' & nwstatus!=7 ): mean innh
mat tab[`r',`c'+1]=r(table)[1,1]*100
mat tab[`r',`c'+2]=r(table)[5,1]*100
mat tab[`r',`c'+3]=r(table)[6,1]*100
sum n [aw=anfinw] if status==1 & wave==`i'
local a=r(sum_w)
sum n [aw=anfinw] if nwstatus==5 & wave==`i'
local b=r(sum_w)
mat tab[`r',`c'+4]=(`a')
mat tab[`r',`c'+5]=(`b')
local r=`r'+1
}

mat list tab
mat rownames tab="1-2" "2-3" "3-4" "4-5" "5-6" "6-7" "7-8"
  mat colnames tab="Unweighted Cumulative Incidence" "Weighted Cumulative Incidence" "Weighted 95% CI Lower Limit" "Weighted 95% CI Upper Limit" "Weighted Community Dwelling" "Weighted Nursing Home"
  mat list tab 
  
  frmttable using incidence.doc, replace statmat(tab) title("Cumulative Incidence for Nursing Home") note ("Weighted Cumulative Incidence is calculated by taking the weighted population of Nursing Home at the next wave and dividing that by the weighted population of the at risk (current wave)" \ "Weighted Nursing Home calculated from next wave" \ "Weighted Community Dwelling calculated from current wave") addtable
  
  ///////////
  
  mat tab=J(7,6,.)
local r=1
local c=1

forvalues i=1/7{
sum n if status==1 & wave==`i'
local a=r(N)
sum n if nwstatus==7 & status==1 & wave==`i'
local d=r(N)
sum n if nwstatus==6 & wave==`i'
local b=r(N)
mat tab[`r',`c']=(`b'/(`a'-`d'))*100
local r=`r'+1
}
mat list tab

local r=1
forvalues i=1/7{
svy, subpop(if wave==`i' & nwstatus!=7 ): mean indied
mat tab[`r',`c'+1]=r(table)[1,1]*100
mat tab[`r',`c'+2]=r(table)[5,1]*100
mat tab[`r',`c'+3]=r(table)[6,1]*100
sum n [aw=anfinw] if status==1 & wave==`i'
local a=r(sum_w)
sum n [aw=anfinw] if nwstatus==6 & wave==`i'
local b=r(sum_w)
mat tab[`r',`c'+4]=(`a')
mat tab[`r',`c'+5]=(`b')
local r=`r'+1
}

mat list tab
mat rownames tab="1-2" "2-3" "3-4" "4-5" "5-6" "6-7" "7-8"
  mat colnames tab="Unweighted Cumulative Incidence" "Weighted Cumulative Incidence" "Weighted 95% CI Lower Limit" "Weighted 95% CI Upper Limit" "Weighted Community Dwelling" "Weighted Nursing Home"
  mat list tab 
  
  frmttable using incidence.doc, replace statmat(tab) title("Cumulative Incidence for Death") note ("Weighted Cumulative Incidence is calculated by taking the weighted population of Death at the next wave and dividing that by the weighted population of the at risk (current wave)" \ "Weighted Death calculated from next wave" \ "Weighted Community Dwelling calculated from current wave") addtable
  
  
  /////////
  
  
//incidence rate

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
preserve 
keep if wave==1 & status==1


  stset lw [pw=anfinwgt], failure(fail==1) id(spid)
 stptime,  output(stp, replace) 
    return list
  stset lw, failure(fail==1) id(spid)
 stptime if inlist(wave,1,2),  output(stp1, replace)
 return list
 restore
preserve
 
 //stp is weighted
 use stp.dta, clear
mat tab=J(1,4,.)

 sum _D  
 mat tab[1,1]=r(mean)
 sum _Rate 
 mat tab[1,2]=r(mean)
  sum _Lower 
 mat tab[1,3]=r(mean)
  sum _Upper 
 mat tab[1,4]=r(mean)
 
 mat rownames tab="Total"
  mat colnames tab="Weighted Failures" "Incidence Rate" "Lower 95% CI" "Upper 95% CI"
  mat list tab 
  
  frmttable using incidence.doc, replace statmat(tab) sdec(0,4,4,4) title("Incidence table for Homebound Weighted") ///
  note("IR is weighted" / "Weighted at Wave 1 weights") addtable 

 
 
 
 //stp1 is unweighted
  use stp1.dta, clear
mat tab=J(1,4,.)

 sum _D 
 mat tab[1,1]=r(mean)
 sum _Rate 
 mat tab[1,2]=r(mean)
  sum _Lower 
 mat tab[1,3]=r(mean)
  sum _Upper 
 mat tab[1,4]=r(mean)
  
   mat rownames tab="Total"
  mat colnames tab="Failures" "Incidence Rate" "Lower 95% CI" "Upper 95% CI"
  mat list tab 
  
  frmttable using incidence.doc, replace statmat(tab) sdec(0,4,4,4) title("Incidence table for Homebound Unweighted") ///
  note("IR is unweighted") addtable 


H="code looking at Medicaid"
use "D:\NHATS\Projects\homebound\ko_homebound_income\data\final\ko_hb_income_final.dta", clear

replace lw=lw+1 if everdied==1 & died_12==1 & status==1
sort spid wave
replace lw=. if died_12==0 & everdied==1 & everhb!=1 & evernh!=1

gsort spid -wave
by spid: carryforward lw, replace

//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
 
keep if wave==1 & status==1



local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind /*inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh*/ metro_ind northeast midwest south
 //work on competing risk
 


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}
label var income_quart1 "Income Quartile: Lowest"
label var income_quart2 "Income Quartile: Second Lowest"
label var income_quart3 "Income Quartile: Second Highest"
label var income_quart4 "Income Quartile: Highest"

label var agecat2 "Age 70-74"
label var agecat3 "Age 75-79"
label var agecat4 "Age 80-84"
label var agecat5 "Age 85-89"
label var agecat6 "Age 90+"

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}
local vars `age' ib4.income_quart /*fin_strain anydebt govtasst finhlpfam meals_wheels */ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp sr_cond_cat2 sr_cond_cat3 ///
ind_paid_helper metro_ind northeast midwest south

 stset lw [pw=anfinw], failure(fail==1) id(spid)
 



 stcrreg `age' female black hisp married ib4.income_quart , compete(fail==2 3) 
outreg, keep(1.income_quart 2.income_quart 3.income_quart) stats(e_b se p)
 stcrreg `age' female black hisp married ib4.income_quart medicaid, compete(fail==2 3)
outreg, merge keep(1.income_quart 2.income_quart 3.income_quart medicaid) stats(e_b se p)
 stcrreg `age' female black hisp married ib5.inccat, compete(fail==2 3)
 outreg, merge keep(1.inccat 2.inccat 3.inccat 4.inccat)  stats(e_b se p)
stcrreg `age' female black hisp married ib4.income_quart##medicaid, compete(fail==2 3) 
outreg, keep(1.income_quart 2.income_quart 3.income_quart 1.medicaid 1.income_quart#1.medicaid 2.income_quart#1.medicaid 3.income_quart#1.medicaid) merge stats(e_b se p)
 stcrreg `age' female black hisp married ib5.inccat, compete(fail==2 3)
 outreg, merge keep(1.inccat 2.inccat 3.inccat 4.inccat)  stats(e_b se p)



H="competing risk regressions split by ADL status"
use "D:\NHATS\Projects\homebound\ko_homebound_income\data\final\ko_hb_income_final.dta", clear

replace lw=lw+1 if everdied==1 & died_12==1 & status==1
sort spid wave
replace lw=. if died_12==0 & everdied==1 & everhb!=1 & evernh!=1

gsort spid -wave
by spid: carryforward lw, replace

//ANALYSIS
//creating Incidence Table using stptime command for survival analysis 
//with lw being the time and homebound the failure. 

capture drop fail
 gen fail=0
 replace fail=1 if everhb==1
 replace fail=2 if evernh==1
 replace fail=3 if everdied==1 & fail!=1 & fail!=2
 
keep if wave==1 & status==1



local cvars1 age
local cvars2 persontime  income_adj
local ivars1 female white black hisp other_race married 
label var inchb "Incident Homebound Next Wave"
label var incnh "Incident Nursing Home Next Wave"
local ivars2 inccat1 inccat2 inccat3 proxy  ///
medicaid medigap srh_fp adl_eat_help adl_bath_help adl_toil_help adl_dres_help ///
adl_ins_help adl_bed_help adl_impair iadl_impair ///
sr_cond_cat1 sr_cond_cat2 sr_ami_ever sr_stroke_ever sr_cancer_ever sr_hip_ever sr_heart_dis_ever ///
sr_htn_ever sr_ra_ever sr_osteoprs_ever sr_diabetes_ever sr_lung_dis_ever ///
prob_dementia dem_2_cat adl_diff_ind /*inchbnextwave incnhnextwave ///
lfunextwave died_12 everhb evernh*/ metro_ind northeast midwest south
 //work on competing risk
 


foreach x in agecat income_quart {
levelsof `x', local(levels)
foreach l of local levels {
	gen `x'`l'=`x'==`l'
	local lab : label `x' `l'
	label var `x'`l' "`lab'"
}
}
label var income_quart1 "Income Quartile: Lowest"
label var income_quart2 "Income Quartile: Second Lowest"
label var income_quart3 "Income Quartile: Second Highest"
label var income_quart4 "Income Quartile: Highest"

label var agecat2 "Age 70-74"
label var agecat3 "Age 75-79"
label var agecat4 "Age 80-84"
label var agecat5 "Age 85-89"
label var agecat6 "Age 90+"

forvalues i=2/6 {
	local age `age' agecat`i'
}

forvalues i=1/3 {
	local inc `inc' income_quart`i'
}
local vars `age' ib4.income_quart /*fin_strain anydebt govtasst finhlpfam meals_wheels */ ///
female black hisp married ind_noone educ_hs_ind  ///
medicaid prob_dem `cond' adl_diff_ind srh_fp sr_cond_cat2 sr_cond_cat3 ///
ind_paid_helper metro_ind northeast midwest south
global vars `vars'
 stset lw [pw=anfinw], failure(fail==1) id(spid)
/*
 stcrreg `age' ib4.income_quart female black hisp married, compete(fail==2 3) 
 outreg using homebound_income_comp_risk, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying" \ "Wave 1 Weights used") ///
 ctitles("" "HB Subhazard Ratio (1)"  )
 */

 

replace adl_index=0
foreach x in eat bath toil dres ins out bed {
replace adl_index=adl_index+1 if adl_`x'_help==1 | adl_`x'_dif==1
replace adl_index=0 if adl_diff_ind==0
}
gen adlcat=adl_index+1
replace adlcat=3 if adlcat>2
label define adlcat 1 "0 ADLs" 2 "1 ADL" 3 "2+ADLs"
label values adlcat adlcat

forvalues i=1/3 {
preserve
keep if adlcat==`i'
local lab : label adlcat `i'

  stcrreg `vars', compete(fail==2 3) 
 outreg using hb_inc_crreg_adl_strat, replace ///
 stats(e_b p e_ci) varlabels note("*Competing Risks are Nuring Home and Dying" \ "Wave 1 Weights used") ///
 ctitles("" "`lab'"  ) `merge' 
 
   stcurve, cif at1(income_quart=1) at2(income_quart=2) at3(income_quart=3) ///
  at4(income_quart=4) connect(direct) legend(label(1 "Income Quartile 1 (Lowest)") label(2 "Income Quartile 2") ///
  label(3 "Income Quartile 3") label(4 "Income Quartile 4 (Highest)")) note("Competing Risks are Nursing Home and Dying") ///
  xtitle("Analysis Time") xlabel(1(1)7) name(adl`i') title(`lab')

local merge merge
restore
}

graph combine adl1 adl2 adl3, ycommon ysize(4) xsize(12) rows(1) 



H="****************"


H="changelog"


********************Change Log******************** 



Updates:

3/5/2020 EBL
------------
Renamed to ko_homebound_income to reflect what we said we'd do.

2/14/2020 EBL
------------
Added "competing risk regressions split by ADL status" to address questions from Al Siu and Melissa Garrido. Made archive of code as it existed today (Homebound_and_income_200200214_archive) and cleaned up all older and out of date code.  Changed so that the first header creates and saves a dataset that all the others call.

12/3/2019 EBL
------------
Added "code looking at Medicaid," perhaps for an appendix

11/20/2019 MH
------------
Added in new tab that gives numbers for how many from each status went into next waves status. 

10/25/2019 EBL
------------
Set "everdied" to zero if missing so that it's meaningful in the table 1. 

10/24/2019 MH
------------
Adding in wave 8 and re-running analysis. 

08/19/2019 MH
------------
Change to lw by subtracting 1 to get proper time analysis for incidence rate. 

08/02/2019 MH
------------
Small changes to lw, everdied variables. Adding in notes. 

08/01/2019 MH
------------
A few label and note changes. A quick change to how ttest was done for svy, subpop in table by income. 

04/04/2019 MH
------------
New Cumulative Incidence rate per wave and Incidence Rate over full time period. 

03/08/2019 MH
------------
Cleaned some code, added notes, using whiteoth variable in tables. 

02/20/2019 MH
------------
Updated for round 7 data. No new analysis done. 

*/