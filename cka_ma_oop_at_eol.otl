= V4 Outline MultiLine NoSorting TabWidth=30

H="Outline"
/* 
********************HEADING******************** 

Project Name: MA and OOP spending in the last year of life

Date Started: 7/13/20

Primary Investigator: CKA
Funding Source:

Primary Analyst: CKA
Secondary Analyst: MH

Datasets Used: 



*/
 
/* Stata */

global intpath "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\int_data"
global datapath "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data"
global outpath "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\output\in_progress"
global hrs "D:\HRS\Shared\base_data\hrs_cleaned"
global cms "D:\HRS\Shared\base_data\hrs_cms\Stata"





H="get ma and hospice info at last year of life"

use "D:\HRS\Projects\dementia_decedents\ask_r01_financial_burden_dementia_7_yrs\data\int_data\oopme_final_2016.dta", clear
rename *, l
gen id=hhid+pn

gsort id -year
by id: keep if _n<=2
tempfile t1
save `t1'

use id exit_year using "D:\HRS\Shared\base_data\hrs_cleaned\exit_02_to_16_dt.dta", clear
gen ivw_date=.
rename exit year

append using "D:\HRS\Shared\base_data\hrs_cleaned\core_00_to_14.dta"
replace ivw_date=c_ivw_date
replace year=core_year if missing(year)
 
keep id ivw_date year medigap
gsort id -year 
by id: gen ivw_date_n1=ivw_date[_n+1]


merge m:1 id  using "${intpath}\ma_and_hs.dta", keepusing(index_date) keep(match) nogen
replace ivw_date=index_date if missing(ivw_date)

keep if inrange(index_date-ivw_date,0,365)

merge 1:1 id year using `t1', gen(oopm) keepusing(total_oop hospital_oop doctor_oop rx_oop nh_oop helper_oop home_oop other_oop *oop private_medigap_prem mc_hmo mc_hmo_prem private_medigap_1 private_medigap_2 private_medigap_3 private_medigap_4 private_medigap_5 private_medigap) keep(match)
rename private_medigap_prem medigap_prem_oop
gen ivw_time=ivw_date-ivw_date_n1
gen time2d=index_date-ivw_date
gen pct=1 if index_date-ivw_date_n1<=365
replace pct=365/(index_date-ivw_date_n1) if index_date==ivw_date & missing(pct)

replace medigap_prem_oop=medigap_prem_oop*12
replace pct=(365-time2d)/(ivw_time)  if missing(pct)
foreach x in total_oop hospital_oop doctor_oop rx_oop nh_oop helper_oop home_oop other_oop medigap_prem_oop mc_hmo mc_hmo_prem private_medigap_1 private_medigap_2 private_medigap_3 private_medigap_4 private_medigap_5 private_medigap{
	gen `x'_last=`x'*pct
	by id: egen `x'_last_yr=total(`x'_last)

}

by id: egen medigap_n1=max(medigap)

/*--using the same method as above for medigap oop
rename medigap_prem_oop_last_yr medigap_prem_oop_n1exit
replace medigap_prem_oop_n1=medigap_prem_oop_n1*12
replace medigap_prem_oop_last_yr=medigap_prem_oop_last*12
sort id year
*by id: replace medigap_prem_oop_last_yr=medigap_prem_oop_last_yr[_n+1] if _n!=_N*/
drop *oop ivw_time time2d pct oopm ivw_date* *last year medigap mc_hmo mc_hmo_prem private_medigap_1 private_medigap_2 private_medigap_3 private_medigap_4 private_medigap_5 private_medigap

replace other_oop_last_yr=total-hospital-doctor-rx-nh-helper-home

duplicates drop	
save "${intpath}\oopdata.dta", replace



H="Annualize OOP"

use "D:\HRS\Projects\dementia_decedents\ask_r01_financial_burden_dementia_7_yrs\data\int_data\oopme_final_2016.dta", clear
rename *, l
gen id=hhid+pn

replace total_oop=total_oop-mc_hmo if mc_hmo!=.

gsort id -year
by id: keep if _n<=2
tempfile t1
save `t1'

use id exit_year using "D:\HRS\Shared\base_data\hrs_cleaned\exit_02_to_16_dt.dta", clear
gen ivw_date=.
rename exit year

append using "D:\HRS\Shared\base_data\hrs_cleaned\core_00_to_14.dta"
replace ivw_date=c_ivw_date
replace year=core_year if missing(year)
 
keep id ivw_date year medigap
gsort id -year 
by id: gen ivw_date_n1=ivw_date[_n+1]


merge m:1 id  using "${intpath}\ma_and_hs.dta", keepusing(index_date) keep(match) nogen
replace ivw_date=index_date if missing(ivw_date)

keep if inrange(index_date-ivw_date,0,365)

merge 1:1 id year using `t1', gen(oopm) keepusing(total_oop hospital_oop doctor_oop rx_oop nh_oop helper_oop home_oop other_oop *oop private_medigap_prem) keep(match)
rename private_medigap_prem medigap_prem_oop
gen ivw_time=ivw_date-ivw_date_n1
gen time2d=index_date-ivw_date
gen pct=1 if index_date-ivw_date_n1<=365
replace pct=365/(index_date-ivw_date_n1) if index_date==ivw_date & missing(pct)

replace medigap_prem_oop=medigap_prem_oop*12
replace pct=(365-time2d)/(ivw_time)  if missing(pct)
foreach x in total_oop hospital_oop doctor_oop rx_oop nh_oop helper_oop home_oop other_oop medigap_prem_oop {
	gen `x'_last=`x'*pct
	by id: egen `x'_last_yr=total(`x'_last)

}

by id: egen medigap_n1=max(medigap)

/*--using the same method as above for medigap oop
rename medigap_prem_oop_last_yr medigap_prem_oop_n1exit
replace medigap_prem_oop_n1=medigap_prem_oop_n1*12
replace medigap_prem_oop_last_yr=medigap_prem_oop_last*12
sort id year
*by id: replace medigap_prem_oop_last_yr=medigap_prem_oop_last_yr[_n+1] if _n!=_N*/
drop *oop ivw_time time2d pct oopm ivw_date* *last year medigap

replace other_oop_last_yr=total-hospital-doctor-rx-nh-helper-home

duplicates drop	
save "${intpath}\oopdata.dta", replace



H="get mds info for all benes"
use "D:\HRS\Shared\base_data\hrs_cms\Stata\mds_2_99_10.dta", clear

keep bid_hrs_22 fac_int_id aa8a_pri_rfa trgt_dt 

gen target=date(trgt_dt, "YMD")
format %td target


gen date=target
format %td date


sort bid_hrs_22 fac_int_id date
////
gen type_cd=.
replace type_cd=1 if aa8a=="09" | aa8a=="01"
replace type_cd=2 if aa8a=="06" | aa8a=="07" | aa8a=="08"
//replace type_cd=1 if  year(admit)<1999



drop if type_cd==.

sort bid_hrs_22 fac_int_id date type_cd
/*
drop if type_cd==.
sort bid_hrs_22 date type_cd
bys bid_hrs_22 date type_cd: keep if _n==1 
*/
sort bid_hrs_22 fac_int_id date type_cd
gen a=1 if bid_hrs_22==bid_hrs_22[_n+1] & type_cd==2 & type_cd[_n+1]==2 & fac_int_id==fac_int_id[_n+1]
gen b=1 if bid_hrs_22==bid_hrs_22[_n-1] & type_cd==1 & type_cd[_n-1]==1 & fac_int_id==fac_int_id[_n-1]


//drop if a==1 | b==1 not taking out becuase of readmissions

tempfile a
save "`a'"


use "D:\HRS\Shared\base_data\hrs_cms\Stata\mds_3_10_16.dta", clear
sort bid_hrs_22
keep bid_hrs_22 a0310a_fed_obra_cd a0310f_entry_dschrg_cd a0310e_first_since_admsn_cd fac_prvdr_intrnl trgt_dt    


destring fac_prvdr_intrnl, replace


gen target=date(trgt_dt, "YMD")
format %td target

// assessment reference date is the same as the target date unless it is missing. 
gen date=target

format %td date


sort bid_hrs_22 fac_prvdr_intrnl date
////
gen type_cd=.
replace type_cd=1 if a0310a_fed_obra_cd=="01" | a0310f_entry_dschrg_cd=="01" 
replace type_cd=2 if inlist(a0310f_entry_dschrg_cd, "10", "11", "12")

gen same_day=1 if a0310a_fed_obra_cd=="01" & inlist(a0310f_entry_dschrg_cd, "10", "11", "12")
replace type_cd=3 if same_day==1

drop if type_cd==.

gen a=1 if type_cd[_n-1]==1 & type_cd==1 & bid_hrs_22[_n-1]==bid_hrs_22 & fac_prvdr_intrnl[_n-1]==fac_prvdr_intrnl 

gen b=1 if type_cd[_n+1]==2 & type_cd==2 & bid_hrs_22[_n+1]==bid_hrs_22 & fac_prvdr_intrnl[_n+1]==fac_prvdr_intrnl



tempfile b
save "`b'"

use "`a'", clear
append using "`b'" 

replace fac_int_id=fac_prvdr_intrnl if fac_int_id==.

drop a b fac_prvdr_intrnl

sort bid_hrs_22 fac_int_id date

gen admit=date if type_cd==1
gen discharge=date if type_cd==2

replace admit=date[_n-1] if type_cd[_n-1]==1 & bid_hrs_22==bid_hrs_22[_n-1] & fac_int_id==fac_int_id[_n-1]

replace discharge=date[_n+1] if type_cd[_n+1]==2 & bid_hrs_22==bid_hrs_22[_n+1] & fac_int_id==fac_int_id[_n+1]

format admit %td
format discharge %td


//sort bid_hrs_22 a d fac_int_id
bys bid_hrs_22 fac_int_id admit discharge: keep if _n==1 


replace admit=discharge if admit==.
replace discharge=admit if discharge==.

merge m:1 bid using "${intpath}\ma_and_hs.dta", keep(match) 

keep if discharge>index_date-365
replace admit=index_date-365 if admit<index_date-365

gen los=(discharge-admit+1)/30.4
by id, sort: egen nh_los=total(los)
replace nh_los=ceil(nh_los)
replace nh=12 if nh>12
keep id index_date nh_los
label var nh_los "NH months in last year (from MDS)"
duplicates drop

save "${intpath}\mds.dta", replace



H="combine with survey info"
use "${intpath}\ma_and_hs.dta", clear
merge 1:1 id using "${intpath}\oopdata.dta", nogen keep(match) //gen(oopm)
merge 1:1 id using "${intpath}\mds.dta", nogen //gen(mdsm)
*merge 1:1 id using "D:\HRS\Shared\raw\HRS\hrs_tracking_2016\TRK2016TR_R.dta"
merge 1:m id using "${hrs}\core_00_to_14.dta", nogen keep(match) keepusing(core_year c_ivw_date hhid pn married networth_adj2012 hhm adl_*core comor_c_hrs) //gen(corem)
merge m:1 id using "${hrs}\exit_02_to_16_dt.dta", nogen keep(match) keepusing(nhres medigap) //gen(corem) 
merge m:1 hhid pn using  "D:\HRS\Shared\raw\HRS\hrs_tracking_2016\TRK2016TR_R.dta", keep(match) nogen keepusing(birthmo birthyr degree hispanic gender race)

merge 1:1 id core_year using "D:\HRS\Shared\raw\HRS\hrs_public_2014\dementia\pdem_withvarnames_00_14.dta" , keepusing(pdem) nogen keep(match)
gen prob_dem=pdem>0.5 if !missing(pdem)
label var prob_dem "Probable dementia at last wave pre-death"

gen livealone=hhm==0 & !married
sort id core_year 
by id: keep if _n==_N
drop if index_date-c_ivw_date>4*365.25
gen age_at_death=year(index_date)-birthyr
replace age_at_death=age_at_death-1 if birthmo>month(index_date)
drop if age<65
gen female=gender==2
rename race orace
gen race=hispanic<5
replace race=2 if !race & orace==2 
replace race=3 if !race & orace==1 
replace race=4 if !race & orace==7
replace race=5 if !race

label define race 1 "Hispanic" 2 "NH Black" 3 "NH White" 4 "NH Other" 5 "Unknown"
label values race race
  
drop hhm c_ivw_date birth* gender orace hispanic adl_cat_core adl_partial adl_severe pdem

label var nhres "Nursing home resident at death (from exit)"
label var medigap "Medigap plan in last year of life (from exit and N1)"
replace medigap=medigap_n1 if !missing(medigap_n1) & medigap!=1
drop medigap_n1
replace medigap_p=0 if !medigap
//pull helpers 
preserve
use "D:\HRS\Shared\base_data\hrs_cleaned\helper_hours_2016.dta" if ivw_type==2, clear

gen ind_helper=n_hp>0 & !missing(n_hp)
label var ind_helper "Indicator any helpers (from exit)"
keep id ind_helper n_hp
tempfile t1
save `t1'

restore
merge m:1 id using `t1', keep(match master) nogen
replace ind_helper=0 if missing(ind_helper)
replace n_hp=0 if missing(n_hp)

save "${datapath}\cka_ma_oop_at_eol.dta", replace


H="merging in survey vars"

 *merge in with weight variables
use "D:\HRS\Shared\base_data\hrs_cleaned\restr_tracker_v2014.dta" 
keep  secu stratum  id hhid
destring id, replace
save "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\secu stratum.dta", replace

use "D:\HRS\Shared\base_data\hrs_cleaned\core_00_to_14.dta"
keep wgtr hhid id core_year
destring id, replace
merge m:1 hhid id using "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\secu stratum.dta"
keep if _merge==3
sort hhid id core_year
drop _merge
save "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\weighting vars.dta", replace

use "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\cka_ma_oop_at_eol.dta"
destring id, replace
sort hhid id core_year
merge hhid id core_year using  "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\weighting vars.dta"
save "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\cka_ma_oop_at_eol.dta", replace

sort id core_year
drop _merge
merge 1:1 id core_year using "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\use vars.dta"
keep if _merge==3
save "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\cka_ma_oop_at_eol.dta", replace


H="variable cleaning"
*VARIABLE CLEANING
use "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\cka_ma_oop_at_eol.dta"
destring id, replace
sort hhid id core_year
drop _merge
merge 1:1 hhid id core_year using  "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\weighting vars.dta"
*ma in categories: none, full year, partial year
gen ma3cat=0
replace ma3cat=1 if any_ma==1 & full_ma==0
replace ma3cat=2 if full_ma==1
replace ma3cat=. if index_date==.
label define mc3 0 "none" 1 "partial year" 2 "full year"
label values ma3cat mc3



*any mds record of nh or proxy reports individual died in nh
gen any_nh=0
replace any_nh=1 if nhres==1
replace any_nh=1 if nh_los!=.

*any mds record of nh
gen mds_nh=1
replace mds_nh=0 if nh_los==.

*any oop spending by cat
foreach x in total_oop hospital_oop doctor_oop rx_oop nh_oop helper_oop home_oop other_oop medigap_prem_oop {
recode `x'_last_yr (min/0=0)(0.000000000001/max=1), gen(any_`x')
}

*keep= no medicaid, no nursing home
gen keep=1 if any_total_oop!=.
replace keep=0 if ind_buyin==1
*2000 individuals with at least one month medicaid
replace keep=0 if mds_nh==1
**2599 individuals with at least one month in nh

/*log transform expenditures
gen tot_oop_log=log(total_oop_last_yr)
gen hospital_log=log(hospital_oop_last_yr)
gen doctor_log=log(doctor_oop_last_yr)
gen rx_log=log(rx_oop_last_yr)
gen nh_log=log(nh_oop_last_yr)
gen helper_log=log(helper_oop_last_yr)
gen home_log=log(home_oop_last_yr)
gen other_log=log(other_oop_last_yr)
*/

*new survey stratum variable due to 2 strata (out of 54) with too few units
gen stratum_n=stratum
replace stratum_n=52 if stratum==55 | stratum==56


*gen keep variable to limit to ppl with at least $1 spending in any category
foreach x in any_total_oop any_hospital_oop any_doctor_oop any_rx_oop any_nh_oop any_helper_oop any_home_oop any_other_oop any_medigap_prem_oop {
gen `x'_keep = keep
replace `x'_keep=0 if `x'==0
}

*gen keep variable to limit to ppl with use in any category
foreach x in hospital_use nh_use doctor_use rx_use other_use home_use {
gen `x'_keep = keep
replace `x'_keep=0 if `x'==0
}

H="analysis"
*ANALYSIS
svyset secu [pweight=wgtr], strata(stratum_n) vce(linearized)
svy, subpop(keep): tab ma3cat


*examine proportions with any OOP spending
putexcel set "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\output\examine cost bins_2 2 2021.xls", replace
putexcel A1:H1= "Examining OOP costs by categories: MA vs TM", merge bold border(bottom)

putexcel B2:D2= "% with any OOP costs", merge border(bottom)
putexcel F2:H2= "mean OOP cost", merge border(bottom)

putexcel B3= "TM", border(bottom)
putexcel C3= "TM and MA", border(bottom)
putexcel D3= "MA", border(bottom)
putexcel F3= "TM", border(bottom)
putexcel G3= "TM and MA", border(bottom)
putexcel H3= "MA", border(bottom)

***

local catvars any_total_oop any_hospital_oop any_doctor_oop any_rx_oop any_nh_oop any_helper_oop any_home_oop any_other_oop any_medigap_prem_oop
local i=4
local j=5

foreach x of local catvars {
	putexcel A`i'= "`x'"
	putexcel A`j'= "lower boundary 95% ci"
	svy, subpop(keep): logistic `x' i.ma3cat
	margins ma3cat
	matlist r(table)
	matrix results=r(table)
	scalar ratetm=results[1,1]
	putexcel B`i'=matrix(ratetm), nformat(percent_d2)
	scalar ratetm=results[5,1]
	putexcel B`j'=matrix(ratetm), nformat(percent_d2)
	scalar ratema=results[1,2]
	putexcel C`i'=matrix(ratema), nformat(percent_d2)
	scalar ratetm=results[5,2]
	putexcel C`j'=matrix(ratetm), nformat(percent_d2)
	scalar ratema=results[1,3]
	putexcel D`i'=matrix(ratema), nformat(percent_d2)
	scalar ratetm=results[5,3]
	putexcel D`j'=matrix(ratetm), nformat(percent_d2)
local i= `i'+3
local j=`j'+3
}

local contvars total_oop_last_yr hospital_oop_last_yr doctor_oop_last_yr rx_oop_last_yr nh_oop_last_yr helper_oop_last_yr home_oop_last_yr other_oop_last_yr medigap_prem_oop_last_yr 
local i=4
local j=5

foreach x of local contvars {
	svy, subpop(if keep==1 & ma3cat==0): mean `x' 
	matlist r(table)
	matrix results=r(table)
	scalar ratetm=results[1,1]
	putexcel F`i'=matrix(ratetm), nformat(accountcur)
	scalar ratetm=results[5,1]
	putexcel F`j'=matrix(ratetm), nformat(accountcur)
	svy, subpop(if keep==1 & ma3cat==1): mean `x' 
	matlist r(table)
	matrix results=r(table)
	scalar ratetm=results[1,1]
	putexcel G`i'=matrix(ratetm), nformat(accountcur)
	scalar ratetm=results[5,1]
	putexcel G`j'=matrix(ratetm), nformat(accountcur)
	svy, subpop(if keep==1 & ma3cat==2): mean `x' 
	matlist r(table)
	matrix results=r(table)
	scalar ratetm=results[1,1]
	putexcel H`i'=matrix(ratetm), nformat(accountcur)
	scalar ratetm=results[5,1]
	putexcel H`j'=matrix(ratetm), nformat(accountcur)
local i= `i'+3
local j=`j'+3
}

***




*********************************************************************

*examine proportions with any OOP spending
putexcel set "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\output\reg model total spending_2 2 2021.xls", replace
putexcel A1:D1= "Examining OOP costs by categories: MA vs TM", merge bold border(bottom)

putexcel B2:D2= "mean OOP cost", merge border(bottom)

putexcel B3= "TM", border(bottom)
putexcel C3= "TM and MA", border(bottom)
putexcel D3= "MA", border(bottom)


local contvars total_oop_last_yr hospital_oop_last_yr doctor_oop_last_yr rx_oop_last_yr nh_oop_last_yr helper_oop_last_yr home_oop_last_yr other_oop_last_yr medigap_prem_oop_last_yr 
local i=4
local j=5

foreach x of local contvars {
	svy, subpop(if keep==1 & ma3cat==0): mean `x' 
	matlist r(table)
	matrix results=r(table)
	scalar ratetm=results[1,1]
	putexcel B`i'=matrix(ratetm), nformat(accountcur)
	scalar ratetm=results[5,1]
	putexcel B`j'=matrix(ratetm), nformat(accountcur)
	svy, subpop(if keep==1 & ma3cat==1): mean `x' 
	matlist r(table)
	matrix results=r(table)
	scalar ratetm=results[1,1]
	putexcel C`i'=matrix(ratetm), nformat(accountcur)
	scalar ratetm=results[5,1]
	putexcel C`j'=matrix(ratetm), nformat(accountcur)
	svy, subpop(if keep==1 & ma3cat==2): mean `x' 
	matlist r(table)
	matrix results=r(table)
	scalar ratetm=results[1,1]
	putexcel D`i'=matrix(ratetm), nformat(accountcur)
	scalar ratetm=results[5,1]
	putexcel D`j'=matrix(ratetm), nformat(accountcur)
local i= `i'+3
local j=`j'+3
}


*************

svy, subpop(keep): tab full_ma
foreach var of varlist any_total_oop any_hospital_oop any_doctor_oop any_rx_oop any_nh_oop any_helper_oop any_home_oop any_other_oop {
svy, subpop(keep): tab `var' full_ma, column
}

tabstat total_oop_last_yr, statistics (mean sd) by(full_ma)

twoway (histogram tot_oop_log if full_ma==0, color(blue%30))(histogram tot_oop_log if full_ma==1, color(red%30)), legend(order (1 "TM" 2 "MA"))
graph save "Graph" "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\output\histograms to show amy_ july 23\histogram_total oop_ jan 19 2021.gph", replace

twoway (histogram hospital_log if full_ma==0, color(blue%30))(histogram hospital_log if full_ma==1, color(red%30)), legend(order (1 "TM" 2 "MA")) saving(ckahospital.gph)
twoway (histogram doctor_log if full_ma==0, color(blue%30))(histogram doctor_log if full_ma==1, color(red%30)), legend(order (1 "TM" 2 "MA")) saving(ckadoctor.gph)
twoway (histogram rx_log if full_ma==0, color(blue%30))(histogram rx_log if full_ma==1, color(red%30)), legend(order (1 "TM" 2 "MA")) saving(ckarx.gph)
twoway (histogram nh_log if full_ma==0, color(blue%30))(histogram nh_log if full_ma==1, color(red%30)), legend(order (1 "TM" 2 "MA")) saving(ckanh.gph)
twoway (histogram helper_log if full_ma==0, color(blue%30))(histogram helper_log if full_ma==1, color(red%30)), legend(order (1 "TM" 2 "MA")) saving(ckahelper.gph)
twoway (histogram home_log if full_ma==0, color(blue%30))(histogram home_log if full_ma==1, color(red%30)), legend(order (1 "TM" 2 "MA")) saving(ckahome.gph)
twoway (histogram other_log if full_ma==0, color(blue%30))(histogram other_log if full_ma==1, color(red%30)), legend(order (1 "TM" 2 "MA")) saving(ckaother.gph)


gr combine ckahospital.gph ckadoctor.gph ckarx.gph ckanh.gph ckahelper.gph ckahome.gph 
graph save "Graph" "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\output\histograms to show amy_ july 23\histogram_oop by cat_ jan 19 2021.gph", replace

foreach var of varlist 
tabstat total_oop_last_yr, statistics (mean sd) by(full_ma)


tabstat total_oop_last_yr hospital_oop_last_yr doctor_oop_last_yr rx_oop_last_yr nh_oop_last_yr helper_oop_last_yr home_oop_last_yr other_oop_last_yr, statistics (mean ) by(full_ma)

H="strip dates to pull unrestricted dataset"
use "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\cka_ma_oop_at_eol.dta" , clear
desc, fulln
drop bid index_date
tab race
save "D:\HRS\Projects\medicare_advantage\cka_ma_oop_at_eol\data\final_data\cka_ma_oop_at_eol_unr.dta" , replace