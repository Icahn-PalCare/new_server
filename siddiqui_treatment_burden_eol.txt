= V4 Outline MultiLine NoSorting TabWidth=30

H="Project Outline"
/* 
********************HEADING******************** 

Project Name: Treatment Burden at the End of Life

Date Started: 6/6/19

Primary Investigator: Alina Siddiqui (student of KO and CKA)
Funding Source: ?

Created by: EBL

Primary Analyst: JS
Secondary Analyst: OR

Datasets Used: NHATS, NHATS-linked Medicare claims only for full death info


*/
 
//STATA
// Global Macros use $ symbol to be called. 

//Clean NHATS 
global nhats "D:\nhats\shared\base_data\nhats cleaned"

//NHATS wave 2 
global wave2 "D:\NHATS\Shared\raw\NHATS\NHATS Public\round_2"

//NHATS cross-wave raw
global xwave "D:\NHATS\Shared\base_data\NHATS cleaned\working"

//Intermediate Data Path
global intpath "D:\NHATS\Projects\exploratory\siddiqui_treatment_burden_eol\data\int_data"

// Final Data Path
global datapath "D:\NHATS\Projects\exploratory\siddiqui_treatment_burden_eol\data\final_data"

//Log files path
global logpath "D:\NHATS\Projects\exploratory\siddiqui_treatment_burden_eol\output\logs"

//Log files path
global outpath "D:\NHATS\Projects\exploratory\siddiqui_treatment_burden_eol\output\in_progress"



H="combine data"
//7/30/19--ebl--get hospice and hospice days
use "D:\NHATS\Shared\base_data\CMS_claims\Stata\hs_09_17.dta", clear
merge m:1 bene_id using "D:\NHATS\Shared\base_data\CMS_claims\Stata\xwalk_2016.dta", keep(match) keepusing(spid)
by bene_id, sort: egen first_hs=min(admit_date)
gen los=disch_date-admit_date
replace los=1 if los==0
by bene_id: egen days_on_hospice=total(los)
keep spid days first_hs
duplicates drop
tempfile hs
save `hs'


//get the module and other round 2 variables not in the main dataset

use "${wave2}\NHATS_Round_2_SP_File.dta", clear
keep spid eh2* mc2meds mc2whr* mc2howpk* *chginspln *ansitindr *anhlpwdec mo2insdyrgo
gen ind_module=eh2advicedoc!=-1
label var ind_module "Received treatment burden module"

foreach x of varlist eh2*  mc2meds mc2whr* mc2howpk* *chginspln *ansitindr *anhlpwdec mo* {
	replace `x'=.a if `x'==-9
	replace `x'=.b if `x'==-8
	replace `x'=.c if `x'==-7
	replace `x'=.d if `x'==-1
	label define `x' .a "Missing" .b "DK" .c "RF" .d "Inapplicaple", modify
}


rename eh2* *
rename mc2* *
rename mo2* *

tempfile wave2
save `wave2'

//get the LML variables that aren't already in main dataset
use "${xwave}\round_1_to_7.dta", clear
merge 1:1 spid wave using "${nhats}\sp_round_1_7.dta", keepusing(lml)
keep if lml==1
keep spid doctor docclear relg relgamt pain painhlp painhlpam bre brehlp brehlpam
tempfile lml
save `lml'


//and bring them together
use "${nhats}\sp_round_1_7.dta", clear
//7/30/19--ebl--get round 1 srh for change
sort spid wave
by spid: gen srh_n1=srh[_n-1]
label var srh_n1 "SRH at previous interview"
gsort spid -wave
by spid: carryforward *lml, replace
keep if wave==2 & sp_ivw==1 & lml==0
merge 1:1 spid using `wave2', gen(modm)
merge 1:1 spid using `lml', gen(lmlm)
gen haslml=lmlm>1
label var haslml "Has complete LML interview"
local keepvars advicedoc advicefam medmgmt meddif medfamdif meddelay  ///
medtoomch spid ind_module wave age ///
female race education educ_hs_ind srh srh_fp aveincome income_quart ///
sr_hosp_ind sr_hosp_stays sr*ever sr_numconditions1 sr_phq2_depressed ///
sr_gad2_anxiety prob_dem adl_index adl_independent marriedpartnered n_helpers n_paid_helpers ///
spouse_help_ind n_social_network reg_doc_seen iadl_meds_help adverse_eat adverse_bath ///
adverse_toil adverse_dres adverse_bed adverse_insd carenowan_lml respect_lml nhres ///
doctor docclear relg relgamt pain painhlp painhlpam bre brehlp brehlpam ///
whr* howpk* chginspln ansitindr anhlpwdec death_date meds modm lmlm haslml ///
ivw_date proxy adl*help livealone livearrang insdyrgo srh_n1

keep `keepvars'
merge 1:1 spid using `hs', gen(hsm) keep(match master)

save "${intpath}\tburden_int.dta", replace

H="variable cleaning & sample derivation"
use "${intpath}\tburden_int.dta", clear


local keepvars advicedoc advicefam medmgmt meddif medfamdif meddelay  ///
medtoomuch spid ind_module wave age ///
female race education education_hs_ind srh srh_fp aveincome income_quart ///
sr_hosp_ind sr_hosp_stays sr*ever sr_numconditions1 sr_phq2_depressed ///
sr_gad2_anxiety prob_dem adl_index adl_independent marriedpartnered n_helpers n_paid_helpers ///
spouse_help_ind n_social_network regdocseen iadl_meds_help adverse_eat adverse_bath ///
adverse_toil adverse_dres adverse_bed adverse_insd carenowan_lml respect_lml nhres ///
doctor docclear relg relgamt pain painhlp painhlpam bre brehlp brehlpam ///
whr* howpk* chginspln ansitindr anhlpwdec meds insdyrgo srh_n1

sum med* whr* howpk* chginspln ansitindr anhlpwdec pain* bre* doctor docclear ///
relg relgamt

*keep if death_date-ivw_date<=365*3

//change in srh
gen srh_change=1 if srh>srh_n1 & !missing(srh) & !missing(srh_n1)
replace srh_change=2 if srh==srh_n1 & !missing(srh)
replace srh_change=3 if srh<srh_n1 & !missing(srh_n1)
label define srh_change 1 "SRH declined since prior ivw" 2 "SRH same" 3 "SRH improved"
label values srh_change srh_change
label values srh_n1 srh


//hospice
gen ind_hospice=hsm==3
label var ind_hospice "Any MC hospice"
label var days_on_hospice "Total days on hospice"
gen ind_hospice_pre_ivw=first_hs<=ivw_date
label var ind_hospice_pre_ivw "Hospice initiated on or before interview date"
drop hsm

gen care_coord_cat_lml=1 if doctor==3
replace care_coord_cat_lml=2 if doctor==2 | (doctor==1 & docclear==1)
replace care_coord_cat_lml=3 if doctor==1 & docclear==2
replace care_coord_cat_lml=.a if doctor<0
replace care_coord_cat_lml=.b if doctor==1 & docclear<0

label define care_coord_cat_lml 1 "No care in LML" 2 "Clear who was in charge" ///
3 "Not always clear" .a "DK, RF # doctors" .b "DK if clear"
label values care_coord_cat_lml care_coord_cat_lml
label var care_coord_cat_lml "Care coordination at EOL, categorical"

gen relig_sup_cat_lml=1 if relg==3
replace relig_sup_cat_lml=2 if relg==1 & relgamt==1
replace relig_sup=3 if relgamt==2
replace relig_sup=4 if relg==2 & relgamt<0
replace relig_sup=.a if relg<0
replace relig_sup=.b if relg==1 & relgamt<0

label define relig_sup_cat_lml 1 "No care in LML" 2 "Had as much contact as was wanted" ///
3 "Did not have as much as wanted" 4 "Did not discuss religious beliefs" ///
.a "DK, RF if discussed" .b "DK if as much as wanted"
label values relig_sup_cat_lml relig_sup_cat_lml
label var relig_sup_cat_lml "Religious support at EOL, categorical"

drop doctor docclear relg relgamt

foreach x in pain bre {
	gen `x'_cat_lml=1 if `x'==2 | `x'hlpam==3
	replace `x'_cat_lml=2 if `x'==1 & `x'hlp==2
	replace `x'_cat_lml=3 if `x'==1 & `x'hlp==1 & inlist(`x'hlpam,1,2)
	replace `x'_cat_lml=.a if `x'<0
	replace `x'_cat_lml=.b if `x'>0 & `x'hlp<0
	replace `x'_cat_lml=.c if `x'>0 & `x'hlp>0 & `x'hlpam<0
}

label define pain_cat_lml 1 "No pain in LML or right amt of help" 2 "Pain, no help" ///
3 "Pain, more or less than needed" .a "DK, RF pain in LML" .b "DK if help" ///
.c "DK, RF if right amount"
label values pain_cat_lml pain_cat_lml
label var pain_cat_lml "Pain management at EOL, categorical"

label define bre_cat_lml 1 "No breathing trouble in LML or right amt of help" ///
2 "Breathing, no help" ///
3 "Breathing, more or less than needed" .a "DK, RF breathing in LML" .b "DK if help" ///
.c "DK, RF if right amount"
label values bre_cat_lml bre_cat_lml
label var bre_cat_lml "Breathing management at EOL, categorical"

drop pain painhlp* bre brehlp*

gen m2d=floor((death_date-ivw_date)/30.4)
label var m2d "Months to death"


//change race, because "other" is too small
replace race_cat=1 if race_cat==3
label define race 1 "Other Non-Hispanic", modify

//recode advice

foreach x in doc fam {
	recode advice`x' (2=1) (3=2) (4=3)
	label define advice`x' 1 "Make decisions independently, w/ or w/o advice" ///
	2 "Make decisions together" 3 "Leave decisions up to them"
	label values advice`x' advice`x'
}


local sampvars n ind_module hasdeath inscope haslml

gen n=1
gen inscope=ind_module==1 & inrange(m2d,0,36)
gen hasdeath=!missing(death_date)
label var hasdeath "Death observed"
replace haslml=0 if !inscope
label var n "All live SP interviews in NHATS wave 2"
label var inscope "Death within 36 months"

local r=1
mat tab=J(5,1,.)

foreach x of local sampvars {
	sum n if `x'==1
	mat tab[`r',1]=r(N)
	if "`x'"!="haslml" keep if `x'==1
	local r=`r'+1
}

mat rownames tab=`sampvars'

frmttable using "${outpath}/sample_derivation.rtf", ///
replace statmat(tab) varlabels sdec(0) title("Sample derivation")

drop death_date ivw_date inscope n lmlm modm first_hs

save "${datapath}/treatment_burden_eol_sample.dta", replace


H="final data cleaning (adapted from Alina's do-file)"
*FINAL CODING OF TREATMENT BURDEN & VARIABLES

cd "C:\Users\alina\Documents\Stata\Treatment Burden Files"
use treatment_burden_eol_sample_3, clear
merge 1:1 spid using rawvars_for_alina.dta, keepusing(mc2medstrk mc2regdoclyr mc2dmedssfdf) nogen

*step 1: make new dichotomized variables for each called [varname]_bi
*only "inapplicable" response being replaced is medtoomch if meddelay "never" happens
replace medtoomch=1 if medtoomch==.d & meddelay==1
foreach var of varlist meddif medfamdif meddelay medtoomch {
recode `var' (1/2=0)(3/4=1)(.b=.)(.c=.)(.d=.), gen(`var'_bi)
}

*step 2: drop spid's with 3+ missing values 
drop if spid==10007247
drop if spid==10000396
drop if spid==10009082
drop if spid==10003524
drop if spid==10009173
drop if spid==10007580
drop if spid==10003175
drop if spid==10002101

*step 3: make variable that combines meddif and medfamdif called medsalot
gen medsalot=1 if meddif_bi==1 | medfamdif_bi==1
replace medsalot=. if meddif_bi==. & medfamdif_bi==.
replace medsalot=1 if meddif_bi==0 & medfamdif_bi!=1
replace  medsalot=1 if meddif_bi!=1 & medfamdif_bi==0
replace medsalot=0 if meddif_bi==0 & medfamdif_bi==.
replace  medsalot=0 if meddif_bi==. & medfamdif_bi==0
replace medsalot=0 if meddif_bi==0 & medfamdif_bi==0

*step 4a: make total TB dichotomous variable
gen tb_dichot2=0
foreach var of varlist medsalot meddelay_bi medtoomch_bi {
replace tb_dichot2=1 if `var'==1
}
replace tb_dichot2=. if medsalot==. & meddelay==. & medtoomch==. 
*step 4b: determine the prevalence of total TB and TB for each item
tab medsalot
tab meddelay_bi
tab medtoomch_bi
tab tb_dichot2

*step 5a: divide m2d into 6 groups (6 months in each group)
*step 5b: determine the prevalence of total TB and TB for each item with these 6-month intervals
xtile TBmonths=m2d, nq(6)
tab medsalot TBmonths, col chi2
tab meddelay_bi TBmonths, col chi2
tab TBmonths
tab tb_dichot2 TBmonths, col chi2

*step 6: MAKE A VARIABLE FOR MULTIPLE CONDITIONS based on literature definition of MCC - heart attack, heart disease, arthritis, diabetes, lung disease, dementia, cancer
egen MCC_tag=tag (spid) if sr_ami_ever==1 | sr_heart_dis_ever==1 | sr_ra_ever==1 | sr_diabetes_ever==1 | sr_lung_dis_ever==1 | sr_dementia_ever==1 | sr_cancer_ever==1
browse sr_ami_ever sr_heart_dis_ever sr_ra_ever sr_diabetes_ever sr_lung_dis_ever sr_dementia_ever sr_cancer_ever sr_stroke_ever MCC_tag spid
sort MCC_tag
tab MCC_tag
*drop subjects without these conditions
drop if MCC_tag==0
*create summary score of conditions
egen MCC_sum = rowtotal (sr_ami_ever sr_heart_dis_ever sr_ra_ever sr_diabetes_ever sr_lung_dis_ever sr_dementia_ever sr_cancer_ever)
browse sr_ami_ever sr_heart_dis_ever sr_ra_ever sr_diabetes_ever sr_lung_dis_ever sr_dementia_ever sr_cancer_ever sr_stroke_ever MCC_sum MCC_tag
sort MCC_sum
tab MCC_sum
tab MCC_sum if MCC_sum>=2

*step 7: LIMIT OUR SAMPLE TO JUST THE MCC COHORT
*since MCC is defined as 2+ of these conditions, drop subjects that have only 1 of the conditions
drop if MCC_sum<2
tab tb_dichot

*step 8: find percentages of people with each of the 3 items (meddif and medfamdif combined) in MCC cohort
tab medsalot
tab meddelay_bi 
tab medtoomch_bi 

*step 9: make categories for appropriate variables
*age: categorized age variable with categories ages 65-74, 75-84, and 85+
gen age_cat=0 if age>=65 & age<=74
replace age_cat=1 if age>=75 & age<=84
replace age_cat=2 if age>=85 & age!=.
*ADL categories
gen adl_cat=0 if adl_index==0 & adl_index!=.
replace adl_cat=1 if adl_index==1 | adl_index==2
replace adl_cat=2 if adl_index>=3 & adl_index!=.
label define adl_cat 0 "0 ADLs" 1 "1-2 ADLs" 2 "3+ ADLs"
label values adl_cat adl_cat
*comorbidity categories 
gen MCC_cat=0 if sr_numconditions1==0 & sr_numconditions1!=.
replace MCC_cat=1 if sr_numconditions1>=1 & sr_numconditions1<=3
replace MCC_cat=2 if sr_numconditions1>=4 & sr_numconditions1<=6
replace MCC_cat=3 if sr_numconditions1>=7 & sr_numconditions1!=.
label define MCC_cat 0 "0" 1 "1-3" 2 "4-6" 3 "7 or more" 
label values MCC_cat MCC_cat
*make variable for keeping track of meds from  mc2medstrk variable: keeptrackmeds=0 if you don't recieve help with meds (keep track of meds by self OR didn't take meds OR didn't have meds prescribed); keeptrackmeds=1 if someone helped keep track, someone always kept track, or it varied
gen keeptrackmeds=0 if  mc2medstrk==0 | mc2medstrk==5
replace keeptrackmeds=0 if  mc2medstrk !=2 | mc2medstrk !=1 | mc2medstrk !=3 | mc2medstrk !=4 | mc2medstrk!=5
replace keeptrackmeds=0 if mc2medstrk==1
replace keeptrackmeds=1 if mc2medstrk==2 | mc2medstrk==3 | mc2medstrk==4
label define keeptrackmeds 0 "no help received/needed" 1 "help received"
label values keeptrackmeds keeptrackmeds
*variable for receiving assitance at doctor's office: 0 for those who did not receive assitance, or DK, or did not go to doctor in past year / DK if went to doctor in past year; 1 for those who went to doctors and received assistance
gen docappthelp=1 if ansitindr==1
replace docappthelp=0 if docappthelp==.
label define docappthelp 0 "no help received/needed" 1 "help received"
label values docappthelp docappthelp
*made dummy variables for race
tab race, gen(racecat)
*also categorize race as white vs nonwhite
gen white=0 if racecat1==1
replace white=1 if racecat1 ==0
tab white
*made binary variable for paid help
gen paid_help=0 if n_paid_helpers==0
replace paid_help=1 if n_paid_helpers>0 & n_paid_helpers!=.
*made continuous variable for days in hospice that considered having no hospice as having 0 days in hospice
gen hospicedays = days_on_hospice
replace hospicedays=0 if hospicedays==.
*also make a year-long count of months to death for logistic regression in which 3 years is the reference group
xtile m2d_years=m2d, nq(3)
egen TByears = rowtotal(m2d_years)
tab TByears
gen TByears_cat=0 if TByears==3
replace TByears_cat=1 if TByears==2
replace TByears_cat =2 if TByears==1
tab TByears_cat
replace TByears=2 if m2d==24
replace TByears_cat=1 if TByears==2
tab TByears_cat
label define TByears_cat  0 "3 yrs before death" 1 "2 yrs before death" 2 "1 yr before death"
label values TByears_cat TByears_cat

*step 10: did analysis for tb_dichot2 with chi2 and t-tests
tab tb_dichot2
tab age_cat tb_dichot2, col chi2
tab female tb_dichot2, col chi2
tab race_cat tb_dichot2, col chi2
tab educ_hs_ind tb_dichot2, col chi2
hist aveincome
ranksum aveincome , by (tb_dichot2 )
sum aveincome  if tb_dichot2 ==0, detail
sum aveincome  if tb_dichot2 ==1, detail
tab srh_fp tb_dichot2, col chi2
tab sr_hosp_ind tb_dichot2, col chi2
ttest sr_numconditions1 , by (tb_dichot2 )
tab sr_ami_ever tb_dichot2, col chi2
tab sr_stroke_ever tb_dichot2, col chi2
tab sr_cancer_ever tb_dichot2, col chi2
tab sr_hip_ever tb_dichot2, col chi2
tab sr_heart_dis_ever tb_dichot2, col chi2
tab sr_htn_ever tb_dichot2, col chi2
tab sr_ra_ever tb_dichot2, col chi2
tab sr_osteoprs_ever  tb_dichot2, col chi2
tab sr_diabetes_ever  tb_dichot2, col chi2
tab sr_lung_dis_ever  tb_dichot2, col chi2
tab sr_dementia_ever  tb_dichot2, col chi2
tab sr_phq2_depressed  tb_dichot2, col chi2
tab sr_gad2_anxiety  tb_dichot2, col chi2
tab prob_dem  tb_dichot2, col chi2
tab adl_cat tb_dichot2, col chi2
tab adl_independent  tb_dichot2, col chi2
tab adl_bath_help  tb_dichot2, col chi2
tab adl_toil_help  tb_dichot2, col chi2
tab adl_dres_help  tb_dichot2, col chi2
tab adl_eat_help  tb_dichot2, col chi2
tab adl_ins_help tb_dichot2, col chi2
tab adl_bed_help  tb_dichot2, col chi2
tab meds  tb_dichot2, col chi2
tab whrgtmed1  tb_dichot2, col chi2
tab howpkupm1  tb_dichot2, col chi2
tab marriedpartnered  tb_dichot2, col chi2
ttest n_helpers , by (tb_dichot2)
tab paid_help tb_dichot2, col chi2
tab advicedoc tb_dichot2, col chi2
tab advicefam tb_dichot2, col chi2
tab advicefam tb_dichot2, col chi2
tab medmgmt tb_dichot2 , col chi2
tab keeptrackmeds tb_dichot2, col chi2
tab docappthelp tb_dichot2, col chi2
tab livearrang tb_dichot2, col chi2
tab livealone tb_dichot2, col chi2
tab insdyrgo tb_dichot2 , col chi2
tab ind_hospice tb_dichot2 , col chi2
tab srh_change tb_dichot2 , col chi2
tab ind_hospice tb_dichot2 , col chi2
ranksum hospicedays, by (tb_dichot2)
sum hospicedays  if tb_dichot2 ==0, detail
sum hospicedays  if tb_dichot2 ==1, detail

*step 11: do logistic regression 
logistic tb_dichot2 female i.age_cat  i.white i.TByears_cat
logistic tb_dichot2 i.age_cat female i.white i.TByears_cat  sr_phq2_depressed sr_gad2_anxiety  marriedpartnered


H="tables"


H="models"


H="codebook"
capture log close
clear all
set more off
version 15


//filepath globals should be set in the first NoteTab header, or you can change these below
local outpath $outpath
local datapath $datapath
local outpath $outpath

//date
local date = subinstr("$S_DATE"," ","_",.)


cd "`outpath'"

// load dataset here

//date
local date = subinstr("$S_DATE"," ","_",.)


cd "`outpath'"

log using "`outpath'\data_dictionary`date'.txt", text replace //slightly easier than saving as SCML and then PDF

// load dataset here


//set filename 
local filename treatment_burden_eol_sample



// specify excel data dictionary file/filepath here
local wkbk `filename'_data_dictionary`date'.xlsx  // put excel data dictionary file/filepath here


assert "`filename'"!=""
use "`datapath'/`filename'", clear


if "`wkbk'" == "" {
display as text "Warning: Excel file specification not found"
} 
else {
display "Excel File: `wkbk'"
}

// generates variables that will contain the information
local dispvars varname varlabel vallabelname vallabel note_1 note_2 note_3 note_4 note_5 type format ///
mean sd min p25 p50 p75 max distinct_values n_observations n_missing 




foreach x of local dispvars {
	gen `x'=""
}

//gets word count so don't include them in the final output
local excl_count : word count `dispvars'
order `dispvars'

label variable varname			"Variable Name"
label variable varlabel			"Variable Label"
label variable vallabelname		"Value Label Name"
label variable vallabel			"Value Labels"

/*these can be anything, but I think this may address what we need: raw vars, plain language, and code location
  all must be included in prior code, shouldn't be done within this template*/
label variable note_1			"Raw variables used in creation" 
label variable note_2 			"Plain English of what the variable is"
label variable note_3			"Location of code where variable was created" 
label variable note_4 			"Dates of creation, alteration"
label variable note_5			"Reference"
label variable type				"Type (String, Numeric or Date)"
label variable format			"Stata Display Format"
label variable mean 			"Mean Value for numeric variables"			
label variable sd 				"Std. Dev. for numeric variables"			
label variable min				"Minimum Value for numeric variables"
label variable p25				"25th percentile for numeric variables"
label variable p50				"Median Value for numeric variables"
label variable p75				"75th percentile for numeric variables"
label variable max				"Maximum Value for numeric variables"
label variable n_observations 	"Total number of observations"
label variable distinct_values	"Number of distinct values"
label variable n_missing		"Number missing"

local i = 1



foreach v of var * {



	
if "`: var label `v''" == "" {

label variable `v' "No label"              // overwrites varlabel local if label is too long or not desired for output

}


replace varname			= "`v'" in `i'
replace varlabel		= "`: var label `v''" in `i'
replace vallabelname	= "`: val label `v''" in `i'
replace format			= "`: format `v''" in `i'
replace note_1			= "`: char `v'[note1]'" in `i'
replace note_2			= "`: char `v'[note2]'" in `i'
replace note_3			= "`: char `v'[note3]'" in `i'
replace note_4			= "`: char `v'[note4]'" in `i'
replace note_5			= "`: char `v'[note5]'" in `i'
local vallabeltest = "`: val label `v''" in `i'
if "`vallabeltest'" != "" {

local val_label ""

levelsof `v', local(levels)
foreach l of local levels {
local lab :label (`v') `l'
local val_label "`val_label' `l',  `lab'|"

}

replace vallabel = "`val_label'" in `i'

}




ds `v' , has(type string)

if "`r(varlist)'" == "`v'" {

replace type = "String" in `i'

} 

ds `v' , has(type numeric)

if "`r(varlist)'" == "`v'" {

replace type = "Numeric" in `i'

}

ds `v' , has(varl *date* *Date*)

if "`r(varlist)'" == "`v'" {

replace type = "Date" in `i'

}


if inlist("`: format `v''" , "%dM_d,_CY", "%tCMonth_dd,_CCYY_HH:MM", "%tm", "%td", "%tmmcY") {

replace type = "Date" in `i'

} 


sum `v' , d
foreach x in mean sd min p25 p50 p75 max {
	local `x' : di %-12.5gc `r(`x')'
	replace `x' = "``x''" in `i'
}

gen n=1
sum n if missing(`v')
replace n_missing="`r(N)'" in `i'
sum n
replace n_observations="`r(N)'" in `i'
drop n

// section creates fills in idicator var based off of start of var label 
// 		- project specific and would need to add indicator variable generate statement and
//		add var to keep statement 
// local varlabel : var label `v'
// display "`varlabel'"

// if (strpos("`: var label `v''", "RCAP") == 1) {
//             replace redcap = "yes" in `i'
//         }
// 	else {
// 	replace redcap = "no" in `i'
// 	}

*levelsof `v' , clean	
*local countlevel : word count `r(levels)'

egen tag`v'=tag(`v')
count if tag`v'
replace distinct_values = "`r(N)'" in `i'
	
	


local ++ i
}


// remove min/ max of numeric identifiers here
replace min = "" if varname == "study_id"  
replace max = "" if varname == "study_id"

// removes min/max of date variables, were numeric, considering taking the time 
// to replace them with the display format, currently time is not available

replace min = "" if type == "Date"
replace max = "" if type == "Date"

// for string vars, distinct values not as important (also would need to be calculated differently)

replace distinct_values = "" if type != "Numeric"


drop if varname == ""



keep `dispvars'
keep if _n>`excl_count'
if "`wkbk'" == "" {
display as text "Excel file specification Required"
exit
} 
else {
display "Excel File: `wkbk'"
}
assert "`wkbk'" != ""  // redundant check


//1/4/19--ebl--put in quotes, since My Documents filepath (where I dumped it) has spaces
export excel using "`wkbk'" , firstrow(varlabels) replace 


log close
exit




H="********************"


H="Alina's do-file from 8/22/19"
*FINAL CODING OF TREATMENT BURDEN & VARIABLES

cd "C:\Users\alina\Documents\Stata\Treatment Burden Files"
use treatment_burden_eol_sample_3, clear
merge 1:1 spid using rawvars_for_alina.dta, keepusing(mc2medstrk mc2regdoclyr mc2dmedssfdf) nogen

*step 1: make new dichotomized variables for each called [varname]_bi
*only "inapplicable" response being replaced is medtoomch if meddelay "never" happens
replace medtoomch=1 if medtoomch==.d & meddelay==1
foreach var of varlist meddif medfamdif meddelay medtoomch {
recode `var' (1/2=0)(3/4=1)(.b=.)(.c=.)(.d=.), gen(`var'_bi)
}

*step 2: drop spid's with 3+ missing values 
drop if spid==10007247
drop if spid==10000396
drop if spid==10009082
drop if spid==10003524
drop if spid==10009173
drop if spid==10007580
drop if spid==10003175
drop if spid==10002101

*step 3: make variable that combines meddif and medfamdif called medsalot
gen medsalot=1 if meddif_bi==1 | medfamdif_bi==1
replace medsalot=. if meddif_bi==. & medfamdif_bi==.
replace medsalot=1 if meddif_bi==0 & medfamdif_bi!=1
replace  medsalot=1 if meddif_bi!=1 & medfamdif_bi==0
replace medsalot=0 if meddif_bi==0 & medfamdif_bi==.
replace  medsalot=0 if meddif_bi==. & medfamdif_bi==0
replace medsalot=0 if meddif_bi==0 & medfamdif_bi==0

*step 4a: make total TB dichotomous variable
gen tb_dichot2=0
foreach var of varlist medsalot meddelay_bi medtoomch_bi {
replace tb_dichot2=1 if `var'==1
}
replace tb_dichot2=. if medsalot==. & meddelay==. & medtoomch==. 
*step 4b: determine the prevalence of total TB and TB for each item
tab medsalot
tab meddelay_bi
tab medtoomch_bi
tab tb_dichot2

*step 5a: divide m2d into 6 groups (6 months in each group)
*step 5b: determine the prevalence of total TB and TB for each item with these 6-month intervals
xtile TBmonths=m2d, nq(6)
tab medsalot TBmonths, col chi2
tab meddelay_bi TBmonths, col chi2
tab TBmonths
tab tb_dichot2 TBmonths, col chi2

*step 6: MAKE A VARIABLE FOR MULTIPLE CONDITIONS based on literature definition of MCC - heart attack, heart disease, arthritis, diabetes, lung disease, dementia, cancer
egen MCC_tag=tag (spid) if sr_ami_ever==1 | sr_heart_dis_ever==1 | sr_ra_ever==1 | sr_diabetes_ever==1 | sr_lung_dis_ever==1 | sr_dementia_ever==1 | sr_cancer_ever==1
browse sr_ami_ever sr_heart_dis_ever sr_ra_ever sr_diabetes_ever sr_lung_dis_ever sr_dementia_ever sr_cancer_ever sr_stroke_ever MCC_tag spid
sort MCC_tag
tab MCC_tag
*drop subjects without these conditions
drop if MCC_tag==0
*create summary score of conditions
egen MCC_sum = rowtotal (sr_ami_ever sr_heart_dis_ever sr_ra_ever sr_diabetes_ever sr_lung_dis_ever sr_dementia_ever sr_cancer_ever)
browse sr_ami_ever sr_heart_dis_ever sr_ra_ever sr_diabetes_ever sr_lung_dis_ever sr_dementia_ever sr_cancer_ever sr_stroke_ever MCC_sum MCC_tag
sort MCC_sum
tab MCC_sum
tab MCC_sum if MCC_sum>=2

*step 7: LIMIT OUR SAMPLE TO JUST THE MCC COHORT
*since MCC is defined as 2+ of these conditions, drop subjects that have only 1 of the conditions
drop if MCC_sum<2
tab tb_dichot

*step 8: find percentages of people with each of the 3 items (meddif and medfamdif combined) in MCC cohort
tab medsalot
tab meddelay_bi 
tab medtoomch_bi 

*step 9: make categories for appropriate variables
*age: categorized age variable with categories ages 65-74, 75-84, and 85+
gen age_cat=0 if age>=65 & age<=74
replace age_cat=1 if age>=75 & age<=84
replace age_cat=2 if age>=85 & age!=.
*ADL categories
gen adl_cat=0 if adl_index==0 & adl_index!=.
replace adl_cat=1 if adl_index==1 | adl_index==2
replace adl_cat=2 if adl_index>=3 & adl_index!=.
label define adl_cat 0 "0 ADLs" 1 "1-2 ADLs" 2 "3+ ADLs"
label values adl_cat adl_cat
*comorbidity categories 
gen MCC_cat=0 if sr_numconditions1==0 & sr_numconditions1!=.
replace MCC_cat=1 if sr_numconditions1>=1 & sr_numconditions1<=3
replace MCC_cat=2 if sr_numconditions1>=4 & sr_numconditions1<=6
replace MCC_cat=3 if sr_numconditions1>=7 & sr_numconditions1!=.
label define MCC_cat 0 "0" 1 "1-3" 2 "4-6" 3 "7 or more" 
label values MCC_cat MCC_cat
*make variable for keeping track of meds from  mc2medstrk variable: keeptrackmeds=0 if you don't recieve help with meds (keep track of meds by self OR didn't take meds OR didn't have meds prescribed); keeptrackmeds=1 if someone helped keep track, someone always kept track, or it varied
gen keeptrackmeds=0 if  mc2medstrk==0 | mc2medstrk==5
replace keeptrackmeds=0 if  mc2medstrk !=2 | mc2medstrk !=1 | mc2medstrk !=3 | mc2medstrk !=4 | mc2medstrk!=5
replace keeptrackmeds=0 if mc2medstrk==1
replace keeptrackmeds=1 if mc2medstrk==2 | mc2medstrk==3 | mc2medstrk==4
label define keeptrackmeds 0 "no help received/needed" 1 "help received"
label values keeptrackmeds keeptrackmeds
*variable for receiving assitance at doctor's office: 0 for those who did not receive assitance, or DK, or did not go to doctor in past year / DK if went to doctor in past year; 1 for those who went to doctors and received assistance
gen docappthelp=1 if ansitindr==1
replace docappthelp=0 if docappthelp==.
label define docappthelp 0 "no help received/needed" 1 "help received"
label values docappthelp docappthelp
*made dummy variables for race
tab race, gen(racecat)
*also categorize race as white vs nonwhite
gen white=0 if racecat1==1
replace white=1 if racecat1 ==0
tab white
*made binary variable for paid help
gen paid_help=0 if n_paid_helpers==0
replace paid_help=1 if n_paid_helpers>0 & n_paid_helpers!=.
*made continuous variable for days in hospice that considered having no hospice as having 0 days in hospice
gen hospicedays = days_on_hospice
replace hospicedays=0 if hospicedays==.
*also make a year-long count of months to death for logistic regression in which 3 years is the reference group
xtile m2d_years=m2d, nq(3)
egen TByears = rowtotal(m2d_years)
tab TByears
gen TByears_cat=0 if TByears==3
replace TByears_cat=1 if TByears==2
replace TByears_cat =2 if TByears==1
tab TByears_cat
replace TByears=2 if m2d==24
replace TByears_cat=1 if TByears==2
tab TByears_cat
label define TByears_cat  0 "3 yrs before death" 1 "2 yrs before death" 2 "1 yr before death"
label values TByears_cat TByears_cat

*step 10: did analysis for tb_dichot2 with chi2 and t-tests
tab tb_dichot2
tab age_cat tb_dichot2, col chi2
tab female tb_dichot2, col chi2
tab race_cat tb_dichot2, col chi2
tab educ_hs_ind tb_dichot2, col chi2
hist aveincome
ranksum aveincome , by (tb_dichot2 )
sum aveincome  if tb_dichot2 ==0, detail
sum aveincome  if tb_dichot2 ==1, detail
tab srh_fp tb_dichot2, col chi2
tab sr_hosp_ind tb_dichot2, col chi2
ttest sr_numconditions1 , by (tb_dichot2 )
tab sr_ami_ever tb_dichot2, col chi2
tab sr_stroke_ever tb_dichot2, col chi2
tab sr_cancer_ever tb_dichot2, col chi2
tab sr_hip_ever tb_dichot2, col chi2
tab sr_heart_dis_ever tb_dichot2, col chi2
tab sr_htn_ever tb_dichot2, col chi2
tab sr_ra_ever tb_dichot2, col chi2
tab sr_osteoprs_ever  tb_dichot2, col chi2
tab sr_diabetes_ever  tb_dichot2, col chi2
tab sr_lung_dis_ever  tb_dichot2, col chi2
tab sr_dementia_ever  tb_dichot2, col chi2
tab sr_phq2_depressed  tb_dichot2, col chi2
tab sr_gad2_anxiety  tb_dichot2, col chi2
tab prob_dem  tb_dichot2, col chi2
tab adl_cat tb_dichot2, col chi2
tab adl_independent  tb_dichot2, col chi2
tab adl_bath_help  tb_dichot2, col chi2
tab adl_toil_help  tb_dichot2, col chi2
tab adl_dres_help  tb_dichot2, col chi2
tab adl_eat_help  tb_dichot2, col chi2
tab adl_ins_help tb_dichot2, col chi2
tab adl_bed_help  tb_dichot2, col chi2
tab meds  tb_dichot2, col chi2
tab whrgtmed1  tb_dichot2, col chi2
tab howpkupm1  tb_dichot2, col chi2
tab marriedpartnered  tb_dichot2, col chi2
ttest n_helpers , by (tb_dichot2)
tab paid_help tb_dichot2, col chi2
tab advicedoc tb_dichot2, col chi2
tab advicefam tb_dichot2, col chi2
tab advicefam tb_dichot2, col chi2
tab medmgmt tb_dichot2 , col chi2
tab keeptrackmeds tb_dichot2, col chi2
tab docappthelp tb_dichot2, col chi2
tab livearrang tb_dichot2, col chi2
tab livealone tb_dichot2, col chi2
tab insdyrgo tb_dichot2 , col chi2
tab ind_hospice tb_dichot2 , col chi2
tab srh_change tb_dichot2 , col chi2
tab ind_hospice tb_dichot2 , col chi2
ranksum hospicedays, by (tb_dichot2)
sum hospicedays  if tb_dichot2 ==0, detail
sum hospicedays  if tb_dichot2 ==1, detail

*step 11: do logistic regression 
logistic tb_dichot2 female i.age_cat  i.white i.TByears_cat
logistic tb_dichot2 i.age_cat female i.white i.TByears_cat  sr_phq2_depressed sr_gad2_anxiety  marriedpartnered
