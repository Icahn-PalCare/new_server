= V4 Outline MultiLine NoSorting TabWidth=30

H="library/index"

libname clean 'D:\HRS\Shared\base_data\hrs_cms\SAS';

libname medi 'D:\HRS\Shared\base_data\hrs_cms\SAS';

libname proj_int 'D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data';

proc import datafile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\index_dates.dta" out=index_date dbms=stata replace; run;

proc sql;
create table index as select
a.*, b.*
from clean.xref2015medicare a inner join
index_date b
on a.hhid=b.hhid and a.pn=b.pn;
quit;


data index;
set index;
index_date=c_ivw_date;
index_year=
run; 

proc sort data=index out=index1 nodupkey;
by bid_hrs_22 id index_date;
run;


H="Counting days pre index by quarter and transitions code"
/* Burdensome Transitions code
This is tailored to the definiton for ASK's R01, where burdensome transitions occur in the last 90 days of life. 

Initially we start off by using the death date and are interested in days 120 days prior to death. 

/* Starting with death date as index and look 120 days back. */

/* Raj looking at incident Dementia in HRS interview. Thus index date is interview with incident dementia */

libname clean 'D:\HRS\Shared\base_data\hrs_cms\SAS';

libname medi 'D:\HRS\Shared\base_data\hrs_cms\SAS';

proc import datafile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\index_dates.dta" out=index_date dbms=stata replace; run;

proc sql;
create table index as select
a.*, b.*
from clean.xref2015medicare a inner join
index_date b
on a.hhid=b.hhid and a.pn=b.pn;
quit;


data index;
set index;
index_date=c_ivw_date;
run; 

proc sort data=index out=index1 nodupkey;
by bid_hrs_22 id index_date;
run;

*%let days='91', '182';
*%let quarter='0', '1';

/*negative*/

%macro dates(days=, quarter=, name=);

/* can loop over and change the 0 to make it i=1/8 */
data index_n&days.;
set index1;
index_date_og=index_date;
index_date=index_date-(&quarter.*91);
quarter="&name.";
format index_date date9.;
format index_date_og date9.;
run;



data index_n&days._91 (keep=id hhid pn hhidpn bid_hrs_22 date index_date index_date_og index_date_91 core_year c_ivw_date index_&days. quarter) ;
set index_n&days.;
index_&days.=index_date-91;
do i=index_&days. to index_date;
date=i;
output;
end;
format date date9.;
format index_date date9.;
format index_&days. date9.;
run;
run;

%mend;

%dates(days=91, quarter=0, name=nq1);
%dates(days=182, quarter=1, name=nq2);
%dates(days=273, quarter=2, name=nq3);
%dates(days=365, quarter=3, name=nq4);
%dates(days=456, quarter=4, name=nq5);
%dates(days=547, quarter=5, name=nq6);
%dates(days=638, quarter=6, name=nq7);
%dates(days=730, quarter=7, name=nq8);


/*positive*/

%macro dates(days=, quarter=, name=);

/* can loop over and change the 0 to make it i=1/8 */
data index_p&days.;
set index1;
index_date_og=index_date;
index_date=index_date+(&quarter.*91);
quarter="&name.";
format index_date date9.;
format index_date_og date9.;
run;



data index_p&days._91 (keep=id hhid pn hhidpn bid_hrs_22 date index_date index_date_og index_date_91 core_year c_ivw_date index_&days. quarter) ;
set index_p&days.;
index_&days.=index_date+91;
do i=index_&days. to index_date;
date=i;
output;
end;
format date date9.;
format index_date date9.;
format index_&days. date9.;
run;
run;

%mend;

%dates(days=91, quarter=0, name=pq1);
%dates(days=182, quarter=1, name=pq2);
%dates(days=273, quarter=2, name=pq3);
%dates(days=365, quarter=3, name=pq4);
%dates(days=456, quarter=4, name=pq5);
%dates(days=547, quarter=5, name=pq6);
%dates(days=638, quarter=6, name=pq7);
%dates(days=730, quarter=7, name=pq8);

/**************************************************************************/
/**************** Claims Before Index  ******************************/
/**************************************************************************/
/*macro to get claims 120 days before death
saves datasets for each claim type */
%macro claimspre(days_start=,days_bef_index=,source=,suf=, days=);

/*claims fully within x time of death date*/
proc sql;
create table &source._meet_1_n&days._91 as select a.*,b.index_date,b.id 
from medi.&source._1998_2015 a inner join
index_n&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and &days_start<=b.index_date-a.admit_date<=&days_bef_index ;
quit;

/*claims that start earlier than x time but span into x time before death*/
proc sql;
create table &source._meet_2_n&days._91 as select a.*,b.index_date,b.id 
from medi.&source._1998_2015 a inner join
index_n&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and b.index_date-a.admit_date>&days_bef_index and b.index_date-a.disch_date<=&days_bef_index;
quit;

data &source._meet_&suf._n&days._91(compress=yes)  ;
set &source._meet_1_n&days._91  &source._meet_2_n&days._91;
format admit_date date9.;
format disch_date date9.;
run;

data &source._meet_&suf._n&days._91 (keep= bid_hrs_22 admit_date disch_date index_date ORGNPINM rvcntr01-rvcntr45 hcpscd01-hcpscd45 rvunt01-rvunt45 id admit_year provider quarter);
set &source._meet_&suf._n&days._91;
run;

proc sort data=&source._meet_&suf._n&days._91 out=&source._meet_&suf._n&days._91 nodupkey;
by bid_hrs_22 id admit_date disch_date;
run;

proc datasets lib=work nolist;
delete &source._meet_1_n&days._91 &source._meet_2_n&days._91;
quit;
run;

%mend;

/*4m before index*/
%claimspre(days_start=0,days_bef_index=120,source=hh,suf=4m, days=91); /*home health*/
%claimspre(days_start=0,days_bef_index=120,source=ip,suf=4m, days=91); /*inpatient*/
%claimspre(days_start=0,days_bef_index=120,source=dm,suf=4m, days=91); /*dme*/
%claimspre(days_start=0,days_bef_index=120,source=op,suf=4m, days=91); /*outpatient*/
%claimspre(days_start=0,days_bef_index=120,source=pb,suf=4m, days=91); /*carrier*/
%claimspre(days_start=0,days_bef_index=120,source=sn,suf=4m, days=91); /*snf*/

%claimspre(days_start=0,days_bef_index=120,source=hh,suf=4m, days=182); /*home health*/
%claimspre(days_start=0,days_bef_index=120,source=ip,suf=4m, days=182); /*inpatient*/
%claimspre(days_start=0,days_bef_index=120,source=dm,suf=4m, days=182); /*dme*/
%claimspre(days_start=0,days_bef_index=120,source=op,suf=4m, days=182); /*outpatient*/
%claimspre(days_start=0,days_bef_index=120,source=pb,suf=4m, days=182); /*carrier*/
%claimspre(days_start=0,days_bef_index=120,source=sn,suf=4m, days=182); /*snf*/

%claimspre(days_start=0,days_bef_index=120,source=hh,suf=4m, days=273); /*home health*/
%claimspre(days_start=0,days_bef_index=120,source=ip,suf=4m, days=273); /*inpatient*/
%claimspre(days_start=0,days_bef_index=120,source=dm,suf=4m, days=273); /*dme*/
%claimspre(days_start=0,days_bef_index=120,source=op,suf=4m, days=273); /*outpatient*/
%claimspre(days_start=0,days_bef_index=120,source=pb,suf=4m, days=273); /*carrier*/
%claimspre(days_start=0,days_bef_index=120,source=sn,suf=4m, days=273); /*snf*/

%claimspre(days_start=0,days_bef_index=120,source=hh,suf=4m, days=365); /*home health*/
%claimspre(days_start=0,days_bef_index=120,source=ip,suf=4m, days=365); /*inpatient*/
%claimspre(days_start=0,days_bef_index=120,source=dm,suf=4m, days=365); /*dme*/
%claimspre(days_start=0,days_bef_index=120,source=op,suf=4m, days=365); /*outpatient*/
%claimspre(days_start=0,days_bef_index=120,source=pb,suf=4m, days=365); /*carrier*/
%claimspre(days_start=0,days_bef_index=120,source=sn,suf=4m, days=365); /*snf*/

%claimspre(days_start=0,days_bef_index=120,source=hh,suf=4m, days=456); /*home health*/
%claimspre(days_start=0,days_bef_index=120,source=ip,suf=4m, days=456); /*inpatient*/
%claimspre(days_start=0,days_bef_index=120,source=dm,suf=4m, days=456); /*dme*/
%claimspre(days_start=0,days_bef_index=120,source=op,suf=4m, days=456); /*outpatient*/
%claimspre(days_start=0,days_bef_index=120,source=pb,suf=4m, days=456); /*carrier*/
%claimspre(days_start=0,days_bef_index=120,source=sn,suf=4m, days=456); /*snf*/

%claimspre(days_start=0,days_bef_index=120,source=hh,suf=4m, days=547); /*home health*/
%claimspre(days_start=0,days_bef_index=120,source=ip,suf=4m, days=547); /*inpatient*/
%claimspre(days_start=0,days_bef_index=120,source=dm,suf=4m, days=547); /*dme*/
%claimspre(days_start=0,days_bef_index=120,source=op,suf=4m, days=547); /*outpatient*/
%claimspre(days_start=0,days_bef_index=120,source=pb,suf=4m, days=547); /*carrier*/
%claimspre(days_start=0,days_bef_index=120,source=sn,suf=4m, days=547); /*snf*/

%claimspre(days_start=0,days_bef_index=120,source=hh,suf=4m, days=638); /*home health*/
%claimspre(days_start=0,days_bef_index=120,source=ip,suf=4m, days=638); /*inpatient*/
%claimspre(days_start=0,days_bef_index=120,source=dm,suf=4m, days=638); /*dme*/
%claimspre(days_start=0,days_bef_index=120,source=op,suf=4m, days=638); /*outpatient*/
%claimspre(days_start=0,days_bef_index=120,source=pb,suf=4m, days=638); /*carrier*/
%claimspre(days_start=0,days_bef_index=120,source=sn,suf=4m, days=638); /*snf*/

%claimspre(days_start=0,days_bef_index=120,source=hh,suf=4m, days=730); /*home health*/
%claimspre(days_start=0,days_bef_index=120,source=ip,suf=4m, days=730); /*inpatient*/
%claimspre(days_start=0,days_bef_index=120,source=dm,suf=4m, days=730); /*dme*/
%claimspre(days_start=0,days_bef_index=120,source=op,suf=4m, days=730); /*outpatient*/
%claimspre(days_start=0,days_bef_index=120,source=pb,suf=4m, days=730); /*carrier*/
%claimspre(days_start=0,days_bef_index=120,source=sn,suf=4m, days=730); /*snf*/

/* Hospice file a little different format than the rest, but does the same as above */



data hs_1998_2015 (keep= hspcstrt hs_start admit_date disch_date bid_hrs_22 provider) ;
set medi.hs_1998_2015;
hs_start=input(put(hspcstrt, 8.), yymmdd8.);
format hs_start date9.;
format admit_date date9.;
run;

%macro hs_claims(days=);

/*claims fully within x time of death date*/
proc sql;
create table hs_meet_1_n&days._91 as select a.*,b.index_date,b.id 
from hs_1998_2015 a inner join
index_n&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and 0<=b.index_date-a.hs_start<=120;
quit;

/*claims that start earlier than x time but span into x time before death*/
proc sql;
create table hs_meet_2_n&days._91 as select a.*,b.index_date,b.id 
from hs_1998_2015 a inner join
index_n&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and b.index_date-a.hs_start>120 and b.index_date-a.disch_date<=120;
quit;

data hs_meet_4m_n&days._91 (compress=yes);
set hs_meet_1_n&days._91 hs_meet_2_n&days._91;
run;

data hs_meet_4m_n&days._91 (keep= bid_hrs_22 admit_date disch_date index_date ORGNPINM id admit_year provider);
set hs_meet_4m_n&days._91;
run;

proc datasets lib=work nolist;
delete hs_meet_1_n&days._91 hs_meet_2_n&days._91;
quit;
run;

%mend;

/*4m before death*/
%hs_claims(days=91);
%hs_claims(days=182);
%hs_claims(days=273);
%hs_claims(days=365);
%hs_claims(days=456);
%hs_claims(days=547);
%hs_claims(days=638);
%hs_claims(days=730);


/*emergency and observation stays identified from the inpatient and outpatient file. */

%macro er_obs(source=, days=);

data &source._meet_4m_n&days._91_er_obs;
set &source._meet_4m_n&days._91;
er_flag = 0;
obs_flag = 0;
array rvcntr rvcntr01-rvcntr45;
array hcpcs hcpscd01-hcpscd45;
array rvunt rvunt01-rvunt45;
do over rvcntr;
do over hcpcs;
do over rvunt;
if strip(rvcntr) in:("0450", "0451", "0452", "0456", "0459", "0981") then er_flag = 1;
if strip(rvcntr) in:("0762") then obs_flag =1;
/*if strip(rvcntr) in:("0760") and strip(hcpcs) in: ("G0378") and rvunt>=8 then obs_flag =1;*/
end;
end;
end;
run;

data &source._er_meet_4m_n&days._91;
set &source._meet_4m_n&days._91_er_obs;
if er_flag=1;
run;

data &source._obs_meet_4m_n&days._91;
set &source._meet_4m_n&days._91_er_obs;
if obs_flag=1;
run;

%mend;

/*4m before death*/
%er_obs(source=ip, days=91); /*inpatient file*/
%er_obs(source=ip, days=182); /*inpatient file*/
%er_obs(source=ip, days=273); /*inpatient file*/
%er_obs(source=ip, days=365); /*inpatient file*/
%er_obs(source=ip, days=456); /*inpatient file*/
%er_obs(source=ip, days=547); /*inpatient file*/
%er_obs(source=ip, days=638); /*inpatient file*/
%er_obs(source=ip, days=730); /*inpatient file*/

%er_obs(source=op, days=91); /*outpatient file*/
%er_obs(source=op, days=182); /*outpatient file*/
%er_obs(source=op, days=273); /*outpatient file*/
%er_obs(source=op, days=365); /*outpatient file*/
%er_obs(source=op, days=456); /*outpatient file*/
%er_obs(source=op, days=547); /*outpatient file*/
%er_obs(source=op, days=638); /*outpatient file*/
%er_obs(source=op, days=730); /*outpatient file*/


/* Putting stays into 1 observation per day format. Flagging if they go to a different facility, but are still IP.*/

%macro dates(source=,suf=, npi=, days=);

data &source._meet_&suf._n&days._91_d;
set &source._meet_&suf._n&days._91;
format index_date date9.;
format admit_date date9.;
format disch_date date9.;
day_a=index_date-admit_date;
day_d=index_date-disch_date;
run;

data &source._meet_&suf._n&days._91_dates;
set &source._meet_&suf._n&days._91_d;
do i=admit_date to disch_date;
date=i;
output;
end;
format date date9.;
run;

data &source._&suf._n&days._91; 
set &source._meet_&suf._n&days._91_dates;
where 0<=index_date-date<=120;
&source.=1;
&source._npi=&npi.;
run;

proc sort data=&source._&suf._n&days._91 out=&source._&suf._n&days._91 ;
by bid_hrs_22 date ;
run;

data &source._n&days._91_dup (keep= bid_hrs_22 bid_n hhidpn index_date flag date admit_date disch_date days_a days_d &source. fac_type provider &source._npi at_upin) ;
set &source._&suf._n&days._91;
if date=lag(date) and bid_hrs_22=lag(bid_hrs_22) and (provider~=lag(provider) or &npi.~=lag(&npi.)) then flag=1;
run;

proc sort data=&source._n&days._91_dup nodupkey;
by bid_hrs_22 date &source. &source._npi;
run;

%mend;

%dates(source=ip,suf=4m,npi=ORGNPINM, days=91);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=91);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=91);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=91);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=91);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=91);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=91);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=91);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=182);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=182);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=182);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=182);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=182);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=182);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=182);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=182);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=273);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=273);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=273);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=273);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=273);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=273);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=273);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=273);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=365);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=365);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=365);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=365);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=365);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=365);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=365);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=365);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=456);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=456);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=456);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=456);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=456);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=456);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=456);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=456);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=547);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=547);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=547);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=547);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=547);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=547);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=547);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=547);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=638);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=638);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=638);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=638);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=638);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=638);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=638);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=638);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=730);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=730);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=730);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=730);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=730);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=730);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=730);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=730);

/* Bringing in MDS section*/

libname proj_int "D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data";

proc import out=proj_int.mds datafile="D:\HRS\Projects\dementia_decedents\ask_r01_financial_burden_dementia_7_yrs\data\int_data\mds.dta" replace; 
run;

%macro mds_claims(days=);

/*MDS claims fully within x time of death date*/
proc sql;
create table mds_meet_1_n&days._91 as select a.*,b.index_date,b.id 
from proj_int.mds a inner join
index_n&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and 0<=b.index_date-a.admit<=120 ;
quit;

/*MDS claims that start earlier than x time but span into x time before death*/
proc sql;
create table mds_meet_2_n&days._91 as select a.*,b.index_date,b.id 
from proj_int.mds a inner join
index_n&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and b.index_date-a.admit>120 and b.index_date-a.discharge<=0;
quit;

data mds_meet_4m_n&days._91 (compress=yes);
set mds_meet_1_n&days._91 mds_meet_2_n&days._91;
run;


data mds_meet_4m_n&days._91_d;
set mds_meet_4m_n&days._91;
format index_date date9.;
day_a=index_date-admit;
day_d=index_date-discharge;
rename date=date_1;
run;


data mds_meet_4m_n&days._91_dates;
set mds_meet_4m_n&days._91_d;
do i=admit to discharge;
date=i;
output;
end;
format date date9.;
run;


data mds_4m_n&days._91; 
set mds_meet_4m_n&days._91_dates;
where 0<=index_date-date<=120;
mds=1;
run;

proc sort data=mds_4m_n&days._91 out=mds_4m_n&days._91 ;
by bid_hrs_22 date ;
run;

data mds_n&days._91_dup (keep= bid_hrs_22 target date admission discharge index_date day_a day_d date_1 mds flag) ;
set mds_4m_n&days._91;
if date=lag(date) and bid_hrs_22=lag(bid_hrs_22) and fac_int_id~=lag(fac_int_id) then flag=1;
run;

proc freq data=mds_n&days._91_dup;
table flag;
run;

proc sort data=index_n&days._91;
by bid_hrs_22 date;
run;

%mend;

%mds_claims(days=91);
%mds_claims(days=182);
%mds_claims(days=273);
%mds_claims(days=365);
%mds_claims(days=456);
%mds_claims(days=547);
%mds_claims(days=638);
%mds_claims(days=730);


%macro merge(days=);

/* merging all files together*/

data all_claims_n&days.;
merge index_n&days._91 ip_n&days._91_dup ip_er_n&days._91_dup ip_obs_n&days._91_dup op_er_n&days._91_dup op_obs_n&days._91_dup sn_n&days._91_dup hh_n&days._91_dup hs_n&days._91_dup mds_n&days._91_dup;
by bid_hrs_22 date;
run;

/* keeping only 90 days before index(death) date). */
data all_claims_n&days.;
set all_claims_n&days.;
if index_date-date<=90 then days_90=1;
run;

data all_claims_n&days._90;
set all_claims_n&days.;
where days_90=1;
run;

proc freq data=all_claims_n&days._90;
table flag;
run;

/* Creating order based off of RHF paper, dictating which claims if overlap should be primary. */
data all_claims_n&days._90_order;
set all_claims_n&days._90;
order=. ;
npi=.;
if (ip=1 or ip_er=1 or ip_obs=1) then order=1;
if ip_npi~=. or ip_er_npi~=. or ip_obs_npi~=. then npi=ip_npi;
if (op_er=1 or op_obs=1) and order=. then order=2;
if  op_er_npi~=. and npi=. then npi=op_er_npi;
if  op_obs_npi~=. and npi=. then npi=op_obs_npi;
if sn=1 and order=. then order=3;
if  sn_npi~=. and npi=. then npi=sn_npi;
if hh=1 and order=. then order=4;
if  hh_npi~=. and npi=. then npi=hh_npi;
if hs=1 and order=. then order=5;
if  hs_npi~=. and npi=. then npi=hs_npi;
if mds=1 and order=. then order=6;
if order=. then order=0;
run;

proc sort data=all_claims_n&days._90_order out=all_claims_n&days._90_order ;
by bid_hrs_22 date ;
run;

data all_clm_n&days._90_ord_h_days;
set all_claims_n&days._90_order;
if (order ne 0 and order ne 4) then delete;
run;

proc sql;
create table all_clm_n&days._90_ord_h_days_cnt as select bid_hrs_22, count(order) as home_days
from all_clm_n&days._90_ord_h_days
group by bid_hrs_22;
quit;

data all_clm_n&days._90_ord_ip;
set all_claims_n&days._90_order;
if order ne 1 then delete;
run;

proc sql;
create table all_clm_n&days._90_ord_ip_cnt as select bid_hrs_22, count(order) as ip_days
from all_clm_n&days._90_ord_ip
group by bid_hrs_22;
quit;

data all_clm_n&days._90_ord_nh;
set all_claims_n&days._90_order;
if (order ne 3 and order ne 6) then delete;
run;

proc sql;
create table all_clm_n&days._90_ord_nh_cnt as select bid_hrs_22, count(order) as nh_days
from all_clm_n&days._90_ord_nh
group by bid_hrs_22;
quit;



/* Creating transitions */
data transit_n&days._90;
set all_claims_n&days._90_order;
transition=0;
if bid_hrs_22=lag(bid_hrs_22) and (order~=lag(order) or (order=lag(order) and (npi~=lag(npi) or flag~=lag(flag)))) then transition=1;
run;

data transit_n&days._90_cnt;
set transit_n&days._90;
by bid_hrs_22;
if first.bid_hrs_22 then t_count=0;
if transition=1 then t_count+1;
run;

proc freq data=transit_n&days._90_cnt;
table t_count;
run;

proc sort data=transit_n&days._90_cnt;
by bid_hrs_22 descending t_count;
run;

/* Finding if there are enough transitions to be budensome */
data transit_n&days._90_cnt_1;
set transit_n&days._90_cnt;
by bid_hrs_22;
retain burd_t;
if first.bid_hrs_22 then burd_t=t_count;
run;

proc sort data=transit_n&days._90_cnt_1  ;
by bid_hrs_22 date ;
run;

/* Using burden transitions definition of 3 or more transitions to flag for a burdensome transition, as per burdensome transition definition */
data burd_n&days._90;
set transit_n&days._90_cnt_1;
flag_burd=0;
if burd_t>=3 then flag_burd=1 ;
run;


proc sort data=burd_n&days._90 nodupkey;
by bid_hrs_22 ;
run;

proc freq data=burd_n&days._90;
table flag_burd;
run;

data burd_n&days._90_label (keep=id bid_hrs_22 death_year index_date days_90 burd_t flag_burd)  ;
set burd_n&days._90;
label	days_90 = "90 days bef. index"
	  	flag_burd = "burdensome transition"
		burd_t = "# of burdensome transitions" ;
run;


proc sql;
create table full_counts_n&days. as select * from
index1 a full outer join
all_clm_n&days._90_ord_h_days_cnt b 
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
full outer join all_clm_n&days._90_ord_ip_cnt c
on trim(left(a.bid_hrs_22))=trim(left(c.bid_hrs_22))
full outer join
all_clm_n&days._90_ord_nh_cnt d
on trim(left(a.bid_hrs_22))=trim(left(d.bid_hrs_22))
full outer join 
burd_n&days._90_label e
on trim(left(a.bid_hrs_22))=trim(left(e.bid_hrs_22));
quit;

%mend;

%merge(days=91);
%merge(days=182);
%merge(days=273);
%merge(days=365);
%merge(days=456);
%merge(days=547);
%merge(days=638);
%merge(days=730);


proc export data=full_counts_n91 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n91.dta" replace; 
run;

proc export data=full_counts_n182 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n182.dta" replace; 
run;

proc export data=full_counts_n273 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n273.dta" replace; 
run;

proc export data=full_counts_n365 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n365.dta" replace; 
run;

proc export data=full_counts_n456 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n456.dta" replace; 
run;

proc export data=full_counts_n547 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n547.dta" replace; 
run;

proc export data=full_counts_n638 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n638.dta" replace; 
run;

proc export data=full_counts_n730 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n730.dta" replace; 
run;







H="Counting days post index by quarter and transitions code"
/* Burdensome Transitions code
This is tailored to the definiton for ASK's R01, where burdensome transitions occur in the last 90 days of life. 

Initially we start off by using the death date and are interested in days 120 days prior to death. 

/* Starting with death date as index and look 120 days back. */

/* Raj looking at incident Dementia in HRS interview. Thus index date is interview with incident dementia */

libname clean 'D:\HRS\Shared\base_data\hrs_cms\SAS';

libname medi 'D:\HRS\Shared\base_data\hrs_cms\SAS';

proc import datafile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\index_dates.dta" out=index_date dbms=stata replace; run;

proc sql;
create table index as select
a.*, b.*
from clean.xref2015medicare a inner join
index_date b
on a.hhid=b.hhid and a.pn=b.pn;
quit;


data index;
set index;
index_date=c_ivw_date;
run; 

proc sort data=index out=index1 nodupkey;
by bid_hrs_22 id index_date;
run;

*%let days='91', '182';
*%let quarter='0', '1';

/*negative*/

%macro dates(days=, quarter=, name=);

/* can loop over and change the 0 to make it i=1/8 */
data index_n&days.;
set index1;
index_date_og=index_date;
index_date=index_date-(&quarter.*91);
quarter="&name.";
format index_date date9.;
format index_date_og date9.;
run;



data index_n&days._91 (keep=id hhid pn hhidpn bid_hrs_22 date index_date index_date_og index_date_91 core_year c_ivw_date index_&days. quarter) ;
set index_n&days.;
index_&days.=index_date-91;
do i=index_&days. to index_date;
date=i;
output;
end;
format date date9.;
format index_date date9.;
format index_&days. date9.;
run;
run;

%mend;

%dates(days=91, quarter=0, name=nq1);
%dates(days=182, quarter=1, name=nq2);
%dates(days=273, quarter=2, name=nq3);
%dates(days=365, quarter=3, name=nq4);
%dates(days=456, quarter=4, name=nq5);
%dates(days=547, quarter=5, name=nq6);
%dates(days=638, quarter=6, name=nq7);
%dates(days=730, quarter=7, name=nq8);


/*positive*/

%macro dates(days=, quarter=, name=);

/* can loop over and change the 0 to make it i=1/8 */
data index_p&days.;
set index1;
index_date_og=index_date;
index_date=index_date+(&quarter.*91);
quarter="&name.";
format index_date date9.;
format index_date_og date9.;
run;



data index_p&days._91 (keep=id hhid pn hhidpn bid_hrs_22 date index_date index_date_og index_date_91 core_year c_ivw_date index_&days. quarter) ;
set index_p&days.;
index_&days.=index_date+91;
do i=index_date to index_&days.;
date=i;
output;
end;
format date date9.;
format index_date date9.;
format index_&days. date9.;
run;
run;

%mend;

%dates(days=91, quarter=0, name=pq1);
%dates(days=182, quarter=1, name=pq2);
%dates(days=273, quarter=2, name=pq3);
%dates(days=365, quarter=3, name=pq4);
%dates(days=456, quarter=4, name=pq5);
%dates(days=547, quarter=5, name=pq6);
%dates(days=638, quarter=6, name=pq7);
%dates(days=730, quarter=7, name=pq8);

/**************************************************************************/
/**************** Claims after Index  ******************************/
/**************************************************************************/
/*macro to get claims 120 days before death
saves datasets for each claim type */
%macro claimspost(days_start=,days_aft_index=,source=,suf=, days=);

/*claims fully within x time of death date*/
proc sql;
create table &source._meet_1_p&days._91 as select a.*,b.index_date,b.id 
from medi.&source._1998_2015 a inner join
index_p&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and &days_start<=a.admit_date-b.index_date<=&days_aft_index ;
quit;

/*claims that start earlier than x time but span into x time before death*/
proc sql;
create table &source._meet_2_p&days._91 as select a.*,b.index_date,b.id 
from medi.&source._1998_2015 a inner join
index_p&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and a.admit_date-b.index_date>&days_aft_index and a.disch_date-b.index_date<=&days_aft_index;
quit;

data &source._meet_&suf._p&days._91(compress=yes)  ;
set &source._meet_1_p&days._91  &source._meet_2_p&days._91;
format admit_date date9.;
format disch_date date9.;
run;

data &source._meet_&suf._p&days._91 (keep= bid_hrs_22 admit_date disch_date index_date ORGNPINM rvcntr01-rvcntr45 hcpscd01-hcpscd45 rvunt01-rvunt45 id admit_year provider quarter);
set &source._meet_&suf._p&days._91;
run;

proc sort data=&source._meet_&suf._p&days._91 out=&source._meet_&suf._p&days._91 nodupkey;
by bid_hrs_22 id admit_date disch_date;
run;

proc datasets lib=work nolist;
delete &source._meet_1_p&days._91 &source._meet_2_p&days._91;
quit;
run;

%mend;

/*4m before death*/
%claimspost(days_start=0,days_aft_index=120,source=hh,suf=4m, days=91); /*home health*/
%claimspost(days_start=0,days_aft_index=120,source=ip,suf=4m, days=91); /*inpatient*/
%claimspost(days_start=0,days_aft_index=120,source=dm,suf=4m, days=91); /*dme*/
%claimspost(days_start=0,days_aft_index=120,source=op,suf=4m, days=91); /*outpatient*/
%claimspost(days_start=0,days_aft_index=120,source=pb,suf=4m, days=91); /*carrier*/
%claimspost(days_start=0,days_aft_index=120,source=sn,suf=4m, days=91); /*snf*/

%claimspost(days_start=0,days_aft_index=120,source=hh,suf=4m, days=182); /*home health*/
%claimspost(days_start=0,days_aft_index=120,source=ip,suf=4m, days=182); /*inpatient*/
%claimspost(days_start=0,days_aft_index=120,source=dm,suf=4m, days=182); /*dme*/
%claimspost(days_start=0,days_aft_index=120,source=op,suf=4m, days=182); /*outpatient*/
%claimspost(days_start=0,days_aft_index=120,source=pb,suf=4m, days=182); /*carrier*/
%claimspost(days_start=0,days_aft_index=120,source=sn,suf=4m, days=182); /*snf*/

%claimspost(days_start=0,days_aft_index=120,source=hh,suf=4m, days=273); /*home health*/
%claimspost(days_start=0,days_aft_index=120,source=ip,suf=4m, days=273); /*inpatient*/
%claimspost(days_start=0,days_aft_index=120,source=dm,suf=4m, days=273); /*dme*/
%claimspost(days_start=0,days_aft_index=120,source=op,suf=4m, days=273); /*outpatient*/
%claimspost(days_start=0,days_aft_index=120,source=pb,suf=4m, days=273); /*carrier*/
%claimspost(days_start=0,days_aft_index=120,source=sn,suf=4m, days=273); /*snf*/

%claimspost(days_start=0,days_aft_index=120,source=hh,suf=4m, days=365); /*home health*/
%claimspost(days_start=0,days_aft_index=120,source=ip,suf=4m, days=365); /*inpatient*/
%claimspost(days_start=0,days_aft_index=120,source=dm,suf=4m, days=365); /*dme*/
%claimspost(days_start=0,days_aft_index=120,source=op,suf=4m, days=365); /*outpatient*/
%claimspost(days_start=0,days_aft_index=120,source=pb,suf=4m, days=365); /*carrier*/
%claimspost(days_start=0,days_aft_index=120,source=sn,suf=4m, days=365); /*snf*/

%claimspost(days_start=0,days_aft_index=120,source=hh,suf=4m, days=456); /*home health*/
%claimspost(days_start=0,days_aft_index=120,source=ip,suf=4m, days=456); /*inpatient*/
%claimspost(days_start=0,days_aft_index=120,source=dm,suf=4m, days=456); /*dme*/
%claimspost(days_start=0,days_aft_index=120,source=op,suf=4m, days=456); /*outpatient*/
%claimspost(days_start=0,days_aft_index=120,source=pb,suf=4m, days=456); /*carrier*/
%claimspost(days_start=0,days_aft_index=120,source=sn,suf=4m, days=456); /*snf*/

%claimspost(days_start=0,days_aft_index=120,source=hh,suf=4m, days=547); /*home health*/
%claimspost(days_start=0,days_aft_index=120,source=ip,suf=4m, days=547); /*inpatient*/
%claimspost(days_start=0,days_aft_index=120,source=dm,suf=4m, days=547); /*dme*/
%claimspost(days_start=0,days_aft_index=120,source=op,suf=4m, days=547); /*outpatient*/
%claimspost(days_start=0,days_aft_index=120,source=pb,suf=4m, days=547); /*carrier*/
%claimspost(days_start=0,days_aft_index=120,source=sn,suf=4m, days=547); /*snf*/

%claimspost(days_start=0,days_aft_index=120,source=hh,suf=4m, days=638); /*home health*/
%claimspost(days_start=0,days_aft_index=120,source=ip,suf=4m, days=638); /*inpatient*/
%claimspost(days_start=0,days_aft_index=120,source=dm,suf=4m, days=638); /*dme*/
%claimspost(days_start=0,days_aft_index=120,source=op,suf=4m, days=638); /*outpatient*/
%claimspost(days_start=0,days_aft_index=120,source=pb,suf=4m, days=638); /*carrier*/
%claimspost(days_start=0,days_aft_index=120,source=sn,suf=4m, days=638); /*snf*/

%claimspost(days_start=0,days_aft_index=120,source=hh,suf=4m, days=730); /*home health*/
%claimspost(days_start=0,days_aft_index=120,source=ip,suf=4m, days=730); /*inpatient*/
%claimspost(days_start=0,days_aft_index=120,source=dm,suf=4m, days=730); /*dme*/
%claimspost(days_start=0,days_aft_index=120,source=op,suf=4m, days=730); /*outpatient*/
%claimspost(days_start=0,days_aft_index=120,source=pb,suf=4m, days=730); /*carrier*/
%claimspost(days_start=0,days_aft_index=120,source=sn,suf=4m, days=730); /*snf*/

/* Hospice file a little different format than the rest, but does the same as above */



data hs_1998_2015 (keep= hspcstrt hs_start admit_date disch_date bid_hrs_22 provider) ;
set medi.hs_1998_2015;
hs_start=input(put(hspcstrt, 8.), yymmdd8.);
format hs_start date9.;
format admit_date date9.;
run;

%macro hs_claims(days=);

/*claims fully within x time of death date*/
proc sql;
create table hs_meet_1_p&days._91 as select a.*,b.index_date,b.id 
from hs_1998_2015 a inner join
index_p&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and 0<=a.hs_start-b.index_date<=120;
quit;

/*claims that start earlier than x time but span into x time before death*/
proc sql;
create table hs_meet_2_p&days._91 as select a.*,b.index_date,b.id 
from hs_1998_2015 a inner join
index_p&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and a.hs_start-b.index_date>120 and a.disch_date-b.index_date<=120;
quit;

data hs_meet_4m_p&days._91 (compress=yes);
set hs_meet_1_p&days._91 hs_meet_2_p&days._91;
run;

data hs_meet_4m_p&days._91 (keep= bid_hrs_22 admit_date disch_date index_date ORGNPINM id admit_year provider);
set hs_meet_4m_p&days._91;
run;

proc datasets lib=work nolist;
delete hs_meet_1_p&days._91 hs_meet_2_p&days._91;
quit;
run;

%mend;

/*4m before death*/
%hs_claims(days=91);
%hs_claims(days=182);
%hs_claims(days=273);
%hs_claims(days=365);
%hs_claims(days=456);
%hs_claims(days=547);
%hs_claims(days=638);
%hs_claims(days=730);


/*emergency and observation stays identified from the inpatient and outpatient file. */

%macro er_obs(source=, days=);

data &source._meet_4m_p&days._91_er_obs;
set &source._meet_4m_p&days._91;
er_flag = 0;
obs_flag = 0;
array rvcntr rvcntr01-rvcntr45;
array hcpcs hcpscd01-hcpscd45;
array rvunt rvunt01-rvunt45;
do over rvcntr;
do over hcpcs;
do over rvunt;
if strip(rvcntr) in:("0450", "0451", "0452", "0456", "0459", "0981") then er_flag = 1;
if strip(rvcntr) in:("0762") then obs_flag =1;
/*if strip(rvcntr) in:("0760") and strip(hcpcs) in: ("G0378") and rvunt>=8 then obs_flag =1;*/
end;
end;
end;
run;

data &source._er_meet_4m_p&days._91;
set &source._meet_4m_p&days._91_er_obs;
if er_flag=1;
run;

data &source._obs_meet_4m_p&days._91;
set &source._meet_4m_p&days._91_er_obs;
if obs_flag=1;
run;

%mend;

/*4m before death*/
%er_obs(source=ip, days=91); /*inpatient file*/
%er_obs(source=ip, days=182); /*inpatient file*/
%er_obs(source=ip, days=273); /*inpatient file*/
%er_obs(source=ip, days=365); /*inpatient file*/
%er_obs(source=ip, days=456); /*inpatient file*/
%er_obs(source=ip, days=547); /*inpatient file*/
%er_obs(source=ip, days=638); /*inpatient file*/
%er_obs(source=ip, days=730); /*inpatient file*/

%er_obs(source=op, days=91); /*outpatient file*/
%er_obs(source=op, days=182); /*outpatient file*/
%er_obs(source=op, days=273); /*outpatient file*/
%er_obs(source=op, days=365); /*outpatient file*/
%er_obs(source=op, days=456); /*outpatient file*/
%er_obs(source=op, days=547); /*outpatient file*/
%er_obs(source=op, days=638); /*outpatient file*/
%er_obs(source=op, days=730); /*outpatient file*/


/* Putting stays into 1 observation per day format. Flagging if they go to a different facility, but are still IP.*/

%macro dates(source=,suf=, npi=, days=);

data &source._meet_&suf._p&days._91_d;
set &source._meet_&suf._p&days._91;
format index_date date9.;
format admit_date date9.;
format disch_date date9.;
day_a=admit_date-index_date;
day_d=disch_date-index_date;
run;

data &source._meet_&suf._p&days._91_dates;
set &source._meet_&suf._p&days._91_d;
do i=admit_date to disch_date;
date=i;
output;
end;
format date date9.;
run;

data &source._&suf._p&days._91; 
set &source._meet_&suf._p&days._91_dates;
where 0<=index_date-date<=120;
&source.=1;
&source._npi=&npi.;
run;

proc sort data=&source._&suf._p&days._91 out=&source._&suf._p&days._91 ;
by bid_hrs_22 date ;
run;

data &source._p&days._91_dup (keep= bid_hrs_22 bid_n hhidpn index_date flag date admit_date disch_date days_a days_d &source. fac_type provider &source._npi at_upin) ;
set &source._&suf._p&days._91;
if date=lag(date) and bid_hrs_22=lag(bid_hrs_22) and (provider~=lag(provider) or &npi.~=lag(&npi.)) then flag=1;
run;

proc sort data=&source._p&days._91_dup nodupkey;
by bid_hrs_22 date &source. &source._npi;
run;

%mend;

%dates(source=ip,suf=4m,npi=ORGNPINM, days=91);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=91);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=91);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=91);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=91);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=91);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=91);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=91);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=182);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=182);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=182);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=182);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=182);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=182);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=182);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=182);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=273);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=273);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=273);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=273);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=273);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=273);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=273);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=273);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=365);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=365);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=365);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=365);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=365);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=365);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=365);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=365);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=456);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=456);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=456);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=456);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=456);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=456);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=456);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=456);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=547);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=547);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=547);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=547);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=547);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=547);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=547);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=547);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=638);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=638);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=638);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=638);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=638);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=638);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=638);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=638);

%dates(source=ip,suf=4m,npi=ORGNPINM, days=730);
%dates(source=op_er,suf=4m,npi=ORGNPINM, days=730);
%dates(source=op_obs,suf=4m,npi=ORGNPINM, days=730);
%dates(source=ip_er,suf=4m,npi=ORGNPINM, days=730);
%dates(source=ip_obs,suf=4m,npi=ORGNPINM, days=730);
%dates(source=sn,suf=4m,npi=ORGNPINM, days=730);
%dates(source=hh,suf=4m,npi=ORGNPINM, days=730);
%dates(source=hs,suf=4m,npi=ORGNPINM, days=730);

/* Bringing in MDS section*/

libname proj_int "D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data";

proc import out=proj_int.mds datafile="D:\HRS\Projects\dementia_decedents\ask_r01_financial_burden_dementia_7_yrs\data\int_data\mds.dta" replace; 
run;

%macro mds_claims(days=);

/*MDS claims fully within x time of death date*/
proc sql;
create table mds_meet_1_p&days._91 as select a.*,b.index_date,b.id 
from proj_int.mds a inner join
index_p&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and 0<=a.admit-b.index_date<=120 ;
quit;

/*MDS claims that start earlier than x time but span into x time before death*/
proc sql;
create table mds_meet_2_p&days._91 as select a.*,b.index_date,b.id 
from proj_int.mds a inner join
index_p&days._91 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and a.admit-b.index_date>120 and a.discharge-b.index_date<=0;
quit;

data mds_meet_4m_p&days._91 (compress=yes);
set mds_meet_1_p&days._91 mds_meet_2_p&days._91;
run;


data mds_meet_4m_p&days._91_d;
set mds_meet_4m_p&days._91;
format index_date date9.;
day_a=admit-index_date;
day_d=discharge-index_date;
rename date=date_1;
run;


data mds_meet_4m_p&days._91_dates;
set mds_meet_4m_p&days._91_d;
do i=admit to discharge;
date=i;
output;
end;
format date date9.;
run;


data mds_4m_p&days._91; 
set mds_meet_4m_p&days._91_dates;
where 0<=date-index_date<=120;
mds=1;
run;

proc sort data=mds_4m_p&days._91 out=mds_4m_p&days._91 ;
by bid_hrs_22 date ;
run;

data mds_p&days._91_dup (keep= bid_hrs_22 target date admission discharge index_date day_a day_d date_1 mds flag) ;
set mds_4m_p&days._91;
if date=lag(date) and bid_hrs_22=lag(bid_hrs_22) and fac_int_id~=lag(fac_int_id) then flag=1;
run;

proc freq data=mds_p&days._91_dup;
table flag;
run;

proc sort data=index_p&days._91;
by bid_hrs_22 date;
run;

%mend;

%mds_claims(days=91);
%mds_claims(days=182);
%mds_claims(days=273);
%mds_claims(days=365);
%mds_claims(days=456);
%mds_claims(days=547);
%mds_claims(days=638);
%mds_claims(days=730);


%macro merge(days=);

/* merging all files together*/

data all_claims_p&days.;
merge index_p&days._91 ip_p&days._91_dup ip_er_p&days._91_dup ip_obs_p&days._91_dup op_er_p&days._91_dup op_obs_p&days._91_dup sn_p&days._91_dup hh_p&days._91_dup hs_p&days._91_dup mds_p&days._91_dup;
by bid_hrs_22 date;
run;

/* keeping only 90 days before index(death) date). */
data all_claims_p&days.;
set all_claims_p&days.;
if date-index_date<=90 then days_90=1;
run;

data all_claims_p&days._90;
set all_claims_p&days.;
where days_90=1;
run;

proc freq data=all_claims_p&days._90;
table flag;
run;

/* Creating order based off of RHF paper, dictating which claims if overlap should be primary. */
data all_claims_p&days._90_order;
set all_claims_p&days._90;
order=. ;
npi=.;
if (ip=1 or ip_er=1 or ip_obs=1) then order=1;
if ip_npi~=. or ip_er_npi~=. or ip_obs_npi~=. then npi=ip_npi;
if (op_er=1 or op_obs=1) and order=. then order=2;
if  op_er_npi~=. and npi=. then npi=op_er_npi;
if  op_obs_npi~=. and npi=. then npi=op_obs_npi;
if sn=1 and order=. then order=3;
if  sn_npi~=. and npi=. then npi=sn_npi;
if hh=1 and order=. then order=4;
if  hh_npi~=. and npi=. then npi=hh_npi;
if hs=1 and order=. then order=5;
if  hs_npi~=. and npi=. then npi=hs_npi;
if mds=1 and order=. then order=6;
if order=. then order=0;
run;

proc sort data=all_claims_p&days._90_order out=all_claims_p&days._90_order ;
by bid_hrs_22 date ;
run;

data all_clm_p&days._90_ord_h_days;
set all_claims_p&days._90_order;
if (order ne 0 and order ne 4) then delete;
run;

proc sql;
create table all_clm_p&days._90_ord_h_days_cnt as select bid_hrs_22, count(order) as home_days
from all_clm_p&days._90_ord_h_days
group by bid_hrs_22;
quit;

data all_clm_p&days._90_ord_ip;
set all_claims_p&days._90_order;
if order ne 1 then delete;
run;

proc sql;
create table all_clm_p&days._90_ord_ip_cnt as select bid_hrs_22, count(order) as ip_days
from all_clm_p&days._90_ord_ip
group by bid_hrs_22;
quit;

data all_clm_p&days._90_ord_nh;
set all_claims_p&days._90_order;
if (order ne 3 and order ne 6) then delete;
run;

proc sql;
create table all_clm_p&days._90_ord_nh_cnt as select bid_hrs_22, count(order) as nh_days
from all_clm_p&days._90_ord_nh
group by bid_hrs_22;
quit;



/* Creating transitions */
data transit_p&days._90;
set all_claims_p&days._90_order;
transition=0;
if bid_hrs_22=lag(bid_hrs_22) and (order~=lag(order) or (order=lag(order) and (npi~=lag(npi) or flag~=lag(flag)))) then transition=1;
run;

data transit_p&days._90_cnt;
set transit_p&days._90;
by bid_hrs_22;
if first.bid_hrs_22 then t_count=0;
if transition=1 then t_count+1;
run;

proc freq data=transit_p&days._90_cnt;
table t_count;
run;

proc sort data=transit_p&days._90_cnt;
by bid_hrs_22 descending t_count;
run;

/* Finding if there are enough transitions to be budensome */
data transit_p&days._90_cnt_1;
set transit_p&days._90_cnt;
by bid_hrs_22;
retain burd_t;
if first.bid_hrs_22 then burd_t=t_count;
run;

proc sort data=transit_p&days._90_cnt_1  ;
by bid_hrs_22 date ;
run;

/* Using burden transitions definition of 3 or more transitions to flag for a burdensome transition, as per burdensome transition definition */
data burd_p&days._90;
set transit_p&days._90_cnt_1;
flag_burd=0;
if burd_t>=3 then flag_burd=1 ;
run;


proc sort data=burd_p&days._90 nodupkey;
by bid_hrs_22 ;
run;

proc freq data=burd_p&days._90;
table flag_burd;
run;

data burd_p&days._90_label (keep=id bid_hrs_22 death_year index_date days_90 burd_t flag_burd)  ;
set burd_p&days._90;
label	days_90 = "90 days bef. index"
	  	flag_burd = "burdensome transition"
		burd_t = "# of burdensome transitions" ;
run;


proc sql;
create table full_counts_p&days. as select * from
index1 a full outer join
all_clm_p&days._90_ord_h_days_cnt b 
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
full outer join all_clm_p&days._90_ord_ip_cnt c
on trim(left(a.bid_hrs_22))=trim(left(c.bid_hrs_22))
full outer join all_clm_p&days._90_ord_nh_cnt d
on trim(left(a.bid_hrs_22))=trim(left(d.bid_hrs_22))
full outer join burd_p&days._90_label e
on trim(left(a.bid_hrs_22))=trim(left(e.bid_hrs_22));
quit;

%mend;

%merge(days=91);
%merge(days=182);
%merge(days=273);
%merge(days=365);
%merge(days=456);
%merge(days=547);
%merge(days=638);
%merge(days=730);


proc export data=full_counts_n91 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n91.dta" replace; 
run;

proc export data=full_counts_n182 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n182.dta" replace; 
run;

proc export data=full_counts_n273 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n273.dta" replace; 
run;

proc export data=full_counts_n365 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n365.dta" replace; 
run;

proc export data=full_counts_n456 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n456.dta" replace; 
run;

proc export data=full_counts_n547 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n547.dta" replace; 
run;

proc export data=full_counts_n638 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n638.dta" replace; 
run;

proc export data=full_counts_n730 outfile="D:\HRS\Projects\incident_dementia\rk_days_at_home\data\int_data\transitions_n730.dta" replace; 
run;







H="claims before"

**************************************************

/*Get claims 1 year and 2 year before each interview*/
/*Step 2: pull claims lists using xwalk and ivw date*/
;


/****************************************************************************/
/* Macro to pull claims lists, saves lists to int_data folder               */
/****************************************************************************/
%macro claims_pre(days_start=,days_bef_index=,yrs=,source=);

proc sql;
create table &source._meet_&days_bef_index. as select *
from index1 a inner join
medi.&source._&yrs. b 
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and &days_start<=a.index_date-b.disch_date<=&days_bef_index;
quit;

%mend;

/*run to get claims list 91 days pre-ivw for ip*/
%claims_pre(days_start=0,days_bef_index=91,yrs=1998_2016,source=ip);
%claims_pre(days_start=0,days_bef_index=91,yrs=1998_2016,source=mp);
%claims_pre(days_start=0,days_bef_index=91,yrs=1998_2016,source=sn);
%claims_pre(days_start=0,days_bef_index=91,yrs=1998_2016,source=op);
%claims_pre(days_start=0,days_bef_index=91,yrs=1998_2016,source=pb);
%claims_pre(days_start=0,days_bef_index=91,yrs=1998_2016,source=hh);
%claims_pre(days_start=0,days_bef_index=91,yrs=1998_2016,source=hs);
%claims_pre(days_start=0,days_bef_index=91,yrs=1998_2016,source=dm);

/*Pre Q2*/
%claims_pre(days_start=91,days_bef_index=182,yrs=1998_2016,source=ip);
%claims_pre(days_start=91,days_bef_index=182,yrs=1998_2016,source=mp);
%claims_pre(days_start=91,days_bef_index=182,yrs=1998_2016,source=sn);
%claims_pre(days_start=91,days_bef_index=182,yrs=1998_2016,source=op);
%claims_pre(days_start=91,days_bef_index=182,yrs=1998_2016,source=pb);
%claims_pre(days_start=91,days_bef_index=182,yrs=1998_2016,source=hh);
%claims_pre(days_start=91,days_bef_index=182,yrs=1998_2016,source=hs);
%claims_pre(days_start=91,days_bef_index=182,yrs=1998_2016,source=dm);

/*Pre Q3*/
%claims_pre(days_start=182,days_bef_index=273,yrs=1998_2016,source=ip);
%claims_pre(days_start=182,days_bef_index=273,yrs=1998_2016,source=mp);
%claims_pre(days_start=182,days_bef_index=273,yrs=1998_2016,source=sn);
%claims_pre(days_start=182,days_bef_index=273,yrs=1998_2016,source=op);
%claims_pre(days_start=182,days_bef_index=273,yrs=1998_2016,source=pb);
%claims_pre(days_start=182,days_bef_index=273,yrs=1998_2016,source=hh);
%claims_pre(days_start=182,days_bef_index=273,yrs=1998_2016,source=hs);
%claims_pre(days_start=182,days_bef_index=273,yrs=1998_2016,source=dm);

/*Pre Q4*/
%claims_pre(days_start=273,days_bef_index=365,yrs=1998_2016,source=ip);
%claims_pre(days_start=273,days_bef_index=365,yrs=1998_2016,source=mp);
%claims_pre(days_start=273,days_bef_index=365,yrs=1998_2016,source=sn);
%claims_pre(days_start=273,days_bef_index=365,yrs=1998_2016,source=op);
%claims_pre(days_start=273,days_bef_index=365,yrs=1998_2016,source=pb);
%claims_pre(days_start=273,days_bef_index=365,yrs=1998_2016,source=hh);
%claims_pre(days_start=273,days_bef_index=365,yrs=1998_2016,source=hs);
%claims_pre(days_start=273,days_bef_index=365,yrs=1998_2016,source=dm);

/*Pre Q5*/
%claims_pre(days_start=365,days_bef_index=456,yrs=1998_2016,source=ip);
%claims_pre(days_start=365,days_bef_index=456,yrs=1998_2016,source=mp);
%claims_pre(days_start=365,days_bef_index=456,yrs=1998_2016,source=sn);
%claims_pre(days_start=365,days_bef_index=456,yrs=1998_2016,source=op);
%claims_pre(days_start=365,days_bef_index=456,yrs=1998_2016,source=pb);
%claims_pre(days_start=365,days_bef_index=456,yrs=1998_2016,source=hh);
%claims_pre(days_start=365,days_bef_index=456,yrs=1998_2016,source=hs);
%claims_pre(days_start=365,days_bef_index=456,yrs=1998_2016,source=dm);

/*Pre Q6*/
%claims_pre(days_start=456,days_bef_index=547,yrs=1998_2016,source=ip);
%claims_pre(days_start=456,days_bef_index=547,yrs=1998_2016,source=mp);
%claims_pre(days_start=456,days_bef_index=547,yrs=1998_2016,source=sn);
%claims_pre(days_start=456,days_bef_index=547,yrs=1998_2016,source=op);
%claims_pre(days_start=456,days_bef_index=547,yrs=1998_2016,source=pb);
%claims_pre(days_start=456,days_bef_index=547,yrs=1998_2016,source=hh);
%claims_pre(days_start=456,days_bef_index=547,yrs=1998_2016,source=hs);
%claims_pre(days_start=456,days_bef_index=547,yrs=1998_2016,source=dm);

/*Pre Q7*/
%claims_pre(days_start=547,days_bef_index=638,yrs=1998_2016,source=ip);
%claims_pre(days_start=547,days_bef_index=638,yrs=1998_2016,source=mp);
%claims_pre(days_start=547,days_bef_index=638,yrs=1998_2016,source=sn);
%claims_pre(days_start=547,days_bef_index=638,yrs=1998_2016,source=op);
%claims_pre(days_start=547,days_bef_index=638,yrs=1998_2016,source=pb);
%claims_pre(days_start=547,days_bef_index=638,yrs=1998_2016,source=hh);
%claims_pre(days_start=547,days_bef_index=638,yrs=1998_2016,source=hs);
%claims_pre(days_start=547,days_bef_index=638,yrs=1998_2016,source=dm);

/*Pre Q8*/
%claims_pre(days_start=638,days_bef_index=730,yrs=1998_2016,source=ip);
%claims_pre(days_start=638,days_bef_index=730,yrs=1998_2016,source=mp);
%claims_pre(days_start=638,days_bef_index=730,yrs=1998_2016,source=sn);
%claims_pre(days_start=638,days_bef_index=730,yrs=1998_2016,source=op);
%claims_pre(days_start=638,days_bef_index=730,yrs=1998_2016,source=pb);
%claims_pre(days_start=638,days_bef_index=730,yrs=1998_2016,source=hh);
%claims_pre(days_start=638,days_bef_index=730,yrs=1998_2016,source=hs);
%claims_pre(days_start=638,days_bef_index=730,yrs=1998_2016,source=dm);



/****************************************************************************/
/*prior to saving the permanent claims datasets, drop unneeded variables
this speeds up runnnig code later on*/

/*mp claims*/
%macro mp_drop(days_bef_core=);
data proj_int.ip_meet_&days_bef_core.;
set mp_meet_&days_bef_core.(keep=bid_hrs_22 core_year index_year index_date admit_date disch_date 
 SSLSSNF icarecnt CRNRYDAY type_adm ER_AMT AD_DGNS DGNS_CD01-DGNS_CD25 PRCDR_CD01-PRCDR_CD25 
 PRCDR_DT01-PRCDR_DT25 );
 if sslssnf~="N";
run;

data proj_int.sn_meet_&days_bef_core.;
set mp_meet_&days_bef_core.(keep=bid_hrs_22 core_year index_year index_date admit_date disch_date 
 SSLSSNF icarecnt CRNRYDAY type_adm ER_AMT AD_DGNS DGNS_CD01-DGNS_CD25 PRCDR_CD01-PRCDR_CD25 
 PRCDR_DT01-PRCDR_DT25 );
 if sslssnf="N";
run;

%mend mp_drop;

/*hh*/
%macro hh_drop(days_bef_core=);
data proj_int.hh_meet_&days_bef_core.;
set hh_meet_&days_bef_core.(keep=bid_hrs_22 core_year index_year index_date PDGNS_CD DGNSCD01-DGNSCD25 );
run;
%mend hh_drop;

/*hs*/
%macro hs_drop(days_bef_core=);
data proj_int.hs_meet_&days_bef_core.;
set hs_meet_&days_bef_core.(keep=bid_hrs_22 core_year index_year index_date PDGNS_CD DGNSCD01-DGNSCD25 );
run;
%mend hs_drop;

/*dme*/
%macro dm_drop(days_bef_core=);
data proj_int.dm_meet_&days_bef_core.;
set dm_meet_&days_bef_core.(keep=bid_hrs_22 core_year index_year index_date admit_date BETOS01:BETOS13
PDGNS_CD DGNSCD01-DGNSCD12 );
run;
%mend dm_drop;

/*op*/
%macro op_drop(days_bef_core=);
data proj_int.op_meet_&days_bef_core.;
set op_meet_&days_bef_core.(keep=bid_hrs_22 core_year index_year index_date admit_date disch_date
 RVCNTR01-RVCNTR45 PDGNS_CD DGNSCD01-DGNSCD25 );
run;
%mend op_drop;

/*ip*/
%macro ip_drop(days_bef_core=);
data proj_int.ip_meet_hcpcs_&days_bef_core.;
set ip_meet_&days_bef_core.(keep=bid_hrs_22 core_year index_year index_date admit_date disch_date
 HCPSCD01-HCPSCD45 );
run;
%mend ip_drop;

/*carrier*/
%macro pb_drop(days_bef_core=);
data proj_int.pb_meet_&days_bef_core.;
set pb_meet_&days_bef_core.(keep=bid_hrs_22 core_year index_year index_date admit_date disch_date
 HCPSCD01-HCPSCD13 PDGNS_CD DGNSCD01-DGNSCD12 );
run;
%mend pb_drop;

%mp_drop(days_bef_core=91);
%mp_drop(days_bef_core=182);
%mp_drop(days_bef_core=273);
%mp_drop(days_bef_core=365);
%mp_drop(days_bef_core=456);
%mp_drop(days_bef_core=547);
%mp_drop(days_bef_core=638);
%mp_drop(days_bef_core=730);

%hh_drop(days_bef_core=91);
%hh_drop(days_bef_core=182);
%hh_drop(days_bef_core=273);
%hh_drop(days_bef_core=365);
%hh_drop(days_bef_core=456);
%hh_drop(days_bef_core=547);
%hh_drop(days_bef_core=638);
%hh_drop(days_bef_core=730);

%hs_drop(days_bef_core=91);
%hs_drop(days_bef_core=182);
%hs_drop(days_bef_core=273);
%hs_drop(days_bef_core=365);
%hs_drop(days_bef_core=456);
%hs_drop(days_bef_core=547);
%hs_drop(days_bef_core=638);
%hs_drop(days_bef_core=730);

%dm_drop(days_bef_core=91);
%dm_drop(days_bef_core=182);
%dm_drop(days_bef_core=273);
%dm_drop(days_bef_core=365);
%dm_drop(days_bef_core=456);
%dm_drop(days_bef_core=547);
%dm_drop(days_bef_core=638);
%dm_drop(days_bef_core=730);

%op_drop(days_bef_core=91);
%op_drop(days_bef_core=182);
%op_drop(days_bef_core=273);
%op_drop(days_bef_core=365);
%op_drop(days_bef_core=456);
%op_drop(days_bef_core=547);
%op_drop(days_bef_core=638);
%op_drop(days_bef_core=730);

%pb_drop(days_bef_core=91);
%pb_drop(days_bef_core=182);
%pb_drop(days_bef_core=273);
%pb_drop(days_bef_core=365);
%pb_drop(days_bef_core=456);
%pb_drop(days_bef_core=547);
%pb_drop(days_bef_core=638);
%pb_drop(days_bef_core=730);

%ip_drop(days_bef_core=91);
%ip_drop(days_bef_core=182);
%ip_drop(days_bef_core=273);
%ip_drop(days_bef_core=365);
%ip_drop(days_bef_core=456);
%ip_drop(days_bef_core=547);
%ip_drop(days_bef_core=638);
%ip_drop(days_bef_core=730);




H="claims_after"

**************************************************

/*Get claims 1 year and 2 year before each interview*/
/*Step 2: pull claims lists using xwalk and ivw date*/
;


/****************************************************************************/
/* Macro to pull claims lists, saves lists to int_data folder               */
/****************************************************************************/
%macro claims_post(days_start=,days_aft_index=,yrs=,source=);

proc sql;
create table &source._meet_&days_aft_index.p as select a.*,b.index_date,b.index_year
from medi.&source._&yrs. a inner join
index b 
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and &days_start<=a.admit_date-b.index_date<=&days_aft_index;
quit;


%mend;

/*run to get claims list 91 days pre-ivw for ip*/
%claims_post(days_start=0,days_aft_index=91,yrs=1998_2016,source=ip);
%claims_post(days_start=0,days_aft_index=91,yrs=1998_2016,source=mp);
%claims_post(days_start=0,days_aft_index=91,yrs=1998_2016,source=sn);
%claims_post(days_start=0,days_aft_index=91,yrs=1998_2016,source=op);
%claims_post(days_start=0,days_aft_index=91,yrs=1998_2016,source=pb);
%claims_post(days_start=0,days_aft_index=91,yrs=1998_2016,source=hh);
%claims_post(days_start=0,days_aft_index=91,yrs=1998_2016,source=hs);
%claims_post(days_start=0,days_aft_index=91,yrs=1998_2016,source=dm);

/*Pre Q2*/
%claims_post(days_start=91,days_aft_index=182,yrs=1998_2016,source=ip);
%claims_post(days_start=91,days_aft_index=182,yrs=1998_2016,source=mp);
%claims_post(days_start=91,days_aft_index=182,yrs=1998_2016,source=sn);
%claims_post(days_start=91,days_aft_index=182,yrs=1998_2016,source=op);
%claims_post(days_start=91,days_aft_index=182,yrs=1998_2016,source=pb);
%claims_post(days_start=91,days_aft_index=182,yrs=1998_2016,source=hh);
%claims_post(days_start=91,days_aft_index=182,yrs=1998_2016,source=hs);
%claims_post(days_start=91,days_aft_index=182,yrs=1998_2016,source=dm);

/*Pre Q3*/
%claims_post(days_start=182,days_aft_index=273,yrs=1998_2016,source=ip);
%claims_post(days_start=182,days_aft_index=273,yrs=1998_2016,source=mp);
%claims_post(days_start=182,days_aft_index=273,yrs=1998_2016,source=sn);
%claims_post(days_start=182,days_aft_index=273,yrs=1998_2016,source=op);
%claims_post(days_start=182,days_aft_index=273,yrs=1998_2016,source=pb);
%claims_post(days_start=182,days_aft_index=273,yrs=1998_2016,source=hh);
%claims_post(days_start=182,days_aft_index=273,yrs=1998_2016,source=hs);
%claims_post(days_start=182,days_aft_index=273,yrs=1998_2016,source=dm);

/*Pre Q4*/
%claims_post(days_start=273,days_aft_index=365,yrs=1998_2016,source=ip);
%claims_post(days_start=273,days_aft_index=365,yrs=1998_2016,source=mp);
%claims_post(days_start=273,days_aft_index=365,yrs=1998_2016,source=sn);
%claims_post(days_start=273,days_aft_index=365,yrs=1998_2016,source=op);
%claims_post(days_start=273,days_aft_index=365,yrs=1998_2016,source=pb);
%claims_post(days_start=273,days_aft_index=365,yrs=1998_2016,source=hh);
%claims_post(days_start=273,days_aft_index=365,yrs=1998_2016,source=hs);
%claims_post(days_start=273,days_aft_index=365,yrs=1998_2016,source=dm);

/*Pre Q5*/
%claims_post(days_start=365,days_aft_index=456,yrs=1998_2016,source=ip);
%claims_post(days_start=365,days_aft_index=456,yrs=1998_2016,source=mp);
%claims_post(days_start=365,days_aft_index=456,yrs=1998_2016,source=sn);
%claims_post(days_start=365,days_aft_index=456,yrs=1998_2016,source=op);
%claims_post(days_start=365,days_aft_index=456,yrs=1998_2016,source=pb);
%claims_post(days_start=365,days_aft_index=456,yrs=1998_2016,source=hh);
%claims_post(days_start=365,days_aft_index=456,yrs=1998_2016,source=hs);
%claims_post(days_start=365,days_aft_index=456,yrs=1998_2016,source=dm);

/*Pre Q6*/
%claims_post(days_start=456,days_aft_index=547,yrs=1998_2016,source=ip);
%claims_post(days_start=456,days_aft_index=547,yrs=1998_2016,source=mp);
%claims_post(days_start=456,days_aft_index=547,yrs=1998_2016,source=sn);
%claims_post(days_start=456,days_aft_index=547,yrs=1998_2016,source=op);
%claims_post(days_start=456,days_aft_index=547,yrs=1998_2016,source=pb);
%claims_post(days_start=456,days_aft_index=547,yrs=1998_2016,source=hh);
%claims_post(days_start=456,days_aft_index=547,yrs=1998_2016,source=hs);
%claims_post(days_start=456,days_aft_index=547,yrs=1998_2016,source=dm);

/*Pre Q7*/
%claims_post(days_start=547,days_aft_index=638,yrs=1998_2016,source=ip);
%claims_post(days_start=547,days_aft_index=638,yrs=1998_2016,source=mp);
%claims_post(days_start=547,days_aft_index=638,yrs=1998_2016,source=sn);
%claims_post(days_start=547,days_aft_index=638,yrs=1998_2016,source=op);
%claims_post(days_start=547,days_aft_index=638,yrs=1998_2016,source=pb);
%claims_post(days_start=547,days_aft_index=638,yrs=1998_2016,source=hh);
%claims_post(days_start=547,days_aft_index=638,yrs=1998_2016,source=hs);
%claims_post(days_start=547,days_aft_index=638,yrs=1998_2016,source=dm);

/*Pre Q8*/
%claims_post(days_start=638,days_aft_index=730,yrs=1998_2016,source=ip);
%claims_post(days_start=638,days_aft_index=730,yrs=1998_2016,source=mp);
%claims_post(days_start=638,days_aft_index=730,yrs=1998_2016,source=sn);
%claims_post(days_start=638,days_aft_index=730,yrs=1998_2016,source=op);
%claims_post(days_start=638,days_aft_index=730,yrs=1998_2016,source=pb);
%claims_post(days_start=638,days_aft_index=730,yrs=1998_2016,source=hh);
%claims_post(days_start=638,days_aft_index=730,yrs=1998_2016,source=hs);
%claims_post(days_start=638,days_aft_index=730,yrs=1998_2016,source=dm);



/****************************************************************************/
/*prior to saving the permanent claims datasets, drop unneeded variables
this speeds up runnnig code later on*/

%macro ip_drop(days_aft_index=);
data proj_int.ip_meet_&days_aft_index.p(keep=bid_hrs_22 index_year index_date admit_date disch_date 
 icarecnt CRNRYDAY type_adm ER_AMT AD_DGNS DGNS_CD01-DGNS_CD25 PRCDR_CD01-PRCDR_CD25 
 PRCDR_DT01-PRCDR_DT25);
set mp_meet_&days_aft_index.p;
  if sslssnf~="N";
run;
%mend ip_drop;

%macro sn_drop(days_aft_index=);
data proj_int.sn_meet_&days_aft_index.p(keep=pmt_amt bid_hrs_22 index_year index_date admit_date disch_date 
 AD_DGNS DGNS_CD01-DGNS_CD25 PRCDR_CD01-PRCDR_CD25 
 PRCDR_DT01-PRCDR_DT25);
set mp_meet_&days_aft_index.p;
if sslssnf="N";
run;
%mend sn_drop;


/*hh*/
%macro hh_drop(days_aft_index=);
data proj_int.hh_meet_&days_aft_index.p;
set hh_meet_&days_aft_index.p(keep=pmt_amt bid_hrs_22 index_year index_date admit_date pdgns_cd dgnscd01-dgnscd25 );
run;
%mend hh_drop;

/*hs*/
%macro hs_drop(days_aft_index=);
data proj_int.hs_meet_&days_aft_index.p;
set hs_meet_&days_aft_index.p(keep=pmt_amt bid_hrs_22 index_year index_date admit_date pdgns_cd dgnscd01-dgnscd25);
run;
%mend hs_drop;

/*dme*/
%macro dm_drop(days_aft_index=);
data proj_int.dm_meet_&days_aft_index.p;
set dm_meet_&days_aft_index.p(keep=pmt_amt bid_hrs_22 index_year index_date admit_date
pdgns_cd dgnscd01-dgnscd12 );
run;
%mend dm_drop;

/*op*/
%macro op_drop(days_aft_index=);
data proj_int.op_meet_&days_aft_index.p(keep=pmt_amt bid_hrs_22 index_year index_date admit_date disch_date
pdgns_cd dgnscd01-dgnscd25 erdaycnt);
set op_meet_&days_aft_index.p;
erdaycnt=0;
array list rvcntr01-rvcntr45;
do over list;
if list>=450 and list<=459 then erdaycnt=1;
if list=981 then erdaycnt=1;
end;

run;
%mend op_drop;

/*carrier*/
%macro pb_drop(days_aft_index=);
data proj_int.pb_meet_&days_aft_index.p;
set pb_meet_&days_aft_index.p(keep=pmt_amt bid_hrs_22 index_year index_date admit_date disch_date
pdgns_cd dgnscd01-dgnscd12 );
run;
%mend pb_drop;

%mp_drop(days_aft_index=91);
%mp_drop(days_aft_index=182);
%mp_drop(days_aft_index=273);
%mp_drop(days_aft_index=365);
%mp_drop(days_aft_index=456);
%mp_drop(days_aft_index=547);
%mp_drop(days_aft_index=638);
%mp_drop(days_aft_index=730);

%hh_drop(days_aft_index=91);
%hh_drop(days_aft_index=182);
%hh_drop(days_aft_index=273);
%hh_drop(days_aft_index=365);
%hh_drop(days_aft_index=456);
%hh_drop(days_aft_index=547);
%hh_drop(days_aft_index=638);
%hh_drop(days_aft_index=730);

%hs_drop(days_aft_index=91);
%hs_drop(days_aft_index=182);
%hs_drop(days_aft_index=273);
%hs_drop(days_aft_index=365);
%hs_drop(days_aft_index=456);
%hs_drop(days_aft_index=547);
%hs_drop(days_aft_index=638);
%hs_drop(days_aft_index=730);

%dm_drop(days_aft_index=91);
%dm_drop(days_aft_index=182);
%dm_drop(days_aft_index=273);
%dm_drop(days_aft_index=365);
%dm_drop(days_aft_index=456);
%dm_drop(days_aft_index=547);
%dm_drop(days_aft_index=638);
%dm_drop(days_aft_index=730);

%op_drop(days_aft_index=91);
%op_drop(days_aft_index=182);
%op_drop(days_aft_index=273);
%op_drop(days_aft_index=365);
%op_drop(days_aft_index=456);
%op_drop(days_aft_index=547);
%op_drop(days_aft_index=638);
%op_drop(days_aft_index=730);

%pb_drop(days_aft_index=91);
%pb_drop(days_aft_index=182);
%pb_drop(days_aft_index=273);
%pb_drop(days_aft_index=365);
%pb_drop(days_aft_index=456);
%pb_drop(days_aft_index=547);
%pb_drop(days_aft_index=638);
%pb_drop(days_aft_index=730);

%ip_drop(days_aft_index=91);
%ip_drop(days_aft_index=182);
%ip_drop(days_aft_index=273);
%ip_drop(days_aft_index=365);
%ip_drop(days_aft_index=456);
%ip_drop(days_aft_index=547);
%ip_drop(days_aft_index=638);
%ip_drop(days_aft_index=730);

%sn_drop(days_aft_index=91);
%sn_drop(days_aft_index=182);
%sn_drop(days_aft_index=273);
%sn_drop(days_aft_index=365);
%sn_drop(days_aft_index=456);
%sn_drop(days_aft_index=547);
%sn_drop(days_aft_index=638);
%sn_drop(days_aft_index=730);




H="pre utilization measures"
/*These additional variables are just added to the dataset with the
elixhauser and cc's 1 year preceeding the interview, can add them
later when required to get the 2 year look-back dataset*/

/****************************************************************************/
/*Get indicator of any hospital admission 6 and 12 months pre-core interview*/
/****************************************************************************/

%macro admissions(days=,suffix=,day_start=);

/*pull list of ip claims from all medpar claims x days pre-interview*/
data ip_meet_&days.;
set proj_int.ip_meet_&days.;
run;
data ip_2_&days.;
set ip_meet_&days.;
if icarecnt=. then icarecnt=0; /*medpar intensive care day count*/
if CRNRYDAY=. then CRNRYDAY=0; /*medpar coronary day count*/
icu_days=icarecnt+CRNRYDAY;
em_urgent_admit=0; /*Urgent , emergent admissions from admission type*/
if type_adm in (1,2) then em_urgent_admit=1;
em_admit=0;
if type_adm=1 then em_admit=1;
urgent_admit=0;
if type_adm=2 then urgent_admit=1;
elect_admit=0;
if type_adm=3 then elect_admit=1;
ind_ed_charge=0; /*ED charges as another indicator of ED use*/
if ER_AMT>0 & ER_AMT~=. then ind_ed_charge=1;
if ER_AMT=0 | ER_AMT=. then ind_ed_charge=0;

/*truncate stays where the admit is more than x days before interview
or discharge is after the interview date so can get accurate LOS*/
if index_date-admit_date>&days. then do;
	admit_date=index_date-&days.;
	admit_trunc=1;
	end;
if index_date<disch_date then do;
	disch_date=index_date;
	disch_trunc=1;	
	end;
adj_los=disch_date-admit_date;
if disch_date-admit_date=0 then adj_los=1;
run;

proc sort data=ip_2_&days.;
by bid_hrs_22 index_year;
run;

proc sql;
create table ip_3_&days. as select distinct bid_hrs_22, index_year,
/*total ICU days*/
sum(icu_days) as icu_days label="total icu days",
/*count of IP admissions, all types*/
count(*) as n_ip_admit label="total n of hospital admit",
/*total Hospital LOS*/
sum(adj_los) as n_hospd label="total hospital days",
/*ICU stays*/
count(case when icu_days>0 then 1 else . end) as n_icu_stays 
	label="ICU stays",
/*count urgent or emergency admissions*/
count(case when em_urgent_admit=1 then em_urgent_admit else . end) as n_em_urgent_admit
	label="total n of urgent/emergent hospital admit ",
/*count of emergency admissions, from admission type code*/
count(case when em_admit=1 then em_admit else . end) as n_em_admit 
	label="total n of emergent hospital admit",
/*count of urgent admissions, from admission type code*/
count(case when urgent_admit=1 then urgent_admit else . end) as n_urgent_admit 
	label="total n of urgent hospital admit",
/*count of elective admissions, from admission type code*/
count(case when elect_admit=1 then elect_admit else . end) as n_elect_admit
	label="total n of elective hospital admit",
/*count of admissions with any ED charges*/
count(case when ind_ed_charge=1 then ind_ed_charge else . end) as n_ED_ip 
	label="total n of ED visits with subsequent admit"

 from ip_2_&days. group by bid_hrs_22, index_year;
quit;

data ip_4_&days.;
set ip_3_&days.;
if icu_days>n_hospd then icu_days=n_hospd;
run;

data elective_1_&days.;
set ip_2_&days.;
if elect_admit=1;
run;

proc sort data=ip_3_&days. nodupkey;
by bid_hrs_22 index_year;
run;

data ip1_&days;
set ip_3_&days.;
run;


/*Dataset just contains obs with ffs mc 1yr and age 65+
So if missing, set var to 0*/
 data ip_&days. ;
 set ip1_&days. ;
 array list 
	icu_days n_ip_admit n_hospd n_em_urgent_admit
	n_em_admit n_urgent_admit n_elect_admit n_ED_ip;
 do over list;
 if list=. then list=0;
 end;

 if n_ip_admit=0 then ind_hosp_adm=0;
 if n_ip_admit>0 & n_ip_admit~=. then ind_hosp_adm=1;
 label ind_hosp_adm="Indicator for any hospital admission";

 if n_em_urgent_admit=0 then ind_em_ur_adm=0;
 if n_em_urgent_admit>0 & n_em_urgent_admit~=. then ind_em_ur_adm=1;
 label ind_em_ur_adm="Ind any urgent or emergent hospital admission";

 if n_em_admit=0 then ind_em_adm=0;
 if n_em_admit>0 & n_em_admit~=. then ind_em_adm=1;
 label ind_em_adm="Ind any emergency hospital admission";

 if n_urgent_admit=0 then ind_ur_adm=0;
 if n_urgent_admit>0 & n_urgent_admit~=. then ind_ur_adm=1;
 label ind_ur_adm="Ind any urgent hospital admission";

 if n_elect_admit =0 then ind_elect_adm=0;
 if n_elect_admit >0 & n_elect_admit ~=. then ind_elect_adm=1;
 label ind_elect_adm="Ind any elective hospital admission";

 if (n_ip_admit - n_elect_admit)=0 then ind_nonelect_adm=0;
 if (n_ip_admit - n_elect_admit)>0 & n_elect_admit~=. then ind_nonelect_adm=1;
 label ind_nonelect_adm="Ind any non-elective hospital admission";

 n_nonelect_adm=(n_ip_admit - n_elect_admit);
 label n_nonelect_adm="total n non-elective ip admit";

 if n_ED_ip=0 then ind_ED_adm=0;
 if n_ED_ip>0 & n_ED_ip~=. then ind_ED_adm=1;
 label ind_ED_adm="Ind ED use with hospital admission, from charges";

run;


proc freq;
table icu_days n_ip_admit n_hospd ind_hosp_adm n_em_urgent_admit ind_em_ur_adm
	ind_em_adm ind_ur_adm ind_nonelect_adm n_nonelect_adm n_ED_ip ind_ED_adm 
	ind_em_adm*ind_ED_adm /missprint;
run;




/****************************************************************************/
/****************************************************************************/
/*Get SNF days, indicator for 12 months preceding the interview*/
/****************************************************************************/
/****************************************************************************/

/*pull list of snf claims from all medpar claims 12 months pre-interview*/
data snf_meet_&days.;
set proj_int.sn_meet_&days.;
run;

proc sort data=snf_meet_&days.;
by bid_hrs_22 admit_date;
run;

data snf_meet_&days._1a;
set snf_meet_&days.;
format admit_date date9. disch_date date9.;
run;

/*3 claim windows are present:
1. SNF stays fully within the 1 year before interview
2. Stays that begin before 1 year pre-core but end within 1 year pre-core
3. Stays that begin within 1 year of core but end after core ivw
4. Stays that begin before 1 year and end after interview, LOS=365!
Get claims that meet 1 *1797*/
proc sql;
create table snf_meet1_pre_&days. as select *
from snf_meet_&days._1a
where (index_date - admit_date)<&days. & (index_date - disch_date)>=&day_start.; 
quit;


/*meet time window 2 *152*/
proc sql;
create table snf_meet2_pre_&days. as select *
from snf_meet_&days._1a
where (index_date - admit_date)>=&days. & (index_date - disch_date)>=&day_start.; 
quit;

/*For these claims that start > 1 year before core, truncate start date so 
only count LOS days w/i 1 year
create indicator variable that claim start date is truncated*/
data snf_meet2_pre_&days._1;
set snf_meet2_pre_&days.;
admit_date = index_date-&days.;
snf_admit_date_mod = 1;
label snf_admit_date_mod = "Admit date mod; at 12 mo from ivw date";
run;

proc freq;
table snf_admit_date_mod ;
run;

/*meet time window 3 *135 */
proc sql;
create table snf_meet3_pre_&days. as select *
from snf_meet_&days._1a
where (index_date - admit_date)<&days. & (index_date-disch_date)<&day_start.; 
quit;

/*For these claims that end after core, truncate end date so 
only count LOS days 1 year before the core
create indicator variable that claim end date is truncated*/
data snf_meet3_pre_&days._1;
set snf_meet3_pre_&days.;
disch_date = index_date-&day_start.;
snf_disch_date_mod = 1;
label snf_disch_date_mod = "Disch date mod; at ivw date";
run;

proc freq;
table snf_disch_date_mod ;
run;

/*meet 4 , overlap both start and end dates n=7*/
proc sql;
create table snf_meet4_pre_&days. as select *
from snf_meet_&days._1a
where (index_date - admit_date)>=&days. & (index_date - disch_date)<&day_start.; 
quit;

/*truncate both start and end dates so just count 1 year pre interview*/
data snf_meet4_pre_&days._1;
set snf_meet4_pre_&days.;
disch_date = index_date+&day_start.;
snf_disch_date_mod = 1;
label snf_disch_date_mod = "Disch date mod; at ivw date";
admit_date = index_date-&days.;
snf_admit_date_mod = 1;
label snf_admit_date_mod = "Admit date mod; at 12 mo from ivw date";
run;

proc freq;
table snf_disch_date_mod snf_admit_date_mod;
run;


data snf_meet_pre_&days.;
set snf_meet1_pre_&days. snf_meet2_pre_&days._1 snf_meet3_pre_&days._1 snf_meet4_pre_&days._1;
run;

proc freq;
table snf_admit_date_mod snf_disch_date_mod ;
run;

/*save final files to project int_data directory*/
data proj_int.snf_meet_pre_&days. ;
set  snf_meet_pre_&days.;
run;


/*************************************************************/
/*calculate total number of days spent in SNF by BID*/
/*************************************************************/

data pre_snf_days_1_&days.;
set proj_int.snf_meet_pre_&days.;
calc_snf_LOS=disch_date-admit_date;
if calc_snf_LOS=0 then calc_snf_LOS=1;
run;

proc sort data=pre_snf_days_1_&days.;
by bid_hrs_22 index_date admit_date;
run;

proc sql;
create table snf_days_pre_&days. as select distinct bid_hrs_22,index_year,
sum(calc_snf_LOS)
	as n_snf_days
	from pre_snf_days_1_&days. group by bid_hrs_22,index_year;
quit;


/*merge into full ffs 1yr, age 65+ dataset*/
proc sort data=snf_days_pre_&days. nodupkey;
by bid_hrs_22 index_year;
run;



 data snf_&days. ;
 set snf_days_pre_&days. ;
 array list n_snf_days;
 do over list;
 if list=. then list=0;
 end; 

if n_snf_days=0 then ind_snf_use=0;
 if n_snf_days>0 & n_snf_days~=. then ind_snf_use=1;
 label ind_snf_use="Indicator for any SNF stay within quarter";
 label n_snf_days="SNF Days within quarter";

run;


proc freq data=snf_&days.; tables n_snf_days / missprint; run;


/****************************************************************************/
/****************************************************************************/
/*Get indicator of ESRD codes from the denominator file the year of the interview*/
/****************************************************************************/
/****************************************************************************/
data dn_2000_20122;
set medi.basf_1998_2016;
year=year(start_dt);
bene_esrd_ind='0';
if substr(ms_cd,2,1)='1' then bene_esrd_ind='Y';
run;

/*pull ESRD status variable from dn file
for the core interview years*/
proc sql;
create table esrd1 as select
a.*,b.Bene_ESRD_IND from 
index a left join
dn_2000_20122 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and a.index_year=b.year;
quit;

proc freq;
table bene_esrd_ind /missprint;
run;

data esrd;
set esrd1 ;
if bene_esrd_ind='Y' then esrd_ind_n=1;
if bene_esrd_ind='0' then esrd_ind_n=0;
label esrd_ind_n="ESRD indicator from claims denominator file";
drop bene_esrd_ind;
run;

proc freq;
table esrd_ind_n /missprint;
run;

/****************************************************************************/
/*Get indicator of Home 02 use 12 months pre interview from DME claims*/
/****************************************************************************/
data oxygen1(keep=bid_hrs_22 index_year oxygen);
set proj_int.dm_meet_&days.;
oxygen=0;
array list betos01 : betos13;
do over list;
if list='D1C' then oxygen=1;
end;
if oxygen=1;
run;

proc sort data=oxygen1 out=oxygen_&days. nodupkey;
by bid_hrs_22 index_year;
run;

data ed_op_1(keep=bid_hrs_22 admit_date disch_date index_date index_year ed_op obs_stay);
set proj_int.op_meet_&days.;
ed_op=0;
obs_stay=0;
array list rvcntr01-rvcntr45;
do over list;
if list>=450 and list<=459 then ed_op=1;
if list=981 then ed_op=1;
if list=0762 then obs_stay=1;
end;
run;

proc freq;
table ed_op;
run;

proc sql;
create table ed_op_2 as select distinct bid_hrs_22,index_year,
count(case when ed_op=1 then ed_op else . end)
	as n_ed_op_visits,
sum(obs_stay) as n_obs_stay,
max(obs_stay) as obs_stay
	from ed_op_1 group by bid_hrs_22,index_year;
quit;




proc sort data=ed_op_2 nodupkey;
by bid_hrs_22 index_year;
run;


data ed_&days. ;
set ed_op_2;
if n_ed_op_visits=. then n_ed_op_visits=0;
label n_ed_op_visits="Count ED OP visits within the quarter";

if n_ed_op_visits=0 then ind_ed_op=0;
if n_ed_op_visits>0 & n_ed_op_visits~=. then ind_ed_op=1;
label ind_ed_op="Indicator any ED OP visits within the quarter";

if n_obs_stay=. then n_obs_stay=0;
label n_obs_stay="Number obs stays within the quarter";

if n_obs_stay=. then obs_stay=0;
label obs_stay="Indicator any obs stay within the quarter";
run;

proc freq; tables n_ed_op_visits n_obs_stay /missprint; run;

data hh_&days.(keep=bid_hrs_22 index_year ind_hh);
set proj_int.hh_meet_&days.;
ind_hh=1;
run;

proc sort data=ip_&days. out=ip_&days. nodupkey; by bid_hrs_22 index_year; run;
proc sort data=snf_&days. out=snf_&days. nodupkey; by bid_hrs_22 index_year; run;
proc sort data=esrd out=esrd nodupkey; by bid_hrs_22 index_year; run;
proc sort data=oxygen_&days. out=oxygen_&days. nodupkey; by bid_hrs_22 index_year; run;
proc sort data=ed_&days. out=ed_&days. nodupkey; by bid_hrs_22 index_year; run;
proc sort data=hh_&days. out=hh_&days. nodupkey; by bid_hrs_22 index_year; run;


/*housecalls

housecall codes (from Bruce Kinosian from CMS on 8/16/17) are 99341-99350
and dom care codes are 99324-99328 and 99334-99337

POS codes are 12 13 14

*/


proc sql;
create table pb_meet_&days.d_bef as select * from
index a
left join proj_int.pb_meet_&days. b
on a.bid_hrs_22=b.bid_hrs_22 and admit_date<=a.index_date<=admit_date+&days.;
quit;


data hc;
set pb_meet_&days.d_bef;
array this hcpcscd01-hcpcscd13;
code=0;
do over this;
if in(this,"99324","99325","99326","99327","99328","99334","99335","99336","99337", 
	"99341","99342","99343","99344","99345","99346","99347","99348","99349","99350") and code=0 
	then code=1;
end;
array that pos1-pos13;
place=0;
do over that;
if in(that,"12","13","14") and place=0 then place=1;
end;
housecall=place=1 and code=1;
run;

proc sql; 
create table hc_n&days. as select distinct bid_hrs_22, index_date,
sum(housecall) as n_housecalls
from hc
group by bid_hrs_22, index_date;
quit;


/*housecalls

housecall codes (from Bruce Kinosian from CMS on 8/16/17) are 99341-99350
and dom care codes are 99324-99328 and 99334-99337

POS codes are 12 13 14

*/



proc sql;
create table pb_meet_&days.d_aft as select * from
index a
left join proj_int.pb_meet_&days.p b
on a.bid_hrs_22=b.bid_hrs_22 and admit_date>=a.index_date>=admit_date-&days;
quit;


data hc;
set pb_meet_&days.d_aft;
array this hcpcscd01-hcpcscd13;
code=0;
do over this;
if in(this,"99324","99325","99326","99327","99328","99334","99335","99336","99337", 
	"99341","99342","99343","99344","99345","99346","99347","99348","99349","99350") and code=0 
	then code=1;
end;
array that pos1-pos13;
place=0;
do over that;
if in(that,"12","13","14") and place=0 then place=1;
end;
housecall=place=1 and code=1;
run;

proc sql; 
create table hc_p&days. as select distinct bid_hrs_22, index_date,
sum(housecall) as n_housecalls
from hc group by bid_hrs_22, index_date;
quit;


proc sql;
create table pb_&days. as select * from
index a
left join 
hc_n&days. b
on a.bid_hrs_22=b.bid_hrs_22 and a.index_date=b.index_date
left join
hc_p&days. c
on a.bid_hrs_22=c.bid_hrs_22 and a.index_date=c.index_date;
quit;

proc sql;
create table proj_int.utilization_pre_&days. as select * 
from index a 
left join
ip_&days. b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22)) and a.index_year=b.index_year
left join 
snf_&days. c
on trim(left(a.bid_hrs_22))=trim(left(c.bid_hrs_22)) and a.index_year=c.index_year
left join 
esrd d
on trim(left(a.bid_hrs_22))=trim(left(d.bid_hrs_22)) and a.index_year=d.index_year
left join
oxygen_&days. e
on trim(left(a.bid_hrs_22))=trim(left(e.bid_hrs_22)) and a.index_year=e.index_year
left join 
ed_&days. f
on trim(left(a.bid_hrs_22))=trim(left(f.bid_hrs_22)) and a.index_year=f.index_year
left join
hh_&days. g
on trim(left(a.bid_hrs_22))=trim(left(g.bid_hrs_22)) and a.index_year=g.index_year
left join 
pb_&days. h
on trim(left(a.bid_hrs_22))=trim(left(h.bid_hrs_22)) and a.index_year=h.index_year;
quit;

proc contents data=proj_int.utilization_pre_&days.; 
run;
%mend;

%admissions(days=91,suffix=nq1,day_start=0);
%admissions(days=182,suffix=nq2,day_start=91);
%admissions(days=273,suffix=nq3,day_start=182);
%admissions(days=365,suffix=nq4,day_start=273);
%admissions(days=456,suffix=nq5,day_start=365);
%admissions(days=547,suffix=nq6,day_start=456);
%admissions(days=638,suffix=nq7,day_start=547);
%admissions(days=730,suffix=nq8,day_start=638);


H="post utilization measures"
/*These additional variables are just added to the dataset with the
elixhauser and cc's 1 year preceeding the interview, can add them
later when required to get the 2 year look-back dataset*/

/****************************************************************************/
/*Get indicator of any hospital admission 6 and 12 months post-core interview*/
/****************************************************************************/

%macro admissions(days=,suffix=,day_start=);

/*pull list of ip claims from all medpar claims x days post-interview*/
data ip_meet_&days.;
set proj_int.ip_meet_&days.p;
run;
data ip_2_&days.;
set ip_meet_&days.;
if icarecnt=. then icarecnt=0; /*medpar intensive care day count*/
if CRNRYDAY=. then CRNRYDAY=0; /*medpar coronary day count*/
icu_days=icarecnt+CRNRYDAY;
em_urgent_admit=0; /*Urgent , emergent admissions from admission type*/
if type_adm in (1,2) then em_urgent_admit=1;
em_admit=0;
if type_adm=1 then em_admit=1;
urgent_admit=0;
if type_adm=2 then urgent_admit=1;
elect_admit=0;
if type_adm=3 then elect_admit=1;
ind_ed_charge=0; /*ED charges as another indicator of ED use*/
if ER_AMT>0 & ER_AMT~=. then ind_ed_charge=1;
if ER_AMT=0 | ER_AMT=. then ind_ed_charge=0;

/*truncate stays where the admit is more than x days before interview
or discharge is after the interview date so can get accurate LOS*/
if admit_date-index_date>&days. then do;
	admit_date=index_date+&days.;
	admit_trunc=1;
	end;
if index_date>disch_date then do;
	disch_date=index_date;
	disch_trunc=1;	
	end;
adj_los=disch_date-admit_date;
if disch_date-admit_date=0 then adj_los=1;
run;

proc sort data=ip_2_&days.;
by bid_hrs_22 index_year;
run;

proc sql;
create table ip_3_&days. as select distinct bid_hrs_22, index_year,
/*total ICU days*/
sum(icu_days) as icu_days label="total icu days",
/*count of IP admissions, all types*/
count(*) as n_ip_admit label="total n of hospital admit",
/*total Hospital LOS*/
sum(adj_los) as n_hospd label="total hospital days",
/*ICU stays*/
count(case when icu_days>0 then 1 else . end) as n_icu_stays 
	label="ICU stays",
/*count urgent or emergency admissions*/
count(case when em_urgent_admit=1 then em_urgent_admit else . end) as n_em_urgent_admit
	label="total n of urgent/emergent hospital admit ",
/*count of emergency admissions, from admission type code*/
count(case when em_admit=1 then em_admit else . end) as n_em_admit 
	label="total n of emergent hospital admit",
/*count of urgent admissions, from admission type code*/
count(case when urgent_admit=1 then urgent_admit else . end) as n_urgent_admit 
	label="total n of urgent hospital admit",
/*count of elective admissions, from admission type code*/
count(case when elect_admit=1 then elect_admit else . end) as n_elect_admit
	label="total n of elective hospital admit",
/*count of admissions with any ED charges*/
count(case when ind_ed_charge=1 then ind_ed_charge else . end) as n_ED_ip 
	label="total n of ED visits with subsequent admit"

 from ip_2_&days. group by bid_hrs_22, index_year;
quit;

data ip_4_&days.;
set ip_3_&days.;
if icu_days>n_hospd then icu_days=n_hospd;
run;

data elective_1_&days.;
set ip_2_&days.;
if elect_admit=1;
run;

proc sort data=ip_3_&days. nodupkey;
by bid_hrs_22 index_year;
run;

data ip1_&days;
set ip_3_&days.;
run;


/*Dataset just contains obs with ffs mc 1yr and age 65+
So if missing, set var to 0*/
 data ip_&days.p ;
 set ip1_&days. ;
 array list 
	icu_days n_ip_admit n_hospd n_em_urgent_admit
	n_em_admit n_urgent_admit n_elect_admit n_ED_ip;
 do over list;
 if list=. then list=0;
 end;

 if n_ip_admit=0 then ind_hosp_adm=0;
 if n_ip_admit>0 & n_ip_admit~=. then ind_hosp_adm=1;
 label ind_hosp_adm="Indicator for any hospital admission";

 if n_em_urgent_admit=0 then ind_em_ur_adm=0;
 if n_em_urgent_admit>0 & n_em_urgent_admit~=. then ind_em_ur_adm=1;
 label ind_em_ur_adm="Ind any urgent or emergent hospital admission";

 if n_em_admit=0 then ind_em_adm=0;
 if n_em_admit>0 & n_em_admit~=. then ind_em_adm=1;
 label ind_em_adm="Ind any emergency hospital admission";

 if n_urgent_admit=0 then ind_ur_adm=0;
 if n_urgent_admit>0 & n_urgent_admit~=. then ind_ur_adm=1;
 label ind_ur_adm="Ind any urgent hospital admission";

 if n_elect_admit =0 then ind_elect_adm=0;
 if n_elect_admit >0 & n_elect_admit ~=. then ind_elect_adm=1;
 label ind_elect_adm="Ind any elective hospital admission";

 if (n_ip_admit - n_elect_admit)=0 then ind_nonelect_adm=0;
 if (n_ip_admit - n_elect_admit)>0 & n_elect_admit~=. then ind_nonelect_adm=1;
 label ind_nonelect_adm="Ind any non-elective hospital admission";

 n_nonelect_adm=(n_ip_admit - n_elect_admit);
 label n_nonelect_adm="total n non-elective ip admit";

 if n_ED_ip=0 then ind_ED_adm=0;
 if n_ED_ip>0 & n_ED_ip~=. then ind_ED_adm=1;
 label ind_ED_adm="Ind ED use with hospital admission, from charges";

run;


proc freq;
table icu_days n_ip_admit n_hospd ind_hosp_adm n_em_urgent_admit ind_em_ur_adm
	ind_em_adm ind_ur_adm ind_nonelect_adm n_nonelect_adm n_ED_ip ind_ED_adm 
	ind_em_adm*ind_ED_adm /missprint;
run;




/****************************************************************************/
/****************************************************************************/
/*Get SNF days, indicator for 12 months preceding the interview*/
/****************************************************************************/
/****************************************************************************/

/*pull list of snf claims from all medpar claims 12 months post-interview*/
data snf_meet_&days.;
set proj_int.sn_meet_&days.p;
run;

proc sort data=snf_meet_&days;
by bid_hrs_22 admit_date;
run;

data snf_meet_&days._1a;
set snf_meet_&days;
format admit_date date9. disch_date date9.;
run;

/*3 claim windows are postsent:
1. SNF stays fully within the 1 year before interview
2. Stays that begin before 1 year post-core but end within 1 year post-core
3. Stays that begin within 1 year of core but end after core ivw
4. Stays that begin before 1 year and end after interview, LOS=365!
Get claims that meet 1 *1797*/
proc sql;
create table snf_meet1_post_&days. as select *
from snf_meet_&days._1a
where (admit_date - index_date)<&days. & (disch_date - index_date)>=&day_start.; 
quit;


/*meet time window 2 *152*/
proc sql;
create table snf_meet2_post_&days. as select *
from snf_meet_&days._1a
where (admit_date - index_date)>=&days. & (disch_date - index_date)>=&day_start.; 
quit;

/*For these claims that start > 1 year before core, truncate start date so 
only count LOS days w/i 1 year
create indicator variable that claim start date is truncated*/
data snf_meet2_post_&days._1;
set snf_meet2_post_&days.;
admit_date = index_date+&days.;
snf_admit_date_mod = 1;
label snf_admit_date_mod = "Admit date mod";
run;

proc freq;
table snf_admit_date_mod ;
run;

/*meet time window 3 *135 */
proc sql;
create table snf_meet3_post_&days. as select *
from snf_meet_&days._1a
where (admit_date - index_date)<&days. & (disch_date - index_date)<&day_start.; 
quit;

/*For these claims that end after core, truncate end date so 
only count LOS days 1 year before the core
create indicator variable that claim end date is truncated*/
data snf_meet3_post_&days._1;
set snf_meet3_post_&days.;
disch_date = index_date+&day_start.;
snf_disch_date_mod = 1;
label snf_disch_date_mod = "Disch date mod; at ivw date";
run;

proc freq;
table snf_disch_date_mod ;
run;

/*meet 4 , overlap both start and end dates n=7*/
proc sql;
create table snf_meet4_post_&days. as select *
from snf_meet_&days._1a
where (admit_date - index_date)>=&days. & (disch_date - index_date)<&day_start.; 
quit;

/*truncate both start and end dates so just count 1 year post interview*/
data snf_meet4_post_&days._1;
set snf_meet4_post_&days.;
disch_date = index_date-&day_start.;
snf_disch_date_mod = 1;
label snf_disch_date_mod = "Disch date mod; at ivw date";
admit_date = index_date+&days.;
snf_admit_date_mod = 1;
label snf_admit_date_mod = "Admit date mod; at 12 mo from ivw date";
run;

proc freq;
table snf_disch_date_mod snf_admit_date_mod;
run;


data snf_meet_post_&days.;
set snf_meet1_post_&days. snf_meet2_post_&days._1 snf_meet3_post_&days._1 snf_meet4_post_&days._1;
run;

proc freq;
table snf_admit_date_mod snf_disch_date_mod ;
run;

/*save final files to project int_data directory*/
data proj_int.snf_meet_post_&days.p ;
set  snf_meet_post_&days.;
run;


/*************************************************************/
/*calculate total number of days spent in SNF by BID*/
/*************************************************************/

data post_snf_days_1_&days.;
set proj_int.snf_meet_post_&days.p;
calc_snf_LOS=disch_date-admit_date;
if calc_snf_LOS=0 then calc_snf_LOS=1;
run;

proc sort data=post_snf_days_1_&days.;
by bid_hrs_22 index_date admit_date;
run;

proc sql;
create table snf_days_post_&days. as select distinct bid_hrs_22,index_year,
sum(calc_snf_LOS)
	as n_snf_days
	from post_snf_days_1_&days. group by bid_hrs_22,index_year;
quit;


/*merge into full ffs 1yr, age 65+ dataset*/
proc sort data=snf_days_post_&days. nodupkey;
by bid_hrs_22 index_year;
run;



 data snf_&days.p ;
 set snf_days_post_&days. ;
 array list n_snf_days;
 do over list;
 if list=. then list=0;
 end; 

if n_snf_days=0 then ind_snf_use=0;
 if n_snf_days>0 & n_snf_days~=. then ind_snf_use=1;
 label ind_snf_use="Indicator for any SNF stay within quarter";
 label n_snf_days="SNF Days within quarter";

run;


proc freq data=snf_&days.p; tables n_snf_days / missprint; run;


/****************************************************************************/
/****************************************************************************/
/*Get indicator of ESRD codes from the denominator file the year of the interview*/
/****************************************************************************/
/****************************************************************************/
data dn_2000_20122;
set medi.basf_1998_2016;
year=year(start_dt);
bene_esrd_ind='0';
if substr(ms_cd,2,1)='1' then bene_esrd_ind='Y';
run;

/*pull ESRD status variable from dn file
for the core interview years*/
proc sql;
create table esrd1 as select
a.*,b.Bene_ESRD_IND from 
index a left join
dn_2000_20122 b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22))
and a.index_year=b.year;
quit;

proc freq;
table bene_esrd_ind /missprint;
run;

data esrd_p;
set esrd1 ;
if bene_esrd_ind='Y' then esrd_ind_n=1;
if bene_esrd_ind='0' then esrd_ind_n=0;
label esrd_ind_n="ESRD indicator from claims denominator file";
drop bene_esrd_ind;
run;

proc freq;
table esrd_ind_n /missprint;
run;

/****************************************************************************/
/*Get indicator of Home 02 use 12 months post interview from DME claims*/
/****************************************************************************/
data oxygen1(keep=bid_hrs_22 index_year oxygen);
set proj_int.dm_meet_&days.p;
oxygen=0;
array list betos01 : betos13;
do over list;
if list='D1C' then oxygen=1;
end;
if oxygen=1;
run;

proc sort data=oxygen1 out=oxygen_&days.p nodupkey;
by bid_hrs_22 index_year;
run;

data ed_op_1(keep=bid_hrs_22 admit_date disch_date index_date index_year ed_op obs_stay);
set proj_int.op_meet_&days.p;
ed_op=0;
obs_stay=0;
array list rvcntr01-rvcntr45;
do over list;
if list>=450 and list<=459 then ed_op=1;
if list=981 then ed_op=1;
if list=0762 then obs_stay=1;
end;
run;

proc freq;
table ed_op;
run;

proc sql;
create table ed_op_2 as select distinct bid_hrs_22,index_year,
count(case when ed_op=1 then ed_op else . end)
	as n_ed_op_visits,
sum(obs_stay) as n_obs_stay,
max(obs_stay) as obs_stay
	from ed_op_1 group by bid_hrs_22,index_year;
quit;




proc sort data=ed_op_2 nodupkey;
by bid_hrs_22 index_year;
run;


data ed_&days.p ;
set ed_op_2;
if n_ed_op_visits=. then n_ed_op_visits=0;
label n_ed_op_visits="Count ED OP visits within the quarter";

if n_ed_op_visits=0 then ind_ed_op=0;
if n_ed_op_visits>0 & n_ed_op_visits~=. then ind_ed_op=1;
label ind_ed_op="Indicator any ED OP visits within the quarter";

if n_obs_stay=. then n_obs_stay=0;
label n_obs_stay="Number obs stays within the quarter";

if n_obs_stay=. then obs_stay=0;
label obs_stay="Indicator any obs stay within the quarter";
run;

proc freq; tables n_ed_op_visits n_obs_stay /missprint; run;

data hh_&days.p(keep=bid_hrs_22 index_year ind_hh);
set proj_int.hh_meet_&days.p;
ind_hh=1;
run;

proc sort data=ip_&days.p out=ip_&days.p nodupkey; by bid_hrs_22 index_year; run;
proc sort data=snf_&days.p out=snf_&days.p nodupkey; by bid_hrs_22 index_year; run;
proc sort data=esrd_p out=esrd_p nodupkey; by bid_hrs_22 index_year; run;
proc sort data=oxygen_&days.p out=oxygen_&days.p nodupkey; by bid_hrs_22 index_year; run;
proc sort data=ed_&days.p out=ed_&days.p nodupkey; by bid_hrs_22 index_year; run;
proc sort data=hh_&days.p out=hh_&days.p nodupkey; by bid_hrs_22 index_year; run;


/*housecalls

housecall codes (from Bruce Kinosian from CMS on 8/16/17) are 99341-99350
and dom care codes are 99324-99328 and 99334-99337

POS codes are 12 13 14

*/


proc sql;
create table pb_meet_&days.d_bef as select * from
index a
left join proj_int.pb_meet_&days.p b
on a.bid_hrs_22=b.bid_hrs_22 and admit_date<=a.index_date<=admit_date+&days.;
quit;


data hc;
set pb_meet_&days.d_bef;
array this hcpcscd01-hcpcscd13;
code=0;
do over this;
if in(this,"99324","99325","99326","99327","99328","99334","99335","99336","99337", 
	"99341","99342","99343","99344","99345","99346","99347","99348","99349","99350") and code=0 
	then code=1;
end;
array that pos1-pos13;
place=0;
do over that;
if in(that,"12","13","14") and place=0 then place=1;
end;
housecall=place=1 and code=1;
run;

proc sql; 
create table hc_n&days. as select distinct bid_hrs_22, index_date,
sum(housecall) as n_housecalls
from hc
group by bid_hrs_22, index_date;
quit;


/*housecalls

housecall codes (from Bruce Kinosian from CMS on 8/16/17) are 99341-99350
and dom care codes are 99324-99328 and 99334-99337

POS codes are 12 13 14

*/



proc sql;
create table pb_meet_&days.d_aft as select * from
index a
left join proj_int.pb_meet_&days.p b
on a.bid_hrs_22=b.bid_hrs_22 and admit_date>=a.index_date>=admit_date-&days;
quit;


data hc;
set pb_meet_&days.d_aft;
array this hcpcscd01-hcpcscd13;
code=0;
do over this;
if in(this,"99324","99325","99326","99327","99328","99334","99335","99336","99337", 
	"99341","99342","99343","99344","99345","99346","99347","99348","99349","99350") and code=0 
	then code=1;
end;
array that pos1-pos13;
place=0;
do over that;
if in(that,"12","13","14") and place=0 then place=1;
end;
housecall=place=1 and code=1;
run;

proc sql; 
create table hc_p&days. as select distinct bid_hrs_22, index_date,
sum(housecall) as n_housecalls
from hc group by bid_hrs_22, index_date;
quit;


proc sql;
create table pb_&days.p as select * from
index a
left join 
hc_n&days. b
on a.bid_hrs_22=b.bid_hrs_22 and a.index_date=b.index_date
left join
hc_p&days. c
on a.bid_hrs_22=c.bid_hrs_22 and a.index_date=c.index_date;
quit;

proc sql;
create table proj_int.utilization_post_&days.p as select * 
from index a 
left join
ip_&days.p b
on trim(left(a.bid_hrs_22))=trim(left(b.bid_hrs_22)) and a.index_year=b.index_year
left join 
snf_&days.p c
on trim(left(a.bid_hrs_22))=trim(left(c.bid_hrs_22)) and a.index_year=c.index_year
left join 
esrd_p d
on trim(left(a.bid_hrs_22))=trim(left(d.bid_hrs_22)) and a.index_year=d.index_year
left join
oxygen_&days.p e
on trim(left(a.bid_hrs_22))=trim(left(e.bid_hrs_22)) and a.index_year=e.index_year
left join 
ed_&days.p f
on trim(left(a.bid_hrs_22))=trim(left(f.bid_hrs_22)) and a.index_year=f.index_year
left join
hh_&days.p g
on trim(left(a.bid_hrs_22))=trim(left(g.bid_hrs_22)) and a.index_year=g.index_year
left join 
pb_&days.p h
on trim(left(a.bid_hrs_22))=trim(left(h.bid_hrs_22)) and a.index_year=h.index_year;
quit;

proc contents data=proj_int.utilization_post_&days.p; 
run;
%mend;

%admissions(days=91,suffix=nq1,day_start=0);
%admissions(days=182,suffix=nq2,day_start=91);
%admissions(days=273,suffix=nq3,day_start=182);
%admissions(days=365,suffix=nq4,day_start=273);
%admissions(days=456,suffix=nq5,day_start=365);
%admissions(days=547,suffix=nq6,day_start=456);
%admissions(days=638,suffix=nq7,day_start=547);
%admissions(days=730,suffix=nq8,day_start=638);
