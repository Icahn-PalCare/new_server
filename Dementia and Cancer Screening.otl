= V4 Outline MultiLine NoSorting TabWidth=30

H="Project Overview"
/* 
Project Name: TBD

Date Started: August 20,2019

Primary Investigator: Katherine Ornstein

Created By: Naomi Alpert

Primary Analyst: Naomi Alpert
Secondary Analyst: N/A

Datasets Used: NHATS-Medicare, NSOC

Simple Outline: Look at cancer screening behavior in those with and without dementia
*/

/*Libnames*/
libname nhats "D:\NHATS\Shared\base_data\NHATS cleaned";
libname medicare "D:\NHATS\Shared\base_data\CMS_claims\SAS";
libname inter "D:\NHATS\Projects\cancer and aging\Cancer Screening and Dementia\data\Intermediate";
libname final "D:\NHATS\Projects\cancer and aging\Cancer Screening and Dementia\data\Final";
libname xwalk "D:\NHATS\Shared\raw\CMS\NHATS CMS DUA 28016\Crosswalks";

H="2011 Index Date"
/*Read in NHATS*/
proc import out=nhats1_8 datafile="D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_8.dta"
dbms=dta replace;
run;

proc contents data=nhats1_8;
run;

/*Select Wave 1*/
data nhats1; set nhats1_8(where=(wave=1)); run; /*8245*/

/*Select community dwellers*/
proc freq data=nhats1; tables nhres community_dwelling; run; /*636 noncommunity dwelling*/

data nhats1; set nhats1;
sample=1; 
if community_dwelling=0 then sample=0; run;

proc freq data=nhats1; tables sample; run;

/*select those non-res care community*/
proc freq data=nhats1(where=(sample=1)); tables sp_ivw_yes sp_status*proxy_ivw; format _all_; run; /*412 with res-care (not NH)*/
data nhats1; set nhats1;
if sp_status=2 then sample=0;
run;

proc freq data=nhats1; tables sample; run;

/*select those with completed interviews at baseline*/
proc freq data=nhats1(where=(sample=1)); tables sp_ivw_yes proxy_ivw; run; /*all 7197 had interviews at baseline*/
proc freq data=nhats1(where=(sample=1)); tables proxy_ivw*(dem_3_cat otherlang)/missing; run;
proc freq data=nhats1; tables sample; run;


/*Males and Females*/
proc freq data=nhats1; tables sample*female; run;

/*prostate cohort*/
data prostate; set nhats1; 
sample_prostate=sample;
if female=1 then sample_prostate=0;
run;

proc freq data=prostate; tables sample_prostate; run;

proc freq data=prostate; tables sample_prostate*(dem_3_cat agecat)/missing; run;
proc freq data=prostate(where=(age>=67)); tables sample_prostate; run;


/*Save prostate cohort*/
data inter.prostate; set prostate; run;

/*breast cohort*/
data breast; set nhats1; 
sample_breast=sample;
if female=0 then sample_breast=0;
run;

proc freq data=breast; tables sample_breast; run;

proc freq data=breast; tables sample_breast*(dem_3_cat agecat)/missing; run;
proc freq data=breast(where=(age>=67)); tables sample_breast; run;

/*Save breast cohort*/
data inter.breast; set breast; run;

/*colorectal cohort*/
data colon; set nhats1; 
sample_colon=sample;
run;

proc freq data=colon; tables sample_colon; run;

proc freq data=colon; tables sample_colon*dem_3_cat/missing; run;
proc freq data=colon(where=(age>=67)); tables sample_colon; run;

/*number with dementia before age 75*/
proc freq data=nhats1(where=(age<75 and sample=1)); tables female*dem_3_cat; run;


H="Prostate Exclusions-Medicare"
proc import out=nhats1_8 datafile="D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_8.dta"
dbms=dta replace;
run;

/*Prostate Exclusions*/
data prostate; set inter.prostate; run;

proc freq data=prostate; tables sample_prostate*female; run;

/*Connect with xwalk*/
data xwalk; set medicare.xwalk_2016; run;
proc contents data=xwalk; run;

proc sort data=prostate; by spid; run;
proc sort data=xwalk; by spid; run;

data prostate1; merge prostate(in=a) xwalk (in=b); if a; if b; by spid; run;

data prostate; set prostate1; run;

proc freq data=prostate; tables sample_prostate; run;
proc freq data=prostate; tables ivw_month; run;

/*1 year Medicare coverage before NHATS enrollment*/
data mbsf; set medicare.mbsf_06_17; run;
proc contents data=mbsf; run;


data mbsf_red; set mbsf(where=(BENE_ENROLLMT_REF_YR in (2010, 2011))); run;

 	/*list of prostate ids in the sample*/
		data prostate_id; set prostate(where=(sample_prostate=1)); keep bene_id ivw_month; run;
		proc freq data=prostate_id; tables ivw_month; run;


		proc sort data=mbsf_red; by bene_id; run;
		proc sort data=prostate_id; by bene_id; run;

	/*mbsf for those in the prostate sample*/
		data mbsf_red; merge mbsf_red prostate_id (in=a); if a; by bene_id; run;
		data test; set mbsf_red; keep bene_id; run;
			proc sort data=test nodup out=test; by bene_id; run;
		proc freq data=mbsf_red; tables BENE_MDCR_ENTLMT_BUYIN_IND_01 BENE_HMO_IND_01; run;

/*Define months of coverage in year before enrollment*/
data mbsf_red; set mbsf_red;
array Ind {12}$ BENE_MDCR_ENTLMT_BUYIN_IND_01-BENE_MDCR_ENTLMT_BUYIN_IND_12;
array AB {12} AB1-AB12;
array HMOind{12} $BENE_HMO_IND_01-BENE_HMO_IND_12;
array HMO {12} HMO1-HMO12;

do i=1 to 12;
if Ind(i) in ("3", "C") then AB(i)=1; else AB(i)=0;

if HMOind(i)="0" then HMO(i)=0; else HMO(i)=1;
end;

ABsum=sum(of AB1-AB12);
HMOsum=sum(of HMO1-HMO12);

if ivw_month=5 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1 and AB7=1 and AB6=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1 or HMO7=1 or HMO6=1) then HMO2010=1; else HMO2010=0;
end;

if ivw_month=6 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1 and AB7=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1 or HMO7=1)  then HMO2010=1; else HMO2010=0;

end;

if ivw_month=7 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1  then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1)  then HMO2010=1; else HMO2010=0;
end;

if ivw_month=8 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1)  then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1   then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1) then HMO2010=1; else HMO2010=0;
end;

if ivw_month=9 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1 and AB9=1 
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1 or HMO9=1)  then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1)  then HMO2010=1; else HMO2010=0;
end;

if ivw_month=10 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1 and AB9=1  and AB10=1
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1 or HMO9=1 or HMO10=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1)  then HMO2010=1; else HMO2010=0;
end;

if AB2011=1 and HMO2011=0 then FFS2011=1; else FFS2011=0;
if AB2010=1 and HMO2010=0 then FFS2010=1; else FFS2010=0;

run;

proc print data=mbsf_red (where=(FFS2011=1 or FFS2010=1) obs=25); var bene_id  BENE_AGE_AT_END_REF_YR ivw_month 
BENE_ENROLLMT_REF_YR AB1-AB12 AB2011 AB2010 
HMO1-HMO12 HMO2011 HMO2010 FFS2011 FFS2010 ABsum HMOsum BENE_HI_CVRAGE_TOT_MONS BENE_SMI_CVRAGE_TOT_MONS BENE_HMO_CVRAGE_TOT_MONS;
run;

proc freq data=mbsf_red; tables FFS2011 FFS2010; run;

data FFS2010; set mbsf_red(where=(BENE_ENROLLMT_REF_YR=2010)); keep bene_id FFS2010; run;
	proc freq data=FFS2010; tables FFS2010; run;

data FFS2011; set mbsf_red (where=(BENE_ENROLLMT_REF_YR=2011)); keep bene_id FFS2011; run;
	proc freq data=FFS2011; tables FFS2011; run;

data FFS; merge FFS2010 FFS2011; by bene_id; 
if FFS2010=1 and FFS2011=1 then FFS=1; else FFS=0; 
run;

proc freq data=FFS; tables FFS FFS2010*FFS2011/missing; run;

/*list of ids of patients with FFS*/
data FFS_id; set FFS (where=(FFS=1)); run;

/*merge back with prostate data set*/
proc sort data=FFS_id; by bene_id; run;
proc sort data=prostate; by bene_id; run;

data prostate1; merge FFS_Id (in=a) prostate; by bene_id; 
if a=0 then sample_prostate=0;
run;

proc freq data=prostate1; tables sample_prostate; run;

data prostate; set prostate1; run;

H="Prostate Exclusions-Prior History"

/*History of Prostate Cancer*/
/*survey*/
proc contents data=prostate; run;
proc freq data=prostate (where=(sample_prostate=1)); tables sr_cancer_ever*sr_prostatecancer_had/missing; run;

data prostate1; set prostate;
if sr_prostatecancer_had=1 then sample_prostate=0;
run;

proc freq data=prostate1; tables sample_prostate; run;
data prostate; set prostate1; run;

/*claims*/
/*exclude those with ICD 9 185 or V1046*/

data prostate_id; set prostate(where=(sample_prostate=1)); keep spid bene_id sample_prostate ivw_date; run;

/*NCH claims*/
data nch; set medicare.pb_09_17; run;

proc sort data=nch; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data nch_red; merge nch prostate_id(in=a); by bene_id; if a;  run;
	data test; set nch_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=1648*/

data nch_red; set nch_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of prostate cancer*/
proc contents data=nch_red; run;
proc freq data=nch_red; tables ICD_DGNS_VRSN_CD1/missing; run;
proc print data=nch_red(where=(ICD_DGNS_VRSN_CD1="")); var ICD_DGNS_CD1; run;
proc print data=nch_red(where=(substr(ICD_DGNS_CD1,1,3)="185")); var ICD_DGNS_CD1; run;

data nch1; set nch_red;
array dx{13} $ICD_DGNS_CD1-ICD_DGNS_CD12 PRNCPAL_DGNS_CD;
array dx_type{13} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD12 PRNCPAL_DGNS_VRSN_CD;

do i=1 to 13;
if dx_type(i)="9" and dx(i)="V1046" or substr(dx(i),1,3)="185" then prostate_history=1;
end;

if prostate_history=. then prostate_history=0;
run;

proc freq data=nch1; tables prostate_history; run;

proc sql;
create table prostate_pre as
select bene_id, sum(prostate_history) as pcdxnum
from nch1
group by bene_id;
quit;

proc print data=prostate_pre (obs=10); run;  proc freq data=prostate_pre; tables pcdxnum; run;
 
data prostate_pre_NCH; set prostate_pre;
if pcDxnum>0 then prostate_history=1; else prostate_history=0;
drop pcDxnum;
run;

proc freq data=prostate_pre_NCH; tables prostate_history; run; /*42*/


/*Outpatient*/
data outpat; set medicare.op_09_17; run;

proc sort data=outpat; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data outpat_red; merge outpat prostate_id(in=a); by bene_id; if a;  run;
	data test; set outpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=1648*/

data outpat_red; set outpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of prostate cancer*/
proc contents data=outpat_red; run;

data outpat1; set outpat_red;
array dx{29} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD RSN_VISIT_CD1-RSN_VISIT_CD3;
array dx_type{29} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD RSN_VISIT_VRSN_CD1-RSN_VISIT_VRSN_CD3;

do i=1 to 29;
if dx_type(i)="9" and dx(i)="V1046" or substr(dx(i),1,3)="185" then prostate_history=1;
end;

if prostate_history=. then prostate_history=0;
run;

proc freq data=outpat1; tables prostate_history; run;

proc sql;
create table prostate_pre as
select bene_id, sum(prostate_history) as pcdxnum
from outpat1
group by bene_id;
quit;

proc print data=prostate_pre (obs=10); run;  proc freq data=prostate_pre; tables pcdxnum; run;
 
data prostate_pre_outpat; set prostate_pre;
if pcDxnum>0 then prostate_history=1; else prostate_history=0;
drop pcDxnum;
run;

proc freq data=prostate_pre_outpat; tables prostate_history; run; /*22*/

/*Inpatient*/
data inpat; set medicare.ip_06_17; run;

proc sort data=inpat; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data inpat_red; merge inpat prostate_id(in=a); by bene_id; if a;  run;
	data test; set inpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=1648*/

data inpat_red; set inpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of prostate cancer*/
proc contents data=inpat_red; run;

data inpat1; set inpat_red;
array dx{27} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD ADMTG_DGNS_CD;
array dx_type{27} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD ADMTG_DGNS_VRSN_CD;

do i=1 to 27;
if dx_type(i)="9" and dx(i)="V1046" or substr(dx(i),1,3)="185" then prostate_history=1;
end;

if prostate_history=. then prostate_history=0;
run;

proc freq data=inpat1; tables prostate_history; run;

proc sql;
create table prostate_pre as
select bene_id, sum(prostate_history) as pcdxnum
from inpat1
group by bene_id;
quit;

proc print data=prostate_pre (obs=10); run;  proc freq data=prostate_pre; tables pcdxnum; run;
 
data prostate_pre_inpat; set prostate_pre;
if pcDxnum>0 then prostate_history=1; else prostate_history=0;
drop pcDxnum;
run;

proc freq data=prostate_pre_inpat; tables prostate_history; run; /*6*/

data prostate_pre; set prostate_pre_NCH(where=(prostate_history=1)) prostate_pre_outpat(where=(prostate_history=1))
prostate_pre_inpat (where=(prostate_history=1));
run; 

proc print data=prostate_pre; run;

proc sort data=prostate_pre nodup out=prostate_pre; by bene_id; run;
proc print data=prostate_pre; run;

/*merge back with prostate dataset */
data prostate1; merge prostate_pre (in=a) prostate; by bene_id; 
if a=1 then sample_prostate=0;
run;

proc freq data=prostate1; tables sample_prostate; run;
data prostate; set prostate1; run;

/*******************************************************************************/
/* HISTORY OF OTHER PROSTATE ISSUES
/*****************************************************************************/
/*Exclude those with other prostate issues (Prostatectomy, elevated PSA, ADT, urinary obstruction, hematuria, prostatitis, other
prostate issues*/

data prostate_id; set prostate(where=(sample_prostate=1)); keep spid bene_id sample_prostate ivw_date; run;

/*NCH claims*/
data nch; set medicare.pb_09_17; run;

proc sort data=nch; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data nch_red; merge nch prostate_id(in=a); by bene_id; if a;  run;
	data test; set nch_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=1648*/

data nch_red; set nch_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*Other prostate issues*/
proc contents data=nch_red; run;

data nch1; set nch_red;
array dx{13} $ICD_DGNS_CD1-ICD_DGNS_CD12 PRNCPAL_DGNS_CD;
array dx_type{13} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD12 PRNCPAL_DGNS_VRSN_CD;
array hcpcscd{13} $hcpcscd1-hcpcscd13;

do i=1 to 13;
if dx_type(i)="9" and dx(i) in ("79093") then elevated_PSA=1;
if dx_type(i)="9" and dx(i) in ("5996",/*urinary obstruction*/ "5997",/*hematuria*/ "601", "6010", "6011", "6012", "6013", 
"6014", "6018", "6019",/*prostatitis*/ "602", "6020", "6021", "6022", "6023", "6028", "6029"/*other prostate disorders*/) 
then prostate_symptoms=1;

if hcpcscd(i) in ("55810", "55812", "55815", "55801", "55821", "55831", "55842", "55845") then prostatectomy=1;
if hcpcscd(i) in ("J1950", "J9202", "J9217", "J9218", "J9219") then ADT=1;
end;

if elevated_PSA=1 or prostatectomy=1 or ADT=1 then ineligible=1;

run;

proc freq data=nch1; tables elevated_PSA prostate_symptoms prostatectomy ADT ineligible/missing; run;

proc sql;
create table ineligible as
select bene_id, sum(ineligible) as ineligible_n
from nch1
group by bene_id;
quit;

proc print data=ineligible (obs=10); run;  proc freq data=ineligible; tables ineligible_n; run;
 
data ineligible_NCH; set ineligible;
if ineligible_n>0 then ineligible=1; else ineligible=0;
drop ineligible_n;
run;

proc freq data=ineligible_NCH; tables ineligible; run; /*159*/


/*Outpatient*/
data outpat; set medicare.op_09_17; run;

proc sort data=outpat; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data outpat_red; merge outpat prostate_id(in=a); by bene_id; if a;  run;
	data test; set outpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=1648*/

data outpat_red; set outpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of prostate cancer*/
proc contents data=outpat_red; run;

data outpat1; set outpat_red;
array dx{29} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD RSN_VISIT_CD1-RSN_VISIT_CD3;
array dx_type{29} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD RSN_VISIT_VRSN_CD1-RSN_VISIT_VRSN_CD3;
array px{25} $ICD_PRCDR_CD1-ICD_PRCDR_CD25;
array hcpcscd{383} $hcpcscd1-hcpcscd383;

do i=1 to 29;
if dx_type(i)="9" and dx(i) in ("79093") then elevated_PSA=1;
if dx_type(i)="9" and dx(i) in ("5996",/*urinary obstruction*/ "5997",/*hematuria*/ "601", "6010", "6011", "6012", "6013", 
"6014", "6018", "6019",/*prostatitis*/ "602", "6020", "6021", "6022", "6023", "6028", "6029"/*other prostate disorders*/) 
then prostate_symptoms=1;
end;

do i=1 to 25;
if px(i) in ("6021", "6029", "603", "604", "605", "606", "6061", "6062", "6069") then prostatectomy=1;
end;

do i=1 to 383;
if hcpcscd(i) in ("55810", "55812", "55815", "55801", "55821", "55831", "55842", "55845") then prostatectomy=1;
if hcpcscd(i) in ("J1950", "J9202", "J9217", "J9218", "J9219") then ADT=1;
end;

if elevated_PSA=1 or prostatectomy=1 or ADT=1 then ineligible=1;
run;

proc freq data=outpat1; tables elevated_PSA prostate_symptoms prostatectomy ADT ineligible/missing; run;

proc sql;
create table ineligible as
select bene_id, sum(ineligible) as ineligible_n
from outpat1
group by bene_id;
quit;

proc print data=ineligible (obs=10); run;  proc freq data=ineligible; tables ineligible_n; run;
 
data ineligible_outpat; set ineligible;
if ineligible_n>0 then ineligible=1; else ineligible=0;
drop ineligible_n;
run;

proc freq data=ineligible_outpat; tables ineligible; run; /*68*/

/*Inpatient*/
data inpat; set medicare.ip_06_17; run;

proc sort data=inpat; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data inpat_red; merge inpat prostate_id(in=a); by bene_id; if a;  run;
	data test; set inpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=1648*/

data inpat_red; set inpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of prostate cancer*/
proc contents data=inpat_red; run;

data inpat1; set inpat_red;
array dx{27} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD ADMTG_DGNS_CD;
array dx_type{27} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD ADMTG_DGNS_VRSN_CD;
array px{25} $ICD_PRCDR_CD1-ICD_PRCDR_CD25;

do i=1 to 27;
if dx_type(i)="9" and dx(i) in ("79093") then elevated_PSA=1;
if dx_type(i)="9" and dx(i) in ("5996",/*urinary obstruction*/ "5997",/*hematuria*/ "601", "6010", "6011", "6012", "6013", 
"6014", "6018", "6019",/*prostatitis*/ "602", "6020", "6021", "6022", "6023", "6028", "6029"/*other prostate disorders*/) 
then prostate_symptoms=1;
end;

do i=1 to 25;
if px(i) in ("6021", "6029", "603", "604", "605", "606", "6061", "6062", "6069") then prostatectomy=1;
end;

if elevated_PSA=1 or prostatectomy=1  then ineligible=1;
run;

proc freq data=inpat1; tables elevated_PSA prostate_symptoms prostatectomy ineligible/missing; run;

proc sql;
create table ineligible as
select bene_id, sum(ineligible) as ineligible_n
from inpat1
group by bene_id;
quit;

proc print data=ineligible (obs=10); run;  proc freq data=ineligible; tables ineligible_n; run;
 
data ineligible_inpat; set ineligible;
if ineligible_n>0 then ineligible=1; else ineligible=0;
drop ineligible_n;
run;

proc freq data=ineligible_inpat; tables ineligible; run; /*5*/

data ineligible; set ineligible_NCH(where=(ineligible=1)) ineligible_outpat(where=(ineligible=1))
ineligible_inpat (where=(ineligible=1));
run; 

proc print data=ineligible; run;

proc sort data=ineligible nodup out=ineligible; by bene_id; run;
proc print data=ineligible; run; /*n=183*/

/*merge back with prostate dataset */
data prostate1; merge ineligible (in=a) prostate; by bene_id; 
if a=1 then sample_prostate=0;
run;

proc freq data=prostate1; tables sample_prostate; run;
data prostate; set prostate1; run;

/*prostate symptoms*/
/*nch*/
proc sql;
create table symptoms as
select bene_id, sum(prostate_symptoms) as symptoms_n
from nch1
group by bene_id;
quit;

proc print data=symptoms (obs=10); run;  proc freq data=symptoms; tables symptoms_n; run;
 
data symptoms_nch; set symptoms;
if symptoms_n>0 then prostate_symptoms=1; else prostate_symptoms=0;
drop symptoms_n;
run;

proc freq data=symptoms_nch; tables prostate_symptoms; run; /*80*/

/*outpat*/
proc sql;
create table symptoms as
select bene_id, sum(prostate_symptoms) as symptoms_n
from outpat1
group by bene_id;
quit;

proc print data=symptoms (obs=10); run;  proc freq data=symptoms; tables symptoms_n; run;
 
data symptoms_outpat; set symptoms;
if symptoms_n>0 then prostate_symptoms=1; else prostate_symptoms=0;
drop symptoms_n;
run;

proc freq data=symptoms_outpat; tables prostate_symptoms; run; /*18*/

/*inpat*/
proc sql;
create table symptoms as
select bene_id, sum(prostate_symptoms) as symptoms_n
from inpat1
group by bene_id;
quit;

proc print data=symptoms (obs=10); run;  proc freq data=symptoms; tables symptoms_n; run;
 
data symptoms_inpat; set symptoms;
if symptoms_n>0 then prostate_symptoms=1; else prostate_symptoms=0;
drop symptoms_n;
run;

proc freq data=symptoms_inpat; tables prostate_symptoms; run; /*1*/

data symptoms; set symptoms_NCH(where=(prostate_symptoms=1)) symptoms_outpat(where=(prostate_symptoms=1))
symptoms_inpat (where=(prostate_symptoms=1));
run; 

proc print data=symptoms; run;

proc sort data=symptoms nodup out=symptoms; by bene_id; run;
proc print data=symptoms; run; /*n=95*/

/*merge back with prostate dataset */
data prostate1; merge symptoms (in=a) prostate; by bene_id; 
if a=1 then sample_prostate=0;
run;

proc freq data=prostate1; tables sample_prostate ineligible*prostate_symptoms/missing; run;
data prostate; set prostate1; run;

/*check dementia status*/
proc freq data=prostate(where=(sample_prostate=1)); tables dem_3_cat; run;

/*Save updated prostate cohort*/
data inter.prostate_eligible_screening; set prostate; run;

H="Prostate Exclusions: Medicare Coverage 1 YR"
data prostate; set inter.prostate_eligible_screening; run;

proc freq data=prostate(where=(sample_prostate=1)); tables dem_3_cat; run;

/*Medicare Coverage for 1 year after interview*/
proc freq data=prostate(where=(sample_prostate=1)); tables ivw_month; run;
proc print data=prostate(where=(sample_prostate=1) obs=10); var spid bene_id; run;

data mbsf; set medicare.mbsf_06_17; run;
proc contents data=mbsf; run;


data mbsf_red; set mbsf(where=(BENE_ENROLLMT_REF_YR in (2011, 2012))); run;

 	/*list of prostate ids in the sample*/
		data prostate_id; set prostate(where=(sample_prostate=1)); keep bene_id ivw_month; run;
		proc freq data=prostate_id; tables ivw_month; run;


		proc sort data=mbsf_red; by bene_id; run;
		proc sort data=prostate_id; by bene_id; run;

	/*mbsf for those in the prostate sample*/
		data mbsf_red; merge mbsf_red prostate_id (in=a); if a; by bene_id; run;
		data test; set mbsf_red; keep bene_id; run;
			proc sort data=test nodup out=test; by bene_id; run;
		proc freq data=mbsf_red; tables BENE_MDCR_ENTLMT_BUYIN_IND_01 BENE_HMO_IND_01; run;

/*Define months of coverage in year after enrollment*/
data mbsf_red; set mbsf_red;
array Ind {12}$ BENE_MDCR_ENTLMT_BUYIN_IND_01-BENE_MDCR_ENTLMT_BUYIN_IND_12;
array AB {12} AB1-AB12;
array HMOind{12} $BENE_HMO_IND_01-BENE_HMO_IND_12;
array HMO {12} HMO1-HMO12;

do i=1 to 12;
if Ind(i) in ("3", "C") then AB(i)=1; else AB(i)=0;

if HMOind(i)="0" then HMO(i)=0; else HMO(i)=1;
end;

ABsum=sum(of AB1-AB12);
HMOsum=sum(of HMO1-HMO12);

if ivw_month=5 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB6=1 and AB7=1 and AB8=1 and AB9=1 and AB10=1 and AB11=1 and AB12=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO6=1 or HMO7=1 or HMO8=1 or HMO9=1 or HMO10=1 or HMO11=1 or HMO12=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2012 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 then AB2012=1; else AB2012=0;
if BENE_ENROLLMT_REF_YR=2012 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1) then HMO2012=1; else HMO2012=0;
end;

if ivw_month=6 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB7=1 and AB8=1 and AB9=1 and AB10=1 and AB11=1 and AB12=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO7=1 or HMO8=1 or HMO9=1 or HMO10=1 or HMO11=1 or HMO12=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2012 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 and AB6=1 then AB2012=1; else AB2012=0;
if BENE_ENROLLMT_REF_YR=2012 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1) then HMO2012=1; else HMO2012=0;
end;

if ivw_month=7 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB8=1 and AB9=1 and AB10=1 and AB11=1 and AB12=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO8=1 or HMO9=1 or HMO10=1 or HMO11=1 or HMO12=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2012 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 and AB6=1 and AB7=1 then AB2012=1; else AB2012=0;
if BENE_ENROLLMT_REF_YR=2012 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1 or HMO7=1) then HMO2012=1; else HMO2012=0;
end;

if ivw_month=8 then do;
if BENE_ENROLLMT_REF_YR=2011  and AB9=1 and AB10=1 and AB11=1 and AB12=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO9=1 or HMO10=1 or HMO11=1 or HMO12=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2012 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 and AB6=1 and AB7=1 and AB8=1 then AB2012=1; else AB2012=0;
if BENE_ENROLLMT_REF_YR=2012 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1 or HMO7=1 or HMO8=1) then HMO2012=1; else HMO2012=0;
end;

if ivw_month=9 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB10=1 and AB11=1 and AB12=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO10=1 or HMO11=1 or HMO12=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2012 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 and AB6=1 and AB7=1 and AB8=1 and AB9=1 then AB2012=1; else AB2012=0;
if BENE_ENROLLMT_REF_YR=2012 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1 or HMO7=1 or HMO8=1 or HMO9=1) then HMO2012=1; else HMO2012=0;
end;

if ivw_month=10 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB11=1 and AB12=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and ( HMO11=1 or HMO12=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2012 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 and AB6=1 and AB7=1 and AB8=1 and AB9=1 and AB10=1 then AB2012=1; else AB2012=0;
if BENE_ENROLLMT_REF_YR=2012 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1 or HMO7=1 or HMO8=1 or HMO9=1 or HMO10=1) then HMO2012=1; else HMO2012=0;
end;

if AB2011=1 and HMO2011=0 then FFS2011=1; else FFS2011=0;
if AB2012=1 and HMO2012=0 then FFS2012=1; else FFS2012=0;

run;

proc print data=mbsf_red (where=(FFS2011=1 or FFS2012=1) obs=25); var bene_id  BENE_AGE_AT_END_REF_YR ivw_month 
BENE_ENROLLMT_REF_YR AB1-AB12 AB2011 AB2012 
HMO1-HMO12 HMO2011 HMO2012 FFS2011 FFS2012 ABsum HMOsum BENE_HI_CVRAGE_TOT_MONS BENE_SMI_CVRAGE_TOT_MONS BENE_HMO_CVRAGE_TOT_MONS;
run;

proc freq data=mbsf_red; tables FFS2011 FFS2012; run;

data FFS2012; set mbsf_red(where=(BENE_ENROLLMT_REF_YR=2012)); keep bene_id FFS2012; run;
	proc freq data=FFS2012; tables FFS2012; run;

data FFS2011; set mbsf_red (where=(BENE_ENROLLMT_REF_YR=2011)); keep bene_id FFS2011; run;
	proc freq data=FFS2011; tables FFS2011; run;

data FFS; merge FFS2011 FFS2012; by bene_id; 
if FFS2012=1 and FFS2011=1 then FFS=1; else FFS=0; 
run;

proc freq data=FFS; tables FFS FFS2012*FFS2011/missing; run;

/*list of ids of patients with FFS*/
data FFS_id; set FFS (where=(FFS=1)); run;

/*merge back with prostate data set*/
proc sort data=FFS_id; by bene_id; run;
proc sort data=prostate; by bene_id; run;

data prostate1; merge FFS_Id (in=a) prostate; by bene_id; 
if a=0 then sample_prostate=0;
run;

proc freq data=prostate1; tables sample_prostate; run;

data prostate; set prostate1; run;

proc freq data=prostate(where=(sample_prostate=1)); tables dem_3_cat; run;

H="Prostate PSA in 1 year after enrollment"
/* PSA within 1 yr of enrollment (NCH file only)*/

/*PSA within 1 year of enrollment*/
data nch; set medicare.pb_09_17; run;

data prostate_id; 
set prostate(where=(sample_prostate=1)); keep spid bene_id sample_prostate ivw_date; run;

proc sort data=nch; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data nch_red; merge nch prostate_id(in=a); by bene_id; if a;  run;
	data test; set nch_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=1231*/

data nch_red; set nch_red (where=(ivw_date<admit_date and admit_date<=365+ivw_date)); run;

/*PSA and date of first PSA*/
proc contents data=nch_red; run;


data nch1; set nch_red;
array px{13} $hcpcscd1-hcpcscd13;

do i=1 to 13;
if px(i)="G0103" or px(i)="84153" then PSA=1;
end;

if PSA=. then PSA=0;
if PSA=1 then PSA_date=admit_date;

format PSA_date date9.;

run;

proc freq data=nch1; tables PSA; run; /*407 PSAs*/
proc print data=nch1(where=(PSA=1)); var spid PSA PSA_date admit_date ivw_date; run;
proc freq data=nch1(where=(PSA=1)); tables hcpcscd1-hcpcscd13; run;

data test; set nch1(where=(PSA=1)); keep bene_id; run;
	proc sort data=test nodup out=test; by bene_id; run; /*315 PSAs*/


/*select first PSA*/
proc sort data=nch1; by bene_id PSA_date; run;

data PSA1; set nch1(where=(PSA=1)); by bene_id; 
if first.bene_id; 
keep spid bene_id PSA PSA_date;
run; /*315 people with PSAs*/

proc print data=PSA1; run;

/*merge back with prostate data set*/
proc sort data=PSA1; by bene_id; run;
proc sort data=prostate; by bene_id; run;

data prostate1; merge PSA1 (in=a) prostate; by bene_id; 
if a=0 then PSA=0;
run;

proc freq data=prostate1 (where=(sample_prostate=1)); tables PSA; run;

data prostate; set prostate1; run;

proc contents data=prostate; run;

proc surveyfreq data=prostate; 
weight anfinwgt; strata varstrat; cluster varunit;
tables sample_prostate*dem_3_cat*PSA/row col; run;






H="Prostate-Symptoms prior to PSA"
/*NCH*/
data nch; set medicare.pb_09_17; run;

data prostate_id; 
set prostate(where=(sample_prostate=1 and PSA=1)); keep spid bene_id sample_prostate ivw_date PSA_date; run;

proc sort data=nch; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data nch_red; merge nch prostate_id(in=a); by bene_id; if a;  run;
	data test; set nch_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=315*/

data nch_red; set nch_red (where=(ivw_date<admit_date and admit_date<=PSA_date)); run;

data nch1; set nch_red;
array dx{13} $ICD_DGNS_CD1-ICD_DGNS_CD12 PRNCPAL_DGNS_CD;
array dx_type{13} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD12 PRNCPAL_DGNS_VRSN_CD;
array hcpcscd{13} $hcpcscd1-hcpcscd13;

do i=1 to 13;
if dx_type(i)="9" and substr(dx(i),1,3)="185" then prostate_cancer=1;

if dx_type(i)="9" and dx(i) in ("79093") then elevated_PSA=1;
if dx_type(i)="9" and dx(i) in ("5996",/*urinary obstruction*/ "5997",/*hematuria*/ "601", "6010", "6011", "6012", "6013", 
"6014", "6018", "6019",/*prostatitis*/ "602", "6020", "6021", "6022", "6023", "6028", "6029"/*other prostate disorders*/) 
then prostate_symptoms=1;

if hcpcscd(i) in ("55810", "55812", "55815", "55801", "55821", "55831", "55842", "55845") then prostatectomy=1;
if hcpcscd(i) in ("J1950", "J9202", "J9217", "J9218", "J9219") then ADT=1;
end;

if prostate_cancer=1 or prostate_symptoms=1 or elevated_PSA=1 or prostatectomy=1 or ADT=1 then diagnostic=1;
if diagnostic=. then diagnostic=0;

run;

proc freq data=nch1; tables diagnostic; run;

proc sql;
create table diagnostic as
select bene_id, sum(diagnostic) as diagnosticn
from nch1
group by bene_id;
quit;

proc print data=diagnostic(obs=10); run;  proc freq data=diagnostic; tables diagnosticn; run;
 
data diagnostic_NCH; set diagnostic;
if diagnosticn>0 then diagnostic_PSA=1; else diagnostic_PSA=0;
drop diagnosticn;
run;

proc freq data=diagnostic_NCH; tables diagnostic_PSA; run; /*39 diagnostic (non screening PSA)*/

/*Outpatient*/

data outpat; set medicare.op_09_17; run;

proc sort data=outpat; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data outpat_red; merge outpat prostate_id(in=a); by bene_id; if a;  run;
	data test; set outpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=315*/

data outpat_red; set outpat_red (where=(ivw_date<admit_date and admit_date<=PSA_date)); run;


data outpat1; set outpat_red;
array dx{29} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD RSN_VISIT_CD1-RSN_VISIT_CD3;
array dx_type{29} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD RSN_VISIT_VRSN_CD1-RSN_VISIT_VRSN_CD3;
array px{25} $ICD_PRCDR_CD1-ICD_PRCDR_CD25;
array hcpcscd{383} $hcpcscd1-hcpcscd383;


do i=1 to 29;
if dx_type(i)="9" and substr(dx(i),1,3)="185" then prostate_cancer=1;
if dx_type(i)="9" and dx(i) in ("79093") then elevated_PSA=1;
if dx_type(i)="9" and dx(i) in ("5996",/*urinary obstruction*/ "5997",/*hematuria*/ "601", "6010", "6011", "6012", "6013", 
"6014", "6018", "6019",/*prostatitis*/ "602", "6020", "6021", "6022", "6023", "6028", "6029"/*other prostate disorders*/) 
then prostate_symptoms=1;
end;


do i=1 to 25;
if px(i) in ("6021", "6029", "603", "604", "605", "606", "6061", "6062", "6069") then prostatectomy=1;
end;

do i=1 to 383;
if hcpcscd(i) in ("55810", "55812", "55815", "55801", "55821", "55831", "55842", "55845") then prostatectomy=1;
if hcpcscd(i) in ("J1950", "J9202", "J9217", "J9218", "J9219") then ADT=1;
end;

if prostate_cancer=1 or prostate_symptoms=1 or elevated_PSA=1 or prostatectomy=1 or ADT=1 then diagnostic=1;
if diagnostic=. then diagnostic=0;

run;

proc freq data=outpat1; tables diagnostic; run;

proc sql;
create table diagnostic as
select bene_id, sum(diagnostic) as diagnosticn
from outpat1
group by bene_id;
quit;

proc print data=diagnostic (obs=10); run;  proc freq data=diagnostic; tables diagnosticn; run;
 
data diagnostic_outpat; set diagnostic;
if diagnosticn>0 then diagnostic_PSA=1; else diagnostic_PSA=0;
drop diagnosticn;
run;

proc freq data=diagnostic_outpat; tables diagnostic_PSA; run; /*1*/

/*Inpatient*/
data inpat; set medicare.ip_06_17; run;

proc sort data=inpat; by bene_id; run;
proc sort data=prostate_id; by bene_id; run;

data inpat_red; merge inpat prostate_id(in=a); by bene_id; if a;  run;
	data test; set inpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=315*/

data inpat_red; set inpat_red (where=(ivw_date<admit_date and admit_date<=PSA_date)); run;

/*history of prostate cancer*/
proc contents data=inpat_red; run;

data inpat1; set inpat_red;
array dx{27} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD ADMTG_DGNS_CD;
array dx_type{27} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD ADMTG_DGNS_VRSN_CD;
array px{25} $ICD_PRCDR_CD1-ICD_PRCDR_CD25;

do i=1 to 27;
if dx_type(i)="9" and substr(dx(i),1,3)="185" then prostate_cancer=1;
if dx_type(i)="9" and dx(i) in ("79093") then elevated_PSA=1;
if dx_type(i)="9" and dx(i) in ("5996",/*urinary obstruction*/ "5997",/*hematuria*/ "601", "6010", "6011", "6012", "6013", 
"6014", "6018", "6019",/*prostatitis*/ "602", "6020", "6021", "6022", "6023", "6028", "6029"/*other prostate disorders*/) 
then prostate_symptoms=1;
end;

do i=1 to 25;
if px(i) in ("6021", "6029", "603", "604", "605", "606", "6061", "6062", "6069") then prostatectomy=1;
end;

if prostate_cancer=1 or prostate_symptoms=1 or elevated_PSA=1 or prostatectomy=1 or ADT=1 then diagnostic=1;
if diagnostic=. then diagnostic=0;

run;

proc freq data=inpat1; tables diagnostic; run; /*0 diagnostic*/

proc sql;
create table diagnostic as
select bene_id, sum(diagnostic) as diagnosticn
from inpat1
group by bene_id;
quit;

proc print data=diagnostic (obs=10); run;  proc freq data=diagnostic; tables diagnosticn; run;
 
data diagnostic_inpat; set diagnostic;
if diagnosticn>0 then diagnostic_PSA=1; else diagnostic_PSA=0;
drop diagnosticn;
run;

proc freq data=diagnostic_inpat; tables diagnostic_PSA; run; /*0*/

data diagnostic; set diagnostic_NCH(where=(diagnostic_PSA=1)) diagnostic_outpat(where=(diagnostic_PSA=1))
diagnostic_inpat (where=(diagnostic_PSA=1));
run; 

proc print data=diagnostic; run;

proc sort data=diagnostic nodup out=diagnostic; by bene_id; run;
proc print data=diagnostic; run; /*39 diagnostic PSAs*/

/*merge back with prostate dataset */
data prostate1; merge diagnostic(in=a) prostate; by bene_id; 
if a=1 and PSA=1 then screening_PSA=0;
if a=0 and PSA=1 then screening_PSA=1;
if PSA=0 then screening_PSA=0;
run;

proc freq data=prostate1(where=(sample_prostate=1)); tables screening_PSA PSA; run;
data prostate; set prostate1; run;

proc surveyfreq data=prostate; 
weight anfinwgt; strata varstrat; cluster varunit;
tables sample_prostate*dem_3_cat*screening_PSA/row col; run;


H="Breast Exclusions-Medicare"
proc import out=nhats1_8 datafile="D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_8.dta"
dbms=dta replace;
run;

/*breast Exclusions*/
data breast; set inter.breast; run;

proc freq data=breast; tables sample_breast*female; run;

/*Connect with xwalk*/
data xwalk; set medicare.xwalk_2016; run;
proc contents data=xwalk; run;

proc sort data=breast; by spid; run;
proc sort data=xwalk; by spid; run;

data breast1; merge breast(in=a) xwalk (in=b); if a; if b; by spid; run;

data breast; set breast1; run;

proc freq data=breast; tables sample_breast; run;
proc freq data=breast; tables ivw_month; run;

/*1 year Medicare coverage before NHATS enrollment*/
data mbsf; set medicare.mbsf_06_17; run;
proc contents data=mbsf; run;


data mbsf_red; set mbsf(where=(BENE_ENROLLMT_REF_YR in (2010, 2011))); run;

 	/*list of breast ids in the sample*/
		data breast_id; set breast(where=(sample_breast=1)); keep bene_id ivw_month; run;
		proc freq data=breast_id; tables ivw_month; run;


		proc sort data=mbsf_red; by bene_id; run;
		proc sort data=breast_id; by bene_id; run;

	/*mbsf for those in the breast sample*/
		data mbsf_red; merge mbsf_red breast_id (in=a); if a; by bene_id; run;
		data test; set mbsf_red; keep bene_id; run;
			proc sort data=test nodup out=test; by bene_id; run; /*4147*/

/*Define months of coverage in year before enrollment*/
data mbsf_red; set mbsf_red;
array Ind {12}$ BENE_MDCR_ENTLMT_BUYIN_IND_01-BENE_MDCR_ENTLMT_BUYIN_IND_12;
array AB {12} AB1-AB12;
array HMOind{12} $BENE_HMO_IND_01-BENE_HMO_IND_12;
array HMO {12} HMO1-HMO12;

do i=1 to 12;
if Ind(i) in ("3", "C") then AB(i)=1; else AB(i)=0;

if HMOind(i)="0" then HMO(i)=0; else HMO(i)=1;
end;

ABsum=sum(of AB1-AB12);
HMOsum=sum(of HMO1-HMO12);

if ivw_month=5 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1 and AB7=1 and AB6=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1 or HMO7=1 or HMO6=1) then HMO2010=1; else HMO2010=0;
end;

if ivw_month=6 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1 and AB7=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1 or HMO7=1)  then HMO2010=1; else HMO2010=0;

end;

if ivw_month=7 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1  then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1)  then HMO2010=1; else HMO2010=0;
end;

if ivw_month=8 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1)  then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1   then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1) then HMO2010=1; else HMO2010=0;
end;

if ivw_month=9 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1 and AB9=1 
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1 or HMO9=1)  then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1)  then HMO2010=1; else HMO2010=0;
end;

if ivw_month=10 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1 and AB9=1  and AB10=1
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1 or HMO9=1 or HMO10=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1)  then HMO2010=1; else HMO2010=0;
end;

if AB2011=1 and HMO2011=0 then FFS2011=1; else FFS2011=0;
if AB2010=1 and HMO2010=0 then FFS2010=1; else FFS2010=0;

run;

proc print data=mbsf_red (where=(FFS2011=1 or FFS2010=1) obs=25); var bene_id  BENE_AGE_AT_END_REF_YR ivw_month 
BENE_ENROLLMT_REF_YR AB1-AB12 AB2011 AB2010 
HMO1-HMO12 HMO2011 HMO2010 FFS2011 FFS2010 ABsum HMOsum BENE_HI_CVRAGE_TOT_MONS BENE_SMI_CVRAGE_TOT_MONS BENE_HMO_CVRAGE_TOT_MONS;
run;

proc freq data=mbsf_red; tables FFS2011 FFS2010; run;

data FFS2010; set mbsf_red(where=(BENE_ENROLLMT_REF_YR=2010)); keep bene_id FFS2010; run;
	proc freq data=FFS2010; tables FFS2010; run;

data FFS2011; set mbsf_red (where=(BENE_ENROLLMT_REF_YR=2011)); keep bene_id FFS2011; run;
	proc freq data=FFS2011; tables FFS2011; run;

data FFS; merge FFS2010 FFS2011; by bene_id; 
if FFS2010=1 and FFS2011=1 then FFS=1; else FFS=0; 
run;

proc freq data=FFS; tables FFS FFS2010*FFS2011/missing; run; /*2581*/

/*list of ids of patients with FFS*/
data FFS_id; set FFS (where=(FFS=1)); run;

/*merge back with breast data set*/
proc sort data=FFS_id; by bene_id; run;
proc sort data=breast; by bene_id; run;

data breast1; merge FFS_Id (in=a) breast; by bene_id; 
if a=0 then sample_breast=0;
run;

proc freq data=breast1; tables sample_breast; run;

data breast; set breast1; run;

H="Breast Exclusions-Prior History"
/*History of breast Cancer*/
/*survey*/
proc contents data=breast; run;
proc freq data=breast (where=(sample_breast=1)); tables sr_cancer_ever*sr_breastcancer_had/missing; run;

data breast1; set breast;
if sr_breastcancer_had=1 then sample_breast=0;
run;

proc freq data=breast1; tables sample_breast; run;
data breast; set breast1; run;

/*claims*/
/*exclude those with ICD 9 174x, 2330, V103, 611.72*/

data breast_id; set breast(where=(sample_breast=1)); keep spid bene_id sample_breast ivw_date; run;

/*NCH claims*/
data nch; set medicare.pb_09_17; run;

proc sort data=nch; by bene_id; run;
proc sort data=breast_id; by bene_id; run;

data nch_red; merge nch breast_id(in=a); by bene_id; if a;  run;
	data test; set nch_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=2327*/

data nch_red; set nch_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of breast cancer*/
proc contents data=nch_red; run;
proc freq data=nch_red; tables ICD_DGNS_VRSN_CD1/missing; run;
proc print data=nch_red(where=(ICD_DGNS_VRSN_CD1="")); var ICD_DGNS_CD1; run;
proc print data=nch_red(where=(substr(ICD_DGNS_CD1,1,3)="174")); var ICD_DGNS_CD1; run;

data nch1; set nch_red;
array dx{13} $ICD_DGNS_CD1-ICD_DGNS_CD12 PRNCPAL_DGNS_CD;
array dx_type{13} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD12 PRNCPAL_DGNS_VRSN_CD;

do i=1 to 13;
if dx_type(i)="9" and dx(i) in ("2330", "V103", "61172") or substr(dx(i),1,3)="174" then breast_history=1;
end;

if breast_history=. then breast_history=0;
run;

proc freq data=nch1; tables breast_history; run;

proc sql;
create table breast_pre as
select bene_id, sum(breast_history) as bcdxnum
from nch1
group by bene_id;
quit;

proc print data=breast_pre (obs=10); run;  proc freq data=breast_pre; tables bcdxnum; run;
 
data breast_pre_NCH; set breast_pre;
if bcdxnum>0 then breast_history=1; else breast_history=0;
drop bcdxnum;
run;

proc freq data=breast_pre_NCH; tables breast_history; run; /*39*/


/*Outpatient*/
data outpat; set medicare.op_09_17; run;

proc sort data=outpat; by bene_id; run;
proc sort data=breast_id; by bene_id; run;

data outpat_red; merge outpat breast_id(in=a); by bene_id; if a;  run;
	data test; set outpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=2327*/

data outpat_red; set outpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of breast cancer*/
proc contents data=outpat_red; run;

data outpat1; set outpat_red;
array dx{29} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD RSN_VISIT_CD1-RSN_VISIT_CD3;
array dx_type{29} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD RSN_VISIT_VRSN_CD1-RSN_VISIT_VRSN_CD3;

do i=1 to 29;
if dx_type(i)="9" and dx(i) in ("2330", "V103", "61172") or substr(dx(i),1,3)="174" then breast_history=1;
end;

if breast_history=. then breast_history=0;
run;

proc freq data=outpat1; tables breast_history; run;

proc sql;
create table breast_pre as
select bene_id, sum(breast_history) as bcdxnum
from outpat1
group by bene_id;
quit;

proc print data=breast_pre (obs=10); run;  proc freq data=breast_pre; tables bcdxnum; run;
 
data breast_pre_outpat; set breast_pre;
if bcdxnum>0 then breast_history=1; else breast_history=0;
drop bcdxnum;
run;

proc freq data=breast_pre_outpat; tables breast_history; run; /*24*/

/*Inpatient*/
data inpat; set medicare.ip_06_17; run;

proc sort data=inpat; by bene_id; run;
proc sort data=breast_id; by bene_id; run;

data inpat_red; merge inpat breast_id(in=a); by bene_id; if a;  run;
	data test; set inpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=2327*/

data inpat_red; set inpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of breast cancer*/
proc contents data=inpat_red; run;

data inpat1; set inpat_red;
array dx{27} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD ADMTG_DGNS_CD;
array dx_type{27} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD ADMTG_DGNS_VRSN_CD;

do i=1 to 27;
if dx_type(i)="9" and dx(i) in ("2330", "V103", "61172") or substr(dx(i),1,3)="174" then breast_history=1;
end;

if breast_history=. then breast_history=0;
run;

proc freq data=inpat1; tables breast_history; run;

proc sql;
create table breast_pre as
select bene_id, sum(breast_history) as bcdxnum
from inpat1
group by bene_id;
quit;

proc print data=breast_pre (obs=10); run;  proc freq data=breast_pre; tables bcdxnum; run;
 
data breast_pre_inpat; set breast_pre;
if bcdxnum>0 then breast_history=1; else breast_history=0;
drop bcdxnum;
run;

proc freq data=breast_pre_inpat; tables breast_history; run; /*5*/

data breast_pre; set breast_pre_NCH(where=(breast_history=1)) breast_pre_outpat(where=(breast_history=1))
breast_pre_inpat (where=(breast_history=1));
run; 

proc print data=breast_pre; run;

proc sort data=breast_pre nodup out=breast_pre; by bene_id; run;
proc print data=breast_pre; run; /*52*/

/*merge back with breast dataset */
data breast1; merge breast_pre (in=a) breast; by bene_id; 
if a=1 then sample_breast=0;
run;

proc freq data=breast1; tables sample_breast; run;
data breast; set breast1; run;



/*check dementia status*/
proc freq data=breast(where=(sample_breast=1)); tables dem_3_cat; run;

/*Save updated breast cohort*/
data inter.breast_eligible_screening; set breast; run;

H="Colorectal Exclusions-Medicare"
proc import out=nhats1_8 datafile="D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_8.dta"
dbms=dta replace;
run;

/*colon Exclusions*/
data colon; set inter.colorectal; run;

proc freq data=colon; tables sample_colon*female; run;

/*Connect with xwalk*/
data xwalk; set medicare.xwalk_2016; run;
proc contents data=xwalk; run;

proc sort data=colon; by spid; run;
proc sort data=xwalk; by spid; run;

data colon1; merge colon(in=a) xwalk (in=b); if a; if b; by spid; run;

data colon; set colon1; run;

proc freq data=colon; tables sample_colon; run;
proc freq data=colon; tables ivw_month; run;

/*1 year Medicare coverage before NHATS enrollment*/
data mbsf; set medicare.mbsf_06_17; run;
proc contents data=mbsf; run;


data mbsf_red; set mbsf(where=(BENE_ENROLLMT_REF_YR in (2010, 2011))); run;

 	/*list of colon ids in the sample*/
		data colon_id; set colon(where=(sample_colon=1)); keep bene_id ivw_month; run;
		proc freq data=colon_id; tables ivw_month; run;


		proc sort data=mbsf_red; by bene_id; run;
		proc sort data=colon_id; by bene_id; run;

	/*mbsf for those in the colon sample*/
		data mbsf_red; merge mbsf_red colon_id (in=a); if a; by bene_id; run;
		data test; set mbsf_red; keep bene_id; run;
			proc sort data=test nodup out=test; by bene_id; run; /*7197*/

/*Define months of coverage in year before enrollment*/
data mbsf_red; set mbsf_red;
array Ind {12}$ BENE_MDCR_ENTLMT_BUYIN_IND_01-BENE_MDCR_ENTLMT_BUYIN_IND_12;
array AB {12} AB1-AB12;
array HMOind{12} $BENE_HMO_IND_01-BENE_HMO_IND_12;
array HMO {12} HMO1-HMO12;

do i=1 to 12;
if Ind(i) in ("3", "C") then AB(i)=1; else AB(i)=0;

if HMOind(i)="0" then HMO(i)=0; else HMO(i)=1;
end;

ABsum=sum(of AB1-AB12);
HMOsum=sum(of HMO1-HMO12);

if ivw_month=5 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1 and AB7=1 and AB6=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1 or HMO7=1 or HMO6=1) then HMO2010=1; else HMO2010=0;
end;

if ivw_month=6 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1 and AB7=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1 or HMO7=1)  then HMO2010=1; else HMO2010=0;

end;

if ivw_month=7 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1 and AB8=1  then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1 or HMO8=1)  then HMO2010=1; else HMO2010=0;
end;

if ivw_month=8 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1)  then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 and AB9=1   then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1 or HMO9=1) then HMO2010=1; else HMO2010=0;
end;

if ivw_month=9 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1 and AB9=1 
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1 or HMO9=1)  then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 and AB10=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1 or HMO10=1)  then HMO2010=1; else HMO2010=0;
end;

if ivw_month=10 then do;
if BENE_ENROLLMT_REF_YR=2011 and AB1=1 and AB2=1 and AB3=1 and AB4=1 and AB5=1  and AB6=1 and AB7=1 and AB8=1 and AB9=1  and AB10=1
then AB2011=1; else AB2011=0;
if BENE_ENROLLMT_REF_YR=2011 and (HMO1=1 or HMO2=1 or HMO3=1 or HMO4=1 or HMO5=1 or HMO6=1
or HMO7=1 or HMO8=1 or HMO9=1 or HMO10=1) then HMO2011=1; else HMO2011=0;
if BENE_ENROLLMT_REF_YR=2010 and AB12=1 and AB11=1 then AB2010=1; else AB2010=0;
if BENE_ENROLLMT_REF_YR=2010 and (HMO12=1 or HMO11=1)  then HMO2010=1; else HMO2010=0;
end;

if AB2011=1 and HMO2011=0 then FFS2011=1; else FFS2011=0;
if AB2010=1 and HMO2010=0 then FFS2010=1; else FFS2010=0;

run;

proc print data=mbsf_red (where=(FFS2011=1 or FFS2010=1) obs=25); var bene_id  BENE_AGE_AT_END_REF_YR ivw_month 
BENE_ENROLLMT_REF_YR AB1-AB12 AB2011 AB2010 
HMO1-HMO12 HMO2011 HMO2010 FFS2011 FFS2010 ABsum HMOsum BENE_HI_CVRAGE_TOT_MONS BENE_SMI_CVRAGE_TOT_MONS BENE_HMO_CVRAGE_TOT_MONS;
run;

proc freq data=mbsf_red; tables FFS2011 FFS2010; run;

data FFS2010; set mbsf_red(where=(BENE_ENROLLMT_REF_YR=2010)); keep bene_id FFS2010; run;
	proc freq data=FFS2010; tables FFS2010; run;

data FFS2011; set mbsf_red (where=(BENE_ENROLLMT_REF_YR=2011)); keep bene_id FFS2011; run;
	proc freq data=FFS2011; tables FFS2011; run;

data FFS; merge FFS2010 FFS2011; by bene_id; 
if FFS2010=1 and FFS2011=1 then FFS=1; else FFS=0; 
run;

proc freq data=FFS; tables FFS FFS2010*FFS2011/missing; run; /*4500*/

/*list of ids of patients with FFS*/
data FFS_id; set FFS (where=(FFS=1)); run;

/*merge back with colon data set*/
proc sort data=FFS_id; by bene_id; run;
proc sort data=colon; by bene_id; run;

data colon1; merge FFS_Id (in=a) colon; by bene_id; 
if a=0 then sample_colon=0;
run;

proc freq data=colon1; tables sample_colon; run;

data colon; set colon1; run;

H="Colorectal Exclusions-Prior History"
/*History of colon Cancer*/
/*survey*/
proc contents data=colon; run;
proc freq data=colon (where=(sample_colon=1)); tables sr_cancer_ever*sr_coloncancer_had/missing; run;

data colon1; set colon;
if sr_coloncancer_had=1 then sample_colon=0;
run;

proc freq data=colon1; tables sample_colon; run;
data colon; set colon1; run;

/*claims*/
/*exclude those with ICD 9 185 or V1046*/

data colon_id; set colon(where=(sample_colon=1)); keep spid bene_id sample_colon ivw_date; run;

/*NCH claims*/
data nch; set medicare.pb_09_17; run;

proc sort data=nch; by bene_id; run;
proc sort data=colon_id; by bene_id; run;

data nch_red; merge nch colon_id(in=a); by bene_id; if a;  run;
	data test; set nch_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=4403*/

data nch_red; set nch_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of colon cancer*/
proc contents data=nch_red; run;
proc print data=nch_red(where=(substr(ICD_DGNS_CD1,1,3)="153")); var ICD_DGNS_CD1; run;

data nch1; set nch_red;
array dx{13} $ICD_DGNS_CD1-ICD_DGNS_CD12 PRNCPAL_DGNS_CD;
array dx_type{13} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD12 PRNCPAL_DGNS_VRSN_CD;

do i=1 to 13;
if dx_type(i)="9" and (dx(i) in ("1540", "1541", "2303", "2304", "V1005", "V1006")
or substr(dx(i),1,3)="153") then colon_history=1;
end;

if colon_history=. then colon_history=0;
run;

proc freq data=nch1; tables colon_history; run;

proc sql;
create table colon_pre as
select bene_id, sum(colon_history) as ccdxnum
from nch1
group by bene_id;
quit;

proc print data=colon_pre (obs=10); run;  proc freq data=colon_pre; tables ccdxnum; run;
 
data colon_pre_NCH; set colon_pre;
if ccdxnum>0 then colon_history=1; else colon_history=0;
drop ccdxnum;
run;

proc freq data=colon_pre_NCH; tables colon_history; run; /*24*/


/*Outpatient*/
data outpat; set medicare.op_09_17; run;

proc sort data=outpat; by bene_id; run;
proc sort data=colon_id; by bene_id; run;

data outpat_red; merge outpat colon_id(in=a); by bene_id; if a;  run;
	data test; set outpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=4403*/

data outpat_red; set outpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of colon cancer*/
proc contents data=outpat_red; run;

data outpat1; set outpat_red;
array dx{29} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD RSN_VISIT_CD1-RSN_VISIT_CD3;
array dx_type{29} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD RSN_VISIT_VRSN_CD1-RSN_VISIT_VRSN_CD3;

do i=1 to 29;
if dx_type(i)="9" and (dx(i) in ("1540", "1541", "2303", "2304", "V1005", "V1006")
or substr(dx(i),1,3)="153") then colon_history=1;
end;

if colon_history=. then colon_history=0;
run;

proc freq data=outpat1; tables colon_history; run;

proc sql;
create table colon_pre as
select bene_id, sum(colon_history) as ccdxnum
from outpat1
group by bene_id;
quit;

proc print data=colon_pre (obs=10); run;  proc freq data=colon_pre; tables ccdxnum; run;
 
data colon_pre_outpat; set colon_pre;
if ccdxnum>0 then colon_history=1; else colon_history=0;
drop ccdxnum;
run;

proc freq data=colon_pre_outpat; tables colon_history; run; /*12*/

/*Inpatient*/
data inpat; set medicare.ip_06_17; run;

proc sort data=inpat; by bene_id; run;
proc sort data=colon_id; by bene_id; run;

data inpat_red; merge inpat colon_id(in=a); by bene_id; if a;  run;
	data test; set inpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=4403*/

data inpat_red; set inpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of colon cancer*/
proc contents data=inpat_red; run;

data inpat1; set inpat_red;
array dx{27} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD ADMTG_DGNS_CD;
array dx_type{27} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD ADMTG_DGNS_VRSN_CD;

do i=1 to 27;
if dx_type(i)="9" and (dx(i) in ("1540", "1541", "2303", "2304", "V1005", "V1006")
or substr(dx(i),1,3)="153") then colon_history=1;
end;

if colon_history=. then colon_history=0;
run;

proc freq data=inpat1; tables colon_history; run;

proc sql;
create table colon_pre as
select bene_id, sum(colon_history) as ccdxnum
from inpat1
group by bene_id;
quit;

proc print data=colon_pre (obs=10); run;  proc freq data=colon_pre; tables ccdxnum; run;
 
data colon_pre_inpat; set colon_pre;
if ccdxnum>0 then colon_history=1; else colon_history=0;
drop ccdxnum;
run;

proc freq data=colon_pre_inpat; tables colon_history; run; /*7*/

data colon_pre; set colon_pre_NCH(where=(colon_history=1)) colon_pre_outpat(where=(colon_history=1))
colon_pre_inpat (where=(colon_history=1));
run; 

proc print data=colon_pre; run;

proc sort data=colon_pre nodup out=colon_pre; by bene_id; run;
proc print data=colon_pre; run; /*29*/

/*merge back with colon dataset */
data colon1; merge colon_pre (in=a) colon; by bene_id; 
if a=1 then sample_colon=0;
run;

proc freq data=colon1; tables sample_colon; run;
data colon; set colon1; run;

/*******************************************************************************/
/* HISTORY OF OTHER colon ISSUES
/*****************************************************************************/
/*Exclude those with other colon issues (IBS, diverticulitis, gastrointestinal bleeding, ischemic bowel disease*/

data colon_id; set colon(where=(sample_colon=1)); keep spid bene_id sample_colon ivw_date; run;

/*NCH claims*/
data nch; set medicare.pb_09_17; run;

proc sort data=nch; by bene_id; run;
proc sort data=colon_id; by bene_id; run;

data nch_red; merge nch colon_id(in=a); by bene_id; if a;  run;
	data test; set nch_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=4374*/

data nch_red; set nch_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*Other colon issues*/
proc contents data=nch_red; run;

data nch1; set nch_red;
array dx{13} $ICD_DGNS_CD1-ICD_DGNS_CD12 PRNCPAL_DGNS_CD;
array dx_type{13} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD12 PRNCPAL_DGNS_VRSN_CD;
/*array hcpcscd{13} $hcpcscd1-hcpcscd13;*/

do i=1 to 13;
if dx_type(i)="9" and dx(i) in ("2865", "4590", "56202", "56203", "56212", "56213", "5693", "56984",
"56985", "56986", "5781", "5789", "7921", "99811") then GI_bleed=1;
if dx_type(i)="9" and dx(i) in ("5570", "5571", "5579") then IBD=1;
if dx_type(i)="9" and dx(i) in ("5641") then IBS=1;
if dx_type(i)="9" and dx(i) in ("56211") then diverticulitis=1;
end;

if GI_bleed=1 or IBD=1 or IBS=1 or diverticulitis=1 then other_colon_symptoms=1;

run;

proc freq data=nch1; tables GI_bleed IBD IBS diverticulitis other_colon_symptoms/missing; run;

proc sql;
create table other_colon_symptoms as
select bene_id, sum(other_colon_symptoms) as other_colon_symptoms_n
from nch1
group by bene_id;
quit;

proc print data=other_colon_symptoms (obs=10); run;  proc freq data=other_colon_symptoms; tables other_colon_symptoms_n; run;
 
data other_colon_symptoms_NCH; set other_colon_symptoms;
if other_colon_symptoms_n>0 then other_colon_symptoms=1; else other_colon_symptoms=0;
drop other_colon_symptoms_n;
run;

proc freq data=other_colon_symptoms_NCH; tables other_colon_symptoms; run; /*370*/


/*Outpatient*/
data outpat; set medicare.op_09_17; run;

proc sort data=outpat; by bene_id; run;
proc sort data=colon_id; by bene_id; run;

data outpat_red; merge outpat colon_id(in=a); by bene_id; if a;  run;
	data test; set outpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=4374*/

data outpat_red; set outpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of colon cancer*/
proc contents data=outpat_red; run;

data outpat1; set outpat_red;
array dx{29} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD RSN_VISIT_CD1-RSN_VISIT_CD3;
array dx_type{29} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD RSN_VISIT_VRSN_CD1-RSN_VISIT_VRSN_CD3;
/*array px{25} $ICD_PRCDR_CD1-ICD_PRCDR_CD25;
array hcpcscd{383} $hcpcscd1-hcpcscd383;*/

do i=1 to 29;
if dx_type(i)="9" and dx(i) in ("2865", "4590", "56202", "56203", "56212", "56213", "5693", "56984",
"56985", "56986", "5781", "5789", "7921", "99811") then GI_bleed=1;
if dx_type(i)="9" and dx(i) in ("5570", "5571", "5579") then IBD=1;
if dx_type(i)="9" and dx(i) in ("5641") then IBS=1;
if dx_type(i)="9" and dx(i) in ("56211") then diverticulitis=1;
end;

if GI_bleed=1 or IBD=1 or IBS=1 or diverticulitis=1 then other_colon_symptoms=1;
run;

proc freq data=outpat1; tables GI_bleed IBD IBS diverticulitis other_colon_symptoms/missing; run;

proc sql;
create table other_colon_symptoms as
select bene_id, sum(other_colon_symptoms) as other_colon_symptoms_n
from outpat1
group by bene_id;
quit;

proc print data=other_colon_symptoms (obs=10); run;  proc freq data=other_colon_symptoms; tables other_colon_symptoms_n; run;
 
data other_colon_symptoms_outpat; set other_colon_symptoms;
if other_colon_symptoms_n>0 then other_colon_symptoms=1; else other_colon_symptoms=0;
drop other_colon_symptoms_n;
run;

proc freq data=other_colon_symptoms_outpat; tables other_colon_symptoms; run; /*123*/

/*Inpatient*/
data inpat; set medicare.ip_06_17; run;

proc sort data=inpat; by bene_id; run;
proc sort data=colon_id; by bene_id; run;

data inpat_red; merge inpat colon_id(in=a); by bene_id; if a;  run;
	data test; set inpat_red; keep bene_id; run;
		proc sort data=test nodup out=test; by bene_id; run; /*n=4374*/

data inpat_red; set inpat_red (where=(ivw_date>admit_date and ivw_date-admit_date<=365)); run;

/*history of colon cancer*/
proc contents data=inpat_red; run;

data inpat1; set inpat_red;
array dx{27} $ICD_DGNS_CD1-ICD_DGNS_CD25 PRNCPAL_DGNS_CD ADMTG_DGNS_CD;
array dx_type{27} $ICD_DGNS_VRSN_CD1-ICD_DGNS_VRSN_CD25 PRNCPAL_DGNS_VRSN_CD ADMTG_DGNS_VRSN_CD;
/*array px{25} $ICD_PRCDR_CD1-ICD_PRCDR_CD25;*/

do i=1 to 27;
if dx_type(i)="9" and dx(i) in ("2865", "4590", "56202", "56203", "56212", "56213", "5693", "56984",
"56985", "56986", "5781", "5789", "7921", "99811") then GI_bleed=1;
if dx_type(i)="9" and dx(i) in ("5570", "5571", "5579") then IBD=1;
if dx_type(i)="9" and dx(i) in ("5641") then IBS=1;
if dx_type(i)="9" and dx(i) in ("56211") then diverticulitis=1;
end;

if GI_bleed=1 or IBD=1 or IBS=1 or diverticulitis=1 then other_colon_symptoms=1;
run;

proc freq data=inpat1; tables GI_bleed IBD IBS diverticulitis other_colon_symptoms/missing; run;

proc sql;
create table other_colon_symptoms as
select bene_id, sum(other_colon_symptoms) as other_colon_symptoms_n
from inpat1
group by bene_id;
quit;

proc print data=other_colon_symptoms (obs=10); run;  proc freq data=other_colon_symptoms; tables other_colon_symptoms_n; run;
 
data other_colon_symptoms_inpat; set other_colon_symptoms;
if other_colon_symptoms_n>0 then other_colon_symptoms=1; else other_colon_symptoms=0;
drop other_colon_symptoms_n;
run;

proc freq data=other_colon_symptoms_inpat; tables other_colon_symptoms; run; /*90*/

data other_colon_symptoms; set other_colon_symptoms_NCH(where=(other_colon_symptoms=1)) other_colon_symptoms_outpat(where=(other_colon_symptoms=1))
other_colon_symptoms_inpat (where=(other_colon_symptoms=1));
run; 

proc print data=other_colon_symptoms; run;

proc sort data=other_colon_symptoms nodup out=other_colon_symptoms; by bene_id; run;
proc print data=other_colon_symptoms; run; /*n=183*/

/*merge back with colon dataset */
data colon1; merge other_colon_symptoms (in=a) colon; by bene_id; 
if a=1 then sample_colon=0;
run;

proc freq data=colon1; tables sample_colon; run;
data colon; set colon1; run;

/*check dementia status*/
proc freq data=colon(where=(sample_colon=1)); tables dem_3_cat; run;

/*Save updated colon cohort*/
data inter.colon_eligible_screening; set colon; run;