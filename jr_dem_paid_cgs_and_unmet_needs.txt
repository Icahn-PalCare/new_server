= V4 Outline MultiLine NoSorting TabWidth=30

H="Outline"
/* 
********************HEADING******************** 

Project Name: Adverse Consequences of Unmet Need among Probable Dementia Patients

Date Started: 7/18/19

Primary Investigator: Jenny Reckrey
Funding Source: GEMSSTAR

Created by: EBL

Primary Analyst: EBL
Secondary Analyst: MH

Datasets Used: nhats


*/
 
//STATA
// Global Macros use $ symbol to be called. 

//Clean NHATS 
global nhats "D:\nhats\shared\base_data\nhats cleaned"

//Intermediate Data Path
global intpath "D:\nhats\Projects\caregiving\jr_dem_paid_cgs_and_unmet_needs\data\int_data"

// Final Data Path
global datapath "D:\NHATS\Projects\caregiving\jr_dem_paid_cgs_and_unmet_needs\data\final_data"

//Log files path
global logpath "D:\NHATS\Projects\caregiving\jr_dem_paid_cgs_and_unmet_needs\output\logs"

//Log files path
global outpath "D:\NHATS\Projects\caregiving\jr_dem_paid_cgs_and_unmet_needs\output\in_progress"

H="Sample derivation"
//Sample derivation

use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_8.dta" if wave<8, clear

//per request, include as impaired if any help

drop *adlcount_jenny
rename adl_ins_help adl_insd_help
foreach x in eat toil insd bed dres bath out {
	replace adl_`x'_help=0 if missing(adl_`x'_help)
	replace `x'_jenny=1 if adl_`x'_help==1
}

foreach x in laun meds shop meal bank {
	replace iadl_`x'_help=0 if missing(iadl_`x'_help)
	replace `x'_jenny=1 if iadl_`x'_help==1
}
egen adlcount_jenny=rowtotal(eat_j toil_j insd_j bed_j dres_j bath_j)
egen iadlcount_jenny=rowtotal(laun_j meds_j shop_j meal_j bank_j)

local samplevars all inrange spivw nonh nolml prob_dem //anyh

gen all=1
gen inrange=inlist(wave,1,5)
gen spivw=sp_ivw==1
gen nonh=!nhres
gen nolml=!lml
gen anyh=n_help>0
label var all "All NHATS waves 1-7"
label var inrange "Wave 1 and/or 5"
label var spivw "SP interview completed"
label var nonh "Community dwelling at interview"
label var nolml "Non-deceased (not LML ivw)"
label var anyh "Receives any help"

local rn : word count `samplevars'

mat tab=J(`rn',3,.)
local r=1

local denom=_N

foreach x of local samplevars {
	keep if `x'==1
	mat tab[`r',1]=`denom'-_N
	local denom=_N
	mat tab[`r',2]=_N
	duplicates report spid
	mat tab[`r',3]=r(unique_value)
	local r=`r'+1
}

mat rownames tab=`samplevars'

frmttable using "${outpath}\sample_derivation.rtf", statmat(tab) varlabels sdec(0) title("Sample Derivation") ///
ctitles("" "Interviews don't meet" "Interviews do meet" "Unique SPs") replace


//clean/add variables

label var tot_paidhrs "Hours per week of paid help, conditional on any"
rename homebound_cat hb
rename race_cat race
gen help_cat=ind_no_helpers
replace help_cat=2 if !ind_paid & n_helpers
replace help_cat=3 if n_helpers>n_paid & ind_paid
replace help_cat=4 if n_helpers==n_paid & ind_paid
label var help_cat "Caregiving, categorical"
label define help_cat 1 "No helpers" 2 "Informal help only" 3 "Informal & paid" ///
4 "Paid help only"
label values help_cat help_cat

//get impairment/help/unmet need in same categories
drop eatdev dress dresd
egen adv_any=rowmax(adverse*)
egen adv_sc=rowmax(adverse_eat adverse_bath adverse_toil adverse_dres)
egen adv_hh=rowmax(adverse_laun adverse_shop adverse_meal adverse_bank)
egen adv_mob=rowmax(adverse_insd adverse_out adverse_bed)
label var adv_any "Any adverse consequence of unmet need"
label var adv_sc "Adverse consequence of unmet self-care need"
label var adv_hh "Adverse consequence of unmet household need"
label var adv_mob "Adverse consequence of unmet mobility need"

egen impair_sc=rowmax(eat bath toil dres)
egen impair_hh=rowmax(laun shop meal_j bank_j)
egen impair_mob=rowmax(insd out_jenny bed)
egen impair_any=rowmax(impair_*)
label var impair_any "Any impairment"
label var impair_sc "Self-care impairment"
label var impair_hh "Household impairment"
label var impair_mob "Mobility impairment"

/*
label define impcat 1 "No impairment or help" 2 "Impairment, no help, no adverse consequences" ///
3 "Impairment & help, no adverse consequences" 4 "No impairment, but help, no adverse consequences" 5 "No help, adverse consequences" 6 "Help, adverse consequences"

foreach x in eat toil insd bed dres bath laun shop meal bank {
	rename *adl_`x'_help adl_`x'_help
	gen `x'_cat=`x'_jenny+1 
	replace `x'_cat=3 if adl_`x'_help==1 & `x'_jenny==1 & adverse_`x'==0
	replace `x'_cat=4 if adl_`x'_help==1 & `x'_jenny==0 & adverse_`x'==0
	replace `x'_cat=5 if adl_`x'_help==0 & adverse_`x'==1
	replace `x'_cat=6 if adl_`x'_help==1 & adverse_`x'==1
	label values `x'_cat impcat
}*/

//8/23/19--updated and down to three categories

label define impcat 1 "No impairment" 2 "Impairment but no help, no adverse consequences" 3 "Help with task, no adverse consequences" 4 "No help, adverse consequences" 5 "Help, adverse consequences"

foreach x in eat toil insd bed dres bath laun shop meal bank out {
	rename *adl_`x'_help adl_`x'_help
	gen `x'_cat=`x'_jenny+1 
	replace `x'_cat=3 if adl_`x'_help==1 & `x'_jenny==1 & adverse_`x'==0
	replace `x'_cat=4 if adl_`x'_help==0 & adverse_`x'==1
	replace `x'_cat=5 if adl_`x'_help==1 & adverse_`x'==1
	label values `x'_cat impcat
}

egen sc_jenny=rowmax(eat_j toil_j insd_j bath_j)
egen hh_jenny=rowmax(laun_j shop_j meal_j bank_j)
egen mob_jenny=rowmax(insd_j out_j bed_j)

local sc eat toil dres bath
local hh laun shop meal bank
local mob insd out bed

foreach x in sc hh mob {
	local help
	gen `x'met=0
	gen `x'insuf=0
	gen `x'mism=0
	foreach y of local `x' {
		local help `help' adl_`y'_help
		replace `x'met=1 if `y'_cat==3
		replace `x'insuf=1 if `y'_cat==5
		replace `x'mism=1 if `y'_cat==4
}
	egen `x'_help=rowmax(`help')
	replace `x'_jenny=`x'_jenny+1
	replace `x'_jenny=4 if adv_`x'==1
	replace `x'_jenny=3 if `x'_help==1
	foreach y of local `x' {
		gen `y'_mism_cat=1 if adverse_`y'==0 & `x'_help==0
		replace `y'_mism_cat=2 if adl_`y'_help==0 & `x'_help==1
		replace `y'_mism_cat=3 if adl_`y'_help==1 & adverse_`y'==0
		replace `y'_mism_cat=4 if `x'_help==0 & adverse_`y'==1
		replace `y'_mism_cat=5 if `x'_help==1 & adl_`y'_help==0 & adverse_`y'==1
		replace `y'_mism_cat=6 if adl_`y'_help==1 & adverse_`y'==1

		label define `y'_mism_cat 1 "No help in domain or adverse consequences" 2 "Help in domain but not with task, no consequences" 3 "Help with task, no consequences" 4 "No help in domain, consequences" 5 "Help within domain but not task, consequences" 6 "Matched help, adverse consequences"
		label values `y'_mism_cat `y'_mism_cat
}
}


	
replace livearrang=0 if rcfres==1 & livearrang==1
label define livearrang 0 "Alone, residential care facility" 1 "Alone, independent", modify	
save "${intpath}\dem_wave_1_5_w_help_sample.dta", replace

H="table 1"
//table 1

use "${intpath}\dem_wave_1_5_w_help_sample.dta", clear
foreach x of varlist tot_*_i {
replace `x'=0 if n_helpers==0 
}
replace ind_gt20hrs_wk_paid=0 if n_helpers==0

local cvars1 age
local ivars1 female 
local catvars1 race /*education*/ livearrang
local cvars2
local ivars2 married educ_hs_ind medicaid medigap tricare
local catvars2
local cvars3 
local ivars3 
local catvars3 income_quart 
local cvars4 
local ivars4 prob_dem sr_phq2_depressed metro_ind
local catvars4 region hb
local cvars5 n_helpers
local ivars5
local catvars5 help_cat
local cvars6 tot_hrswk_help_i tot_hrswk_paid_i  tot_paidhrs
local ivars6 ind_gt20hrs_wk_paid
local catvars6
local cvars7 adlcount_jenny iadlcount_jenny
local ivars7 adv_any adv_sc adverse_eat adverse_bath adverse_toil adverse_dres adv_hh adverse_laun adverse_shop adverse_meal adverse_bank adv_mob adverse_insd adverse_out adverse_bed
local catvars7 wave

forvalues i=1/7 {
	foreach x of local catvars`i' {
		di "`x'"
		local `x'
		levelsof `x', local(levels)
		foreach l of local levels {
			gen `x'`l'=`x'==`l' if !missing(`x')
			local lab : label `x' `l'
			label var `x'`l' "`lab'"
			local `x' ``x'' `x'`l'
}
		di "``x''"
		local cativars`i' `cativars`i'' ``x''
}
}

di "`catvars1'"
di "`cativars1'"

forvalues i=1/7 {
local rows `rows' `cvars`i'' `ivars`i'' `catvars`i'' `cativars`i''
}

local rn : word count `rows' 1
local r=1
local c=1

mat tab=J(`rn',4,.)
mat stars=J(`rn',4,0)

local n=_N
forvalues i=1/7 {
	foreach x of local cvars`i' {
		sum `x' [aw=anfinw], d
		mat tab[`r',`c']=r(mean)
		mat tab [`r',`c'+1]=r(sd)
		mat tab[`r',`c'+2]=r(p50)
		mat tab[`r',`c'+3]=`n'-r(N)
		local r=`r'+1
		local rownames `rownames' `x'
		
}
	foreach x of local ivars`i' {
		sum `x' [aw=anfinw] 
		if r(N)*r(mean)>=11 mat tab[`r',`c']=r(mean)*100
		if r(N)*r(mean)>=11 mat tab[`r',`c'+3]=`n'-r(N)
		local r=`r'+1
		local rownames `rownames' `x'
}
	foreach x of local catvars`i' {
		local rownames `rownames' `x'
		local r=`r'+1
		sum `x' [aw=anfinw]
		mat tab[`r',`c'+3]=`n'-r(N)
		foreach z of local `x' {
			sum `z' [aw=anfinw] 
			if r(N)*r(mean)>=11 mat tab[`r',`c']=r(mean)*100
			local r=`r'+1
			local rownames `rownames' `z'
}
}
}
mat tab[`r',`c']=`n'
	

mat rownames tab=`rownames' N

frmttable using "${outpath}\table_1_`c(current_date)'.rtf", ///
statmat(tab) title("Characteristics of Sample") ///
ctitles("" "Mean/%" "SD" "Median" "N Missing") varlabels ///
sdec(2,1,1,0) annotate(stars) asymbol(*,**) replace ///
note("Among community-dwelling SPs in 2011 & 2015 with probable dementia")




H="looking at impairment, help, and unmet need"

use "${intpath}\dem_wave_1_5_w_help_sample.dta" if !ind_no_helpers, clear
label var eat_cat "Eating"
label var toil_cat "Toileting"
label var insd_cat "Getting around inside" 
label var out_cat "Going outside" 
label var bed_cat "Transferring"
label var dres_cat "Dressing" 
label var bath_cat "Bathing" 
label var laun_cat "Laundry"
label var shop_cat "Shopping"
label var meal_cat "Meals"
label var bank_cat "Banking"

local g
foreach x in eat bath toil dres laun shop meal bank insd out bed {
sum `x'_cat if `x'_cat!=1
local n=r(N)
local lab : var label `x'_cat
graph hbar [pw=anfinw] if `x'_cat!=1, over(`x'_cat, label(labsize(small))) name(`x', replace) ytitle("`lab' (n=`n')", size(medium)) blabel(bar, format(%4.1f))
local g `g' `x' 



if inlist("`x'","eat","bath", "toil", "dres") {
graph hbar [pw=anfinw] if `x'_cat!=1 , over(`x'_mism_cat, label(labsize(small))) name(`x'sc, replace) ytitle("`lab' (n=`n')", size(medium)) blabel(bar, format(%4.1f))
	local gsc `gsc' `x'sc
}

else if inlist("`x'","laun","shop","meal","bank") {
graph hbar [pw=anfinw] if `x'_cat!=1 , over(`x'_mism_cat, label(labsize(small))) name(`x'hh, replace) ytitle("`lab' (n=`n')", size(medium)) blabel(bar, format(%4.1f))
	local ghh `ghh' `x'hh
}
else if inlist("`x'","insd","out","bed") {
	graph hbar [pw=anfinw] if `x'_cat!=1 , over(`x'_mism_cat, label(labsize(small))) name(`x'mob, replace) ytitle("`lab' (n=`n')", size(medium)) blabel(bar, format(%4.1f))
	local gmob `gmob' `x'mob
}
}

graph combine `g',  ycommon xcommon rows(3) ysize(8) xsize(15) saving("${outpath}\impairment_categories", replace)
graph export "${outpath}\impairment_categories.pdf", replace

local title Impairment Categories: Self Care
foreach x in sc hh mob {
	if "`x'"=="hh" local title Impairment Categories: Household
	else if "`x'"=="mob" local title Impairment Categories: Mobility
	graph combine `g`x'',  ycommon xcommon rows(1) ysize(4) xsize(16) saving("${outpath}\impairment_categories_`x'", replace) title("`title'") note("Restricted to those with impairment in specific activity and any help in the domain")
	graph export "${outpath}\impairment_categories_`x'.pdf", replace
}

