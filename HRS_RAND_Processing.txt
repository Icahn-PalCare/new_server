= V4 Outline MultiLine NoSorting TabWidth=30

H="First Heading"
/* 
********************HEADING******************** 

Project Name: HRS RAND Processing

Date Started: 9/23/2019

Primary Investigator:
Funding Source:

Created by: 

Primary Analyst: MH
Secondary Analyst:

Datasets Used: RAND HRS

Simple Outline: Cleaning the RAND HRS dataset.


*/
 
//STATA
// Global Macros use $ symbol to be called. 

//Intermediate Data Path
global work "D:\HRS\Shared\base_data\hrs_cleaned\working\"

// Final Data Path
global datapath "D:\HRS\Shared\base_data\hrs_cleaned\"

//Log files path
global logpath "D:\HRS\Shared\base_data\hrs_cleaned\logs\"

//RAND datapath
global randpath "D:\HRS\Shared\raw\HRS..."

cd "${work}"

H="HRS RAND reshape"
/*

Created by: MH
Date Created: 09/24/2019

Updated by: MH
Date Updated: 09/24/2019

Description: HRS RAND file pull in and begin cleaning data


**************************************************
*/
local date = subinstr("$S_DATE"," ","_",.) 
local name 1-HRS_RAND_`date'
di "`name'"

capture log close 
clear all

set more off
version 12
set linesize 80
set maxvar 20000


log using "${logs}/`name'.smcl", text replace

cd "${work}"

***************************************************

use "${randpath${year}}randhrs1992_${year}v1.dta", clear

forvalues w=$w(-1)1{
di "`w'"
rename (r`w'* s`w'* h`w'*) (*_r_`w' *_s_`w' *_h_`w')
//rename (*_r *_s) (*_1 *_2)
}

forvalues w=1/$w{
preserve
keep hhidpn  *_`w'
rename (*_`w') (*)
gen wave=`w'
tempfile wave_`w'
save "`wave_`w''"
restore
}

use "`wave_1'", clear

forvalues w=2/$w{
append using "`wave_`w''"
}

rename hhidpn_s hhidpn_sp

foreach x in r s h{
preserve
keep hhidpn hhidpn_sp wave *_`x'
//the below rename is done because these are household vars that have the same name as respondent and spouse vars. Must make sure to not overwrite vars in the merge below, since the vars can measure two seperate things. 
capture rename (sswrer_h sswrnr_h sswrxa_h oopmd_h oopmdf_h ifssi_h iirawy1_h iiraw_h ifiraw_h nhmliv_h)  (sswrer_hh sswrnr_hh sswrxa_hh oopmd_hh oopmdf_hh ifssi_hh iirawy1_hh iiraw_hh ifiraw_hh nhmliv_hh)

rename (*_`x') (*) 

gen spouse="`x'"

tempfile `x'
save ``x'', replace
restore
}

use "`r'", clear
append using "`s'"
merge m:1 hhidpn wave using "`h'", nogen

drop if proxy==. | proxy==.u

gen core_year=1992 if wave==1

local a 1994
forvalues w=2/$w{
replace core_year=`a' if wave==`w'
di "`a'"
local a=`a'+2
}

replace spouse="1" if spouse=="s"
replace spouse="0" if spouse=="r"
destring spouse, replace

/*
rename hhidpn hhidpn_o

rename (*_r *_s) (*_1 *_2)

unab mylist : *_2 

foreach v of local mylist {
	local stubs `"`stubs' `=substr("`v'",1,length("`v'")-2)'"'
	}

reshape long `stubs', i(hhidpn_o wave) j(spouse) string


forvalues w=$w 

unab mylist : *_r 

foreach v of local mylist {
	local stubs `"`stubs' `=substr("`v'",1,length("`v'")-2)'"'
	}

reshape long `stubs', i(hhidpn) j(spouse) string






foreach w in 1{
preserve
keep hhidpn  *_`w'

rename (*_r_`w' *_s_`w' *_`w') (*_r *_s *)

}

//save "${work}randwave_`w'", replace
restore
}




/*
forvalues w=1/$w{
use "${work}randwave_`w'", replace
unab mylist_`w' : *_r_`w' *_s_`w'


foreach v of local mylist_`w' {
	local stubs_`w' `"`stubs_`w'' `=substr("`v'",1,length("`v'")-2)'"'
	}

reshape long `stubs_`w'', i(hhidpn) j(year) string 

save "${work}randwave_`w'_reshape", replace
}
*/

reshape long `stubs', i(hhidpn) j(spouse) string


unab mylist : *_2

foreach v of local mylist{
	local stubs `"`stubs' `=substr("`v'",1,length("`v'")-2)'"'
	}


forvalues w=$w(-1)1{
di "`w'"
rename (h`w'*) (*_`w')
}

reshape long `stubs', i(hhidpn) j(spouse) string

//unabl mylist: *_*

reshape long peninc_, i(hhidpn rors1) j(year)

log close
translate `name'.smcl `name'.pdf
exit



H="Change log"


********************Change Log******************** 



Updates:

09/26/2019 MH
------------
Reshaping the HRS dataset to switch to long form for years and respondents/spouse. Renaming variables. Keeping years the individual is part of the survey. 

09/23/2019 MH
------------
Began adding in file paths and filling out code template. 


*/