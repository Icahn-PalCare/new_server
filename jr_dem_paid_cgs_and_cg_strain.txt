= V4 Outline MultiLine NoSorting TabWidth=30

H="Outline"
/* 
********************HEADING******************** 

Project Name: Adverse Consequences of Unmet Need among Probable Dementia Patients

Date Started: 1/7/20

Primary Investigator: Jenny Reckrey
Funding Source: GEMSSTAR

Created by: EBL

Primary Analyst: EBL
Secondary Analyst: MH

Datasets Used: nhats


*/
 
//STATA
// Global Macros use $ symbol to be called. 

//Clean NHATS 
global nhats "D:\nhats\shared\base_data\nhats cleaned"

//Intermediate Data Path
global intpath "D:\nhats\Projects\caregiving\jr_dem_paid_cgs_and_cg_strain\data\int_data"

// Final Data Path
global datapath "D:\NHATS\Projects\caregiving\jr_dem_paid_cgs_and_cg_strain\data\final_data"

//Log files path
global logpath "D:\NHATS\Projects\caregiving\jr_dem_paid_cgs_and_cg_strain\output\logs"

//Log files path
global outpath "D:\NHATS\Projects\caregiving\jr_dem_paid_cgs_and_cg_strain\output\in_progress"

H="table 1 cross-sectional"

use "${nhats}\sp_round_1_8.dta" if inlist(wave,1,5,7), clear
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
//replace income_adj= (240.007/240.007)*aveincome if wave==6
replace income_adj=income_adj/(240.007/237.017)
label var income_adj "Income, 2015$"

egen a1=rowtotal(toil_j dres_j bath_j meds_j bank_j)
gen severe=a1==5
gen sev_dem=severe==1 & prob_dem==1
label var sev_dem "Severe dementia"

svyset varunit [pw=anfinw], strat(varstrat)

//merge 1:m spid wave using `nsoc'

merge 1:m spid wave using "D:\NHATS\Shared\base_data\NHATS cleaned\nsoc_round_1_7.dta", gen(nsocm) 
drop cg_relationship_cat1
tostring spid, gen(strspid)
gen nsocid=strspid+opid
sort nsocid wave
foreach i in 1 5 7 {
by nsocid: egen has`i'=max(wave==`i')
}

gen nsoc1and5=has1==1 & has5==1
gen nsoc1and7=has1==1 & has7==1
gen nsoc5and7=has5==1 & has7==1
gen nsocall=has1==1 & has5==1 & has7==1
/*
tab1 nsoc* if prob_dem==1
tab1 nsoc* if sev_dem==1
tab1 nsoc*a* if prob_dem==1
tab1 nsoc*a* if sev_dem==1
*/
gen tot_hrswk_inf=tot_hrswk_help_i-tot_hrswk_paid_i

label var tot_hrswk_inf "Hours of care per week from all family helpers"
label var tot_hrswk_help "Hours of care per week from all helpers"
label var tot_hrswk_paid "Hours of care per week from paid help"
label var total_hours_week "Hours of care per week from primary CG (self-report NSOC)"

//composite strain
drop neg_no_routine
egen cg_strain=rowtotal(*_lv* neg*)
gen cg_strain_ind=inrange(cg_strain,5,9)
label var cg_strain_ind "Caregiver strain 5+"
label var cg_strain "Caregiver strain"

keep if cg_primary_nsoc==1 | nsocm==1
gen demw=wave if nsocm==3 & prob_dem==1
gen sdemw=wave if nsocm==3 & sev_dem==1
by spid, sort: egen fdem=min(demw)
by spid: egen fsdem=min(sdem)
gen pop=wave==fdem


local round=1
local cvars`round' age
local ivars`round' female white educ_hs_ind
local catvars`round' income_quart

local round=`round'+1
local cvars`round' income_adj
local ivars`round' medicaid married
local catvars`round' 

local round=`round'+1
local cvars`round' n_children
local ivars`round' livealone res_care 
local catvars`round' region

local round=`round'+1
local cvars`round' 
local ivars`round' metro_ind 
local catvars`round'
	
local round=`round'+1
local cvars`round' adlcount_jenny iadlcount_jenny sr_numconditions1
local ivars`round' sr_hosp_ind
local catvars`round' 
	
local round=`round'+1
local cvars`round' cg_age
local ivars`round' cg_female 
local catvars`round' cg_relationship_cat
di `round'
local round=`round'+1
local cvars`round' 
local ivars`round' cg_srh_pf work_4_pay cg_respite
local catvars`round' cg_dist_cat
	
local round=`round'+1
local cvars`round' total_hours_week n_helpers tot_hrswk_help_i n_family_helpers tot_hrswk_inf n_paid_helpers tot_hrswk_paid_i
local ivars`round' 
local catvars`round'

local round=`round'+1
local cvars`round' cg_strain
local ivars`round' cg_strain_ind diff_financial_lv_di diff_emotional_lv_di diff_physical_lv_di neg_exhausted_di neg_too_much_di neg_no_time_di
local catvars`round'


forvalues i=1/`round' {
	foreach x of local catvars`i' {
		di "`x'"
		local `x'
		levelsof `x', local(levels)
		foreach l of local levels {
			gen `x'`l'=`x'==`l' if !missing(`x')
			local lab : label `x' `l'
			label var `x'`l' "`lab'"
			local `x' ``x'' `x'`l'
}
		di "``x''"
		local cativars`i' `cativars`i'' ``x''
		local catrowvars`i' `catrowvars`i'' `x' ``x''
}
}

di "`catvars1'"
di "`cativars1'"

forvalues i=1/`round' {
	foreach x of local cvars`i' {
		local lab : var label `x'
		label var `x' "`lab', Mean"
		local crowsvars`i' `crowsvars`i'' `x' //Median //P_25 P_75
}
	local rows `rows' `crowsvars`i'' `ivars`i'' `catrowvars`i''
}

gen group1=1
gen group2= n_paid==0
gen group3=tot_hrswk_paid_i<=20 & group2==0
gen group4=tot_hrswk_paid_i>20 & group2==0 & group3==0
gen ind_20plus_paid=group2==1
replace ind_20plus_paid=2 if group3==1
replace ind_20plus_paid=3 if group4==1

local rn : word count `rows' 1
local title "Probable dementia"
local replace replace

foreach timethrough in 1 2 {
mat tab=J(`rn',7,.)
mat stars=J(`rn',7,0)
local r=1
local c=1

forvalues y=1/4 {
	sum pop if pop==1 & inlist(group`y',1) [aw=anfinw]
	mat tab[`r',`c']=r(N)
	local r=`r'+1
	forvalues i=1/`round' {
		*if inlist(`i',1,6) local r=`r'+1
		di "r=`r'"
		di "c=`c'"
		foreach x of local cvars`i' {
			sum `x' if pop==1 & inlist(group`y',1) [aw=anfinw], d
			mat tab[`r',`c']=r(mean)
			*mat tab [`r'+1,`c']=r(p50)
			*mat tab[`r'+2,`c']=r(p25)
			*mat tab[`r'+3,`c']=r(p75)
			if "`y'"=="4" {
				local cc=1
				forvalues z=4(-1)2 {
				svy, subpop(if pop==1 & group`z'==0): reg `x' ind_20plus_paid
				test ind_20plus_paid
				mat tab[`r',`c'+`cc']=r(p)
				mat stars[`r',`c'+`cc']=(r(p)<.05)+(r(p)<.01)
				local cc=`cc'+1
}
}

			local r=`r'+1
			
}
		foreach x of local ivars`i' {
			sum `z' if pop==1 & inlist(group`y',1)
			local cens=r(mean)*r(N)
			sum `x' if pop==1 & inlist(group`y',1) [aw=anfinw]
			if `cens'>=11 mat tab[`r',`c']=r(mean)*100
			if "`y'"=="4" {
				local cc=1
				forvalues z=4(-1)2 {
				if `z'==4 svy, subpop(if pop==1 & group`z'==0): tab `x' group2
				else svy, subpop(if pop==1 & group`z'==0): tab `x' group4
				mat tab[`r',`c'+`cc']=e(p_Pear)
				mat stars[`r',`c'+`cc']=(e(p_Pear)<.05)+(e(p_Pear)<.01)
				local cc=`cc'+1
}
}
			local r=`r'+1
}
		di "`catvars`i'"
		foreach x of local catvars`i' {
			if "`y'"=="4" {
				local cc=1
				forvalues z=4(-1)2 {
				if `z'==4 svy, subpop(if pop==1 & group`z'==0): tab `x' group2
				else svy, subpop(if pop==1 & group`z'==0): tab `x' group4
				mat tab[`r',`c'+`cc']=e(p_Pear)
				mat stars[`r',`c'+`cc']=(e(p_Pear)<.05)+(e(p_Pear)<.01)
				local cc=`cc'+1
}
}
			local r=`r'+1
			foreach z of local `x' {
			sum `z' if pop==1 & inlist(group`y',1)
			local cens=r(mean)*r(N)
			sum `z' if pop==1 & inlist(group`y',1) [aw=anfinw]
			if `cens'>=11	mat tab[`r',`c']=r(mean)*100
				local r=`r'+1

}
}
}

	local r=1
	local c=`c'+1
}

mat rownames tab=N `rows' 

frmttable using "${outpath}\table_1_`c(current_date)'.rtf", ///
`replace' title("Sample Characteristics, `title'") varlabels sdec(2,2,3) statmat(tab) ///
ctitles("" "Full Sample" "No Paid Care (A)" "<20hrs paid care (B)" ">20 hours (C)" "P-value: AtoB" "P-value: AtoC" "P-value: BtoC") ///
annotate(stars) asymbol(*,**) note(Observation from first NSOC with dementia/severe dementia)

local replace addtable
local title Severe Dementia
replace pop=wave==fsdem
}



H="longitudinal, waves 5&7"

use "${nhats}\sp_round_1_8.dta" if inlist(wave,5,7) & !lml, clear
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
//replace income_adj= (240.007/240.007)*aveincome if wave==6
replace income_adj=income_adj/(240.007/237.017)
label var income_adj "Income, 2015$"

egen a1=rowtotal(toil_j dres_j bath_j meds_j bank_j)
gen severe=a1==5
gen sev_dem=severe==1 & prob_dem==1
label var sev_dem "Severe dementia"

svyset varunit [pw=anfinw], strat(varstrat)

//merge 1:m spid wave using `nsoc'

merge 1:m spid wave using "D:\NHATS\Shared\base_data\NHATS cleaned\nsoc_round_1_7.dta", gen(nsocm) keep(match master)
drop cg_relationship_cat1
tostring spid, gen(strspid)
gen nsocid=strspid+opid
sort nsocid wave
foreach i in 1 5 7 {
by nsocid: egen has`i'=max(wave==`i')
}

gen nsoc1and5=has1==1 & has5==1
gen nsoc1and7=has1==1 & has7==1
gen nsoc5and7=has5==1 & has7==1
gen nsocall=has1==1 & has5==1 & has7==1
by nsocid: egen haslml=max(lml==1)

/*
tab1 nsoc* if prob_dem==1
tab1 nsoc* if sev_dem==1
tab1 nsoc*a* if prob_dem==1
tab1 nsoc*a* if sev_dem==1
*/
gen tot_hrswk_inf=tot_hrswk_help_i-tot_hrswk_paid_i

label var tot_hrswk_inf "Hours of care per week from all family helpers"
label var tot_hrswk_help "Hours of care per week from all helpers"
label var tot_hrswk_paid "Hours of care per week from paid help"
label var total_hours_week "Hours of care per week from primary CG (self-report NSOC)"

//composite strain
drop neg_no_routine
egen cg_strain=rowtotal(*_lv* neg*)
gen cg_strain_ind=inrange(cg_strain,5,9)
label var cg_strain_ind "Caregiver strain 5+"
label var cg_strain "Caregiver strain"


*keep if cg_primary_nsoc==1 | nsocm==1
gen demw=wave if nsocm==3 & prob_dem==1
gen sdemw=wave if nsocm==3 & sev_dem==1
by spid, sort: egen fdem=min(demw)
by spid: egen fsdem=min(sdem)
gen pop=fdem==5 & nsoc5and7==1 & !haslml & wave==5

//change in paid help--hours, helpers
sort nsocid wave
by nsocid: gen change_cat_1=ind_paid==0 & ind_paid[_n+1]==0
by nsocid: replace change_cat_1=2 if ind_paid==0 & ind_paid[_n+1]==1
by nsocid: replace change_cat_1=3 if ind_paid==1 & ind_paid[_n+1]==1
by nsocid: replace change_cat_1=2 if ind_paid==1 & ind_paid[_n+1]==0
label define change_cat_1 1 "No paid helper at either wave" 2 "No to yes" 3 "Paid help in both" 4 "Yes to no"
label values change_cat_1 change_cat_1

by nsocid: gen change_cat_2=ind_paid==0 & ind_paid[_n+1]==0
by nsocid: replace change_cat_2=2 if n_paid< n_paid[_n+1]
by nsocid: replace change_cat_2=3 if n_paid==n_paid[_n+1] & n_paid!=0
by nsocid: replace change_cat_2=4 if n_paid>n_paid[_n+1]

label define change_cat_2 1 "No paid helper at either wave" 2 "Fewer paid helpers in wave 5" 3 "Same (non-zero) paid helpers in both waves" 4 "Fewer in wave 7"
label values change_cat_2 change_cat_2

by nsocid: gen change_cat_3=1 if ind_paid==0 & ind_paid[_n+1]==0
by nsocid: replace change_cat_3=2 if tot_hrswk_paid<tot_hrswk_paid[_n+1]
*by nsocid: replace change_cat_3=3 if tot_hrswk_paid==tot_hrswk_paid[_n+1] & ind_paid!=0
by nsocid: replace change_cat_3=4 if tot_hrswk_paid>tot_hrswk_paid[_n+1]
label define change_cat_3 1 "No paid helper at either wave" 2 "Fewer hours of paid help in wave 5" 3 "Same (non-zero) hours" 4 "Fewer hours of paid help in wave 7"
label values change_cat_3 change_cat_3

forvalues i=2/3 {
	replace change_cat_`i'=. if change_cat_`i'==1
	
tab1 change_cat_* if pop==1
}

local title Dementia
foreach timethrough in 1 2 {
	outreg, clear
	forvalues i=1/3 {
		svy, subpop(pop): reg cg_strain i.change_cat_`i' 
		qui outreg, stats(b p) merge
}
	outreg, replay title("`title'")
	local title Severe dementia
	replace pop=0 if sev_dem==0
}

	



H="cross-sectional model"

use "${nhats}\sp_round_1_8.dta" if inlist(wave,1,5,7), clear
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
//replace income_adj= (240.007/240.007)*aveincome if wave==6
replace income_adj=income_adj/(240.007/237.017)
label var income_adj "Income, 2015$"

egen a1=rowtotal(toil_j dres_j bath_j meds_j bank_j)
gen severe=a1==5
gen sev_dem=severe==1 & prob_dem==1
label var sev_dem "Severe dementia"

qui svyset varunit [pw=anfinw], strat(varstrat)

//merge 1:m spid wave using `nsoc'

merge 1:m spid wave using "D:\NHATS\Shared\base_data\NHATS cleaned\nsoc_round_1_7.dta", gen(nsocm) 
drop cg_relationship_cat1
tostring spid, gen(strspid)
gen nsocid=strspid+opid
sort nsocid wave
foreach i in 1 5 7 {
by nsocid: egen has`i'=max(wave==`i')
}

gen nsoc1and5=has1==1 & has5==1
gen nsoc1and7=has1==1 & has7==1
gen nsoc5and7=has5==1 & has7==1
gen nsocall=has1==1 & has5==1 & has7==1
/*
tab1 nsoc* if prob_dem==1
tab1 nsoc* if sev_dem==1
tab1 nsoc*a* if prob_dem==1
tab1 nsoc*a* if sev_dem==1
*/
gen tot_hrswk_inf=tot_hrswk_help_i-tot_hrswk_paid_i

label var tot_hrswk_inf "Hours of care per week from all family helpers"
label var tot_hrswk_help "Hours of care per week from all helpers"
label var tot_hrswk_paid "Hours of care per week from paid help"
label var total_hours_week "Hours of care per week from primary CG (self-report NSOC)"

//composite strain
drop neg_no_routine
egen cg_strain=rowtotal(*_lv* neg*)
gen cg_strain_ind=inrange(cg_strain,5,9)
label var cg_strain_ind "Caregiver strain 5+"
label var cg_strain "Caregiver strain"

keep if cg_primary_nsoc==1 | nsocm==1
gen demw=wave if nsocm==3 & prob_dem==1
gen sdemw=wave if nsocm==3 & sev_dem==1
by spid, sort: egen fdem=min(demw)
by spid: egen fsdem=min(sdem)
gen pop=wave==fdem

//indicator for ADLs/IADLs with Jenny's definitions
foreach x in "" i {
	gen `x'adl_imp_j=`x'adlcount_jenny>=1
}
label var adl_imp_j "Impairment in 1+ ADLs"
label var iadl_imp_j "Impairment in 1+ IADLs"

gen ind_20plus_paid=tot_hrswk_paid_i>=20
replace ind_20plus_paid=. if tot_hrswk_paid_i>0 & tot_hrswk_paid_i<20

local xvars age female adlcount_jenny iadlcount_jenny i.cg_dist_cat total_hours_week

replace pop=0 if missing(ind_20plus_paid)

local title "Dementia"

preserve 
foreach timethrough in 1 2 {
	qui hist cg_strain if pop, width(1)

	qui svy, subpop(pop): qui reg cg_strain ind_20plus_paid
	qui outreg, stats(b p)
	qui svy, subpop(pop): qui reg cg_strain ind_20plus_paid `xvars'
	qui outreg, merge stats(b p)
	qui svy, subpop(pop): qui logit cg_strain_ind ind_20plus_paid
	qui outreg, merge stats(e_b p)
	qui svy, subpop(pop): qui logit cg_strain_ind ind_20plus_paid `xvars'
	qui outreg, merge stats(e_b p) sdec(3)
	
	outreg, replay title("`title'")
	qui replace pop=0 if !sev_dem
	local title "Severe dementia"
}


restore

foreach timethrough in 1 2 {


	svy, subpop(pop): reg cg_strain ind_20plus_paid
	svy, subpop(pop): reg cg_strain ind_20plus_paid `xvars'
	svy, subpop(pop): logit cg_strain_ind ind_20plus_paid
	svy, subpop(pop): logit cg_strain_ind ind_20plus_paid `xvars'
	
	replace pop=0 if !sev_dem
	local title "Severe dementia"
}

H="***************************"


H="Sensitivity: rerun for getting around inside"


H="Sample derivation"
//Sample derivation

use "D:\NHATS\Shared\base_data\NHATS cleaned\sp_round_1_8.dta" if wave<8, clear

//per request, include as impaired if any help

drop *adlcount_jenny
rename adl_ins_help adl_insd_help
foreach x in eat toil insd bed dres bath out {
	replace adl_`x'_help=0 if missing(adl_`x'_help)
	replace `x'_jenny=1 if adl_`x'_help==1
}

foreach x in laun meds shop meal bank {
	replace iadl_`x'_help=0 if missing(iadl_`x'_help)
	replace `x'_jenny=1 if iadl_`x'_help==1
}
egen adlcount_jenny=rowtotal(eat_j toil_j insd_j bed_j dres_j bath_j)
egen iadlcount_jenny=rowtotal(laun_j meds_j shop_j meal_j bank_j)

local samplevars all inrange spivw nonh nolml prob_dem insd_jenny //anyh

gen all=1
gen inrange=inlist(wave,1,5)
gen spivw=sp_ivw==1
gen nonh=!nhres
gen nolml=!lml
gen anyh=n_help>0
label var all "All NHATS waves 1-7"
label var inrange "Wave 1 and/or 5"
label var spivw "SP interview completed"
label var nonh "Community dwelling at interview"
label var nolml "Non-deceased (not LML ivw)"
label var anyh "Receives any help"

local rn : word count `samplevars'

mat tab=J(`rn',3,.)
local r=1

local denom=_N

foreach x of local samplevars {
	keep if `x'==1
	mat tab[`r',1]=`denom'-_N
	local denom=_N
	mat tab[`r',2]=_N
	duplicates report spid
	mat tab[`r',3]=r(unique_value)
	local r=`r'+1
}

mat rownames tab=`samplevars'

frmttable using "${outpath}\sample_derivation_iside.rtf", statmat(tab) varlabels sdec(0) title("Sample Derivation") ///
ctitles("" "Interviews don't meet" "Interviews do meet" "Unique SPs") replace


//clean/add variables
gen ind_gt20hrs_tot=tot_hrswk_help_i>=20
label var ind_gt20hrs_tot "Total hrs/week of help >=20"
label var tot_paidhrs "Total help: >20hrs wk"
rename homebound_cat hb
rename race_cat race
gen help_cat=ind_no_helpers
replace help_cat=2 if !ind_paid & n_helpers
replace help_cat=3 if n_helpers>n_paid & ind_paid
replace help_cat=4 if n_helpers==n_paid & ind_paid
label var help_cat "Caregiving, categorical"
label define help_cat 1 "No helpers" 2 "Informal help only" 3 "Informal & paid" ///
4 "Paid help only"
label values help_cat help_cat

//get impairment/help/unmet need in same categories
drop eatdev dress dresd
egen adv_any=rowmax(adverse*)
egen adv_sc=rowmax(adverse_eat adverse_bath adverse_toil adverse_dres)
egen adv_hh=rowmax(adverse_laun adverse_shop adverse_meal adverse_bank)
egen adv_mob=rowmax(adverse_insd adverse_out adverse_bed)
label var adv_any "Any adverse consequence of unmet need"
label var adv_sc "Adverse consequence of unmet self-care need"
label var adv_hh "Adverse consequence of unmet household need"
label var adv_mob "Adverse consequence of unmet mobility need"

egen impair_sc=rowmax(eat bath toil dres)
egen impair_hh=rowmax(laun shop meal_j bank_j)
egen impair_mob=rowmax(insd out_jenny bed)
egen impair_any=rowmax(impair_*)
label var impair_any "Any impairment"
label var impair_sc "Self-care impairment"
label var impair_hh "Household impairment"
label var impair_mob "Mobility impairment"

/*
label define impcat 1 "No impairment or help" 2 "Impairment, no help, no adverse consequences" ///
3 "Impairment & help, no adverse consequences" 4 "No impairment, but help, no adverse consequences" 5 "No help, adverse consequences" 6 "Help, adverse consequences"

foreach x in eat toil insd bed dres bath laun shop meal bank {
	rename *adl_`x'_help adl_`x'_help
	gen `x'_cat=`x'_jenny+1 
	replace `x'_cat=3 if adl_`x'_help==1 & `x'_jenny==1 & adverse_`x'==0
	replace `x'_cat=4 if adl_`x'_help==1 & `x'_jenny==0 & adverse_`x'==0
	replace `x'_cat=5 if adl_`x'_help==0 & adverse_`x'==1
	replace `x'_cat=6 if adl_`x'_help==1 & adverse_`x'==1
	label values `x'_cat impcat
}*/

//8/23/19--updated and down to three categories

label define impcat 1 "No impairment" 2 "Impairment but no help, no adverse consequences" 3 "Help with task, no adverse consequences" 4 "No help, adverse consequences" 5 "Help, adverse consequences"

foreach x in eat toil insd bed dres bath laun shop meal bank out {
	rename *adl_`x'_help adl_`x'_help
	gen `x'_cat=`x'_jenny+1 
	replace `x'_cat=3 if adl_`x'_help==1 & `x'_jenny==1 & adverse_`x'==0
	replace `x'_cat=4 if adl_`x'_help==0 & adverse_`x'==1
	replace `x'_cat=5 if adl_`x'_help==1 & adverse_`x'==1
	label values `x'_cat impcat
	gen `x'_mismatch=inlist(`x'_cat,2,4) if `x'_cat>1
	label var `x'_mismatch "Impairment in `x' but no help"
}

label var toil_mismatch "Impairment in toileting but no help"

egen sc_jenny=rowmax(eat_j toil_j insd_j bath_j)
egen hh_jenny=rowmax(laun_j shop_j meal_j bank_j)
egen mob_jenny=rowmax(insd_j out_j bed_j)

local sc eat toil dres bath
local hh laun shop meal bank
local mob insd out bed

foreach x in sc hh mob {
	local help
	gen `x'met=0
	gen `x'insuf=0
	gen `x'mism=0
	foreach y of local `x' {
		local help `help' adl_`y'_help
		replace `x'met=1 if `y'_cat==3
		replace `x'insuf=1 if `y'_cat==5
		replace `x'mism=1 if `y'_cat==4
}
	egen `x'_help=rowmax(`help')
	replace `x'_jenny=`x'_jenny+1
	replace `x'_jenny=4 if adv_`x'==1
	replace `x'_jenny=3 if `x'_help==1
	foreach y of local `x' {
		gen `y'_mism_cat=1 if adverse_`y'==0 & `x'_help==0
		replace `y'_mism_cat=2 if adl_`y'_help==0 & `x'_help==1
		replace `y'_mism_cat=3 if adl_`y'_help==1 & adverse_`y'==0
		replace `y'_mism_cat=4 if `x'_help==0 & adverse_`y'==1
		replace `y'_mism_cat=5 if `x'_help==1 & adl_`y'_help==0 & adverse_`y'==1
		replace `y'_mism_cat=6 if adl_`y'_help==1 & adverse_`y'==1

		label define `y'_mism_cat 1 "No help in domain or adverse consequences" 2 "Help in domain but not with task, no consequences" 3 "Help with task, no consequences" 4 "No help in domain, consequences" 5 "Help within domain but not task, consequences" 6 "Matched help, adverse consequences"
		label values `y'_mism_cat `y'_mism_cat
}
}


	
replace livearrang=0 if rcfres==1 & livearrang==1
label define livearrang 0 "Alone, residential care facility" 1 "Alone, independent", modify	
save "${intpath}\dem_wave_1_5_w_help_sample.dta", replace

H="tables, etc."
 //tables looking at insdeting mismatch

use "${intpath}\dem_wave_1_5_w_help_sample.dta", clear

gen lva=livearr+1
replace lva=lva-1 if lva>1
label define lva 1 "Lives alone" 2 "Lives with spouse only" 3 "Lives with spouse+" 4 "Lives with others"
label values lva lva
label copy helpcat prim_helper_cat
keep if insd_jenny==1 //& !ind_no_helpers
sort spid wave
by spid: keep if _n==1
gen pop=1
merge 1:1 spid wave using "${nhats}\sp_round_1_8.dta", nogen
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
//replace income_adj= (240.007/240.007)*aveincome if wave==6
replace income_adj=income_adj/(240.007/237.017)
label var income_adj "Income, 2015$"

egen a1=rowtotal(toil_j dres_j bath_j meds_j bank_j)
gen severe=a1==5
gen sev_dem=severe==1 & prob_dem==1
label var sev_dem "Severe dementia"

keep if inlist(wave,1,5)
svyset varunit [pw=anfinw], strat(varstrat)

replace pop=0 if missing(pop)

foreach x of varlist tot_*_i {
replace `x'=0 if n_helpers==0 
}
replace ind_gt20hrs_wk_paid=0 if n_helpers==0

gen only1=n_helpers==1
label var only1 "Only one helper
gen gt3=n_helpers>=3
label var gt3 "3+ helpers"
local cvars1 age
local ivars1 female white educ_hs_ind 
local catvars1 income_quart
local cvars2 income_adj
local ivars2 medicaid married 
local catvars2 lva
local cvars3 n_children
local ivars3 
local catvars3 prim_helper_cat
local ivars4 rcfres metro_ind
local catvars4 region
local ivars5 ind_no_helpers ind_paid_helper adl_insd_help insd_mismatch
local cvars6 tot_hrswk_help_i tot_hrswk_paid_i n_helpers sr_numconditions1 
local ivars6 sr_phq2_depressed sev_dem sr_hosp_ind 
local cvars7 adlcount_jenny iadlcount_jenny 
local ivars7 died_12



forvalues time=1/7 {

foreach x of local catvars`time' {
	local `x'
	levelsof `x', local(levels)
		foreach l of local levels {
			di "`l'"
			gen `x'`l'=`x'==`l' if !missing(`x')
			local lab : label `x' `l'
			label var `x'`l' "`lab'"
			local `x' ``x'' `x'`l'
}
		local cativars`time' `cativars`time'' ``x''
}
}


local rn : word count `cvars1' `ivars1' `cativars1' `cvars2' `ivars2' `cativars2'  `cvars3' `ivars3' `cativars3'  `cvars4' `ivars4' `cativars4'  `cvars5' `ivars5' `cativars5'  `cvars6' `ivars6' `cativars6'  `cvars7' `ivars7' `cativars7' 
di `rn'
local r=1
local c=1

tokenize 2 1 3
mat tab=J(`rn'+1,4,.)
mat stars=J(`rn'+1,4,0)

foreach i in "0,1" 0 1 {
forvalues time=1/7 {
foreach x of local cvars`time' {
		sum `x' [aw=anfinw] if inlist(adverse_insd,`i') & pop==1
		mat tab[`r',`c']=r(mean)
		*mat tab[`r',`c']=r(sd)
	svy, subpop(if pop==1): reg `x' adverse_insd 
	test adverse_insd
	mat tab[`r',4]=r(p)
	mat stars[`r',4]=(r(p)<.05)+(r(p)<.01)

	local r=`r'+1

}



foreach x of local ivars`time' {
		sum `x' [aw=anfinw] if inlist(adverse_insd,`i') & pop==1
		*if r(N)*r(mean)>=11 | r(mean)*r(N)==0 | r(N)==r(N)*r(mean) mat tab[`r',`c']=r(mean)*r(N)

		if r(N)*r(mean)>=11 | r(mean)*r(N)==0 | r(N)==r(N)*r(mean)  mat tab[`r',`c']=r(mean)*100
		else mat stars[`r',`c']=3
	svy, subpop(if pop==1): tab `x' adverse_insd 
	mat tab[`r',4]=e(p_Pear)
	mat stars[`r',4]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
	local r=`r'+1
}

foreach y of local catvars`time' {
	svy, subpop(if pop==1): tab `y' adverse_insd 
	mat tab[`r',4]=e(p_Pear)
	mat stars[`r',4]=(e(p_Pear)<.05)+(e(p_Pear)<.01)

	foreach x of local `y' {
			sum `x' [aw=anfinw] if inlist(adverse_insd,`i') & pop==1
			*if r(N)*r(mean)>=11 | r(mean)*r(N)==0 | r(N)==r(N)*r(mean) mat tab[`r',`c']=r(mean)*r(N)
			if r(N)*r(mean)>=11 | r(mean)*r(N)==0 | r(N)==r(N)*r(mean)  mat tab[`r',`c']=r(mean)*100
			else mat stars[`r',`c']=3
		local r=`r'+1

}
}
}




	sum adverse_insd if inlist(adverse_insd,`i') & pop==1
	mat tab[`r',`c']=r(N)
local r=1
local c=`c'+1

}



mat rownames tab= `cvars1' `ivars1' `cativars1' `cvars2' `ivars2' `cativars2'  `cvars3' `ivars3' `cativars3'  `cvars4' `ivars4' `cativars4'  `cvars5' `ivars5' `cativars5'  `cvars6' `ivars6' `cativars6'  `cvars7' `ivars7' `cativars7'  N

frmttable using "${outpath}\table_1_`c(current_date)'_inside.rtf", ///
statmat(tab) title("Characteristics of Sample") ///
ctitles("" "Full sample" "No adverse consequences" "Yes adverse consequences" "P-value") varlabels ///
sdec(2,2,3) annotate(stars) asymbol(*,**,NR) replace ///
note("Among community-dwelling SPs in 2011 & 2015 with probable dementia and impairment in getting around inside")

//Venn diagram.  
rename gt3 ind_gt3_helpers

*pvenn2 insd_mismatch ind_gt20hrs_tot ind_gt3_helpers

//look at 40 hours
gen ind_gt40hrs=tot_hrswk_help_i>=40
gen insd_match=!insd_mismatch
preserve
keep if pop==1

pvenn2 insd_match ind_gt40hrs ind_gt3_helpers, nolabel //legend(off)
graph save "${outpath}\venn_inside", replace
graph export "${outpath}\venn_inside.pdf", replace

restore
replace govtasst=0 if missing(govtasst) 
set seed 123
mi set wide
mi register imputed medicaid
mi impute logit medicaid c.aveincome##i.income_quart i.educ_ i.race meals_wheels ownhome govtasst, add(5) force
*predict pmcaid gend ind_miss_mcaid=missing(medicaid)
*replace medicaid=pmcaid>=.5 if missing(medicaid) & !missing(pmcaid)

log using "${outpath}\model_inside", replace
mi estimate: svy, subpop(pop): logit adverse_insd adl_insd_help ind_gt40hrs age female married white medicaid ind_no_help, or
log close
translate "${outpath}\model_inside.smcl" "${outpath}\model_inside.pdf", replace


H="*********************"


H="table looking at toileting mismatch"
//tables looking at toileting mismatch

use "${intpath}\dem_wave_1_5_w_help_sample.dta", clear

keep if toil_jenny==1 & !ind_no_helpers
gen pop=1
merge 1:1 spid wave using "${nhats}\sp_round_1_8.dta", nogen
gen income_adj=0
replace income_adj= (240.007/224.939)*aveincome if wave==1
replace income_adj= (240.007/229.594)*aveincome if wave==2
replace income_adj= (240.007/232.957)*aveincome if wave==3
replace income_adj= (240.007/236.736)*aveincome if wave==4
replace income_adj= (240.007/237.017)*aveincome if wave==5
//replace income_adj= (240.007/240.007)*aveincome if wave==6
replace income_adj=income_adj/(240.007/237.017)
label var income_adj "Income, 2015$"

keep if inlist(wave,1,5)
svyset varunit [pw=anfinw], strat(varstrat)

replace pop=0 if missing(pop)

foreach x of varlist tot_*_i {
replace `x'=0 if n_helpers==0 
}
replace ind_gt20hrs_wk_paid=0 if n_helpers==0

gen only1=n_helpers==1
label var only1 "Only one helper
gen gt3=n_helpers>=3
label var gt3 "3+ helpers"
local cvars1
local ivars1 ind_gt20hrs_tot only1 gt3 ind_gt20hrs_wk_inf ind_paid_helper ind_gt20hrs_wk_paid married livealone rcfres medicaid adverse_toil
local cvars2  income_adj
local catvars2 income_quart

foreach time in 1 2 {

foreach x of local catvars`time' {
	local `x'
	levelsof `x', local(levels)
		foreach l of local levels {
			di "`l'"
			gen `x'`l'=`x'==`l' if !missing(`x')
			local lab : label `x' `l'
			label var `x'`l' "`lab'"
			local `x' ``x'' `x'`l'
}
		local cativars`time' `cativars`time'' ``x''
}
}


local rn : word count `cvars1' `ivars1' `cativars1' `cvars2' `ivars2' `cativars2' 
di `rn'
local r=1
local c=1

tokenize 2 1 3
mat tab=J(`rn'+1,4,.)
mat stars=J(`rn'+1,4,0)

foreach i in "0,1" 0 1 {
foreach time in 1 2 {
foreach x of local cvars`time' {
		sum `x' [aw=anfinw] if inlist(toil_mismatch,`i') & pop==1
		mat tab[`r',`c']=r(mean)
		*mat tab[`r',`c']=r(sd)
	svy, subpop(if pop==1): reg `x' toil_mismatch 
	test toil_mismatch
	mat tab[`r',4]=r(p)
	mat stars[`r',4]=(r(p)<.05)+(r(p)<.01)

	local r=`r'+1

}



foreach x of local ivars`time' {
		sum `x' [aw=anfinw] if inlist(toil_mismatch,`i') & pop==1
		*if r(N)*r(mean)>=11 | r(mean)*r(N)==0 | r(N)==r(N)*r(mean) mat tab[`r',`c']=r(mean)*r(N)

		if r(N)*r(mean)>=11 | r(mean)*r(N)==0 | r(N)==r(N)*r(mean)  mat tab[`r',`c']=r(mean)*100
		else mat stars[`r',`c']=3
	svy, subpop(if pop==1): tab `x' toil_mismatch 
	mat tab[`r',4]=e(p_Pear)
	mat stars[`r',4]=(e(p_Pear)<.05)+(e(p_Pear)<.01)
	local r=`r'+1
}

foreach y of local catvars`time' {
	svy, subpop(if pop==1): tab `y' toil_mismatch 
	mat tab[`r',4]=e(p_Pear)
	mat stars[`r',4]=(e(p_Pear)<.05)+(e(p_Pear)<.01)

	foreach x of local `y' {
			sum `x' [aw=anfinw] if inlist(toil_mismatch,`i') & pop==1
			*if r(N)*r(mean)>=11 | r(mean)*r(N)==0 | r(N)==r(N)*r(mean) mat tab[`r',`c']=r(mean)*r(N)
			if r(N)*r(mean)>=11 | r(mean)*r(N)==0 | r(N)==r(N)*r(mean)  mat tab[`r',`c']=r(mean)*100
			else mat stars[`r',`c']=3
		local r=`r'+1

}
}
}




	sum toil_mismatch if inlist(toil_mismatch,`i') & pop==1
	mat tab[`r',`c']=r(N)
local r=1
local c=`c'+1

}



mat rownames tab= `cvars1' `ivars1' `cativars1' `cvars2' `ivars2' `cativars2'  N

frmttable using "${outpath}\table_1_`c(current_date)'.rtf", ///
statmat(tab) title("Characteristics of Sample") ///
ctitles("" "Full sample" "Help" "No help") varlabels ///
sdec(2,2,3) annotate(stars) asymbol(*,**) replace ///
note("Among community-dwelling SPs in 2011 & 2015 with probable dementia and impairment in toileting")





H="look at mismatch in domains"


H="changelog"
12/16/19-Updated so thre's only one obs per person

10/4/19-Updated the table to run on adverse consequences of toileting.

9/16/19-Belatedly created change log. Evan.
